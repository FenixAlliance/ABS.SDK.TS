/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */


export interface paths {
  "/api/v2/LearningService/CourseCertificates": {
    get: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["CourseCompletionCertificateDtoListEnvelope"];
            "application/xml": components["schemas"]["CourseCompletionCertificateDtoListEnvelope"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    post: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["CourseCompletionCertificateCreateDto"];
          "application/xml": components["schemas"]["CourseCompletionCertificateCreateDto"];
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["EmptyEnvelope"];
            "application/xml": components["schemas"]["EmptyEnvelope"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/LearningService/CourseCertificates/{CourseCertificateId}": {
    get: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          courseCertificateId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["CourseCompletionCertificateDtoEnvelope"];
            "application/xml": components["schemas"]["CourseCompletionCertificateDtoEnvelope"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    put: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          courseCertificateId: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["CourseCompletionCertificateUpdateDto"];
          "application/xml": components["schemas"]["CourseCompletionCertificateUpdateDto"];
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["EmptyEnvelope"];
            "application/xml": components["schemas"]["EmptyEnvelope"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    delete: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          courseCertificateId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["EmptyEnvelope"];
            "application/xml": components["schemas"]["EmptyEnvelope"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/LearningService/CourseCertificates/Template": {
    get: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["CourseCertificateTemplateDtoListEnvelope"];
            "application/xml": components["schemas"]["CourseCertificateTemplateDtoListEnvelope"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    post: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["CourseCertificateTemplateCreateDto"];
          "application/xml": components["schemas"]["CourseCertificateTemplateCreateDto"];
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["EmptyEnvelope"];
            "application/xml": components["schemas"]["EmptyEnvelope"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/LearningService/CourseCertificates/Template/{CourseCertificateTemplateId}": {
    get: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          courseCertificateTemplateId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["CourseCertificateTemplateDtoEnvelope"];
            "application/xml": components["schemas"]["CourseCertificateTemplateDtoEnvelope"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    delete: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          courseCertificateTemplateId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["EmptyEnvelope"];
            "application/xml": components["schemas"]["EmptyEnvelope"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/LearningService/CourseEnrollments": {
    get: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["CourseEnrollmentDtoListEnvelope"];
            "application/xml": components["schemas"]["CourseEnrollmentDtoListEnvelope"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    post: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["CourseEnrollmentCreateDto"];
          "application/xml": components["schemas"]["CourseEnrollmentCreateDto"];
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["EmptyEnvelope"];
            "application/xml": components["schemas"]["EmptyEnvelope"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/LearningService/CourseEnrollments/Count": {
    get: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["Int32Envelope"];
            "application/xml": components["schemas"]["Int32Envelope"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/LearningService/CourseEnrollments/{courseEnrollmentId}": {
    get: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          courseEnrollmentId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["CourseEnrollmentDtoEnvelope"];
            "application/xml": components["schemas"]["CourseEnrollmentDtoEnvelope"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    put: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          courseEnrollmentId: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["CourseEnrollmentUpdateDto"];
          "application/xml": components["schemas"]["CourseEnrollmentUpdateDto"];
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["EmptyEnvelope"];
            "application/xml": components["schemas"]["EmptyEnvelope"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    delete: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          courseEnrollmentId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["EmptyEnvelope"];
            "application/xml": components["schemas"]["EmptyEnvelope"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/LearningService/CourseEnrollments/Course/{courseId}": {
    get: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          courseId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["CourseEnrollmentDtoListEnvelope"];
            "application/xml": components["schemas"]["CourseEnrollmentDtoListEnvelope"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/LearningService/CourseEnrollments/Student/{studentProfileId}": {
    get: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          studentProfileId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["CourseEnrollmentDtoListEnvelope"];
            "application/xml": components["schemas"]["CourseEnrollmentDtoListEnvelope"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/LearningService/Courses": {
    get: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["CourseDtoListEnvelope"];
            "application/xml": components["schemas"]["CourseDtoListEnvelope"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/LearningService/Courses/Count": {
    get: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["Int32Envelope"];
            "application/xml": components["schemas"]["Int32Envelope"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/LearningService/Courses/{courseId}": {
    get: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          courseId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["CourseDtoEnvelope"];
            "application/xml": components["schemas"]["CourseDtoEnvelope"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    put: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          courseId: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["CourseUpdateDto"];
          "application/xml": components["schemas"]["CourseUpdateDto"];
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["EmptyEnvelope"];
            "application/xml": components["schemas"]["EmptyEnvelope"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    delete: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          courseId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["EmptyEnvelope"];
            "application/xml": components["schemas"]["EmptyEnvelope"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/LearningService/InstructorProfiles": {
    get: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["InstructorProfileDtoListEnvelope"];
            "application/xml": components["schemas"]["InstructorProfileDtoListEnvelope"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    post: {
      parameters: {
        query?: {
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["InstructorProfileCreateDto"];
          "application/xml": components["schemas"]["InstructorProfileCreateDto"];
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["EmptyEnvelope"];
            "application/xml": components["schemas"]["EmptyEnvelope"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/LearningService/InstructorProfiles/{InstructorProfileId}": {
    get: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          instructorProfileId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["InstructorProfileDtoEnvelope"];
            "application/xml": components["schemas"]["InstructorProfileDtoEnvelope"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    put: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          instructorProfileId: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["InstructorProfileUpdateDto"];
          "application/xml": components["schemas"]["InstructorProfileUpdateDto"];
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["EmptyEnvelope"];
            "application/xml": components["schemas"]["EmptyEnvelope"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    delete: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          instructorProfileId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["EmptyEnvelope"];
            "application/xml": components["schemas"]["EmptyEnvelope"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/LearningService/StudentProfiles": {
    get: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["StudentProfileDtoListEnvelope"];
            "application/xml": components["schemas"]["StudentProfileDtoListEnvelope"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    post: {
      parameters: {
        query?: {
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["StudentProfileCreateDto"];
          "application/xml": components["schemas"]["StudentProfileCreateDto"];
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["EmptyEnvelope"];
            "application/xml": components["schemas"]["EmptyEnvelope"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/LearningService/StudentProfiles/{studentProfileId}": {
    get: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          studentProfileId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["StudentProfileDtoEnvelope"];
            "application/xml": components["schemas"]["StudentProfileDtoEnvelope"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    delete: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          studentProfileId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["EmptyEnvelope"];
            "application/xml": components["schemas"]["EmptyEnvelope"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/LearningService/StudentProfiles/{StudentProfileId}": {
    put: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          studentProfileId: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["StudentProfileUpdateDto"];
          "application/xml": components["schemas"]["StudentProfileUpdateDto"];
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["EmptyEnvelope"];
            "application/xml": components["schemas"]["EmptyEnvelope"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/LearningService/StudentProfiles/{studentProfileId}/Average": {
    get: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          studentProfileId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["AverageDtoEnvelope"];
            "application/xml": components["schemas"]["AverageDtoEnvelope"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/LearningService/StudentProfiles/{studentProfileId}/HoursCompleted": {
    get: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          studentProfileId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["CountDtoEnvelope"];
            "application/xml": components["schemas"]["CountDtoEnvelope"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: {
    AverageDto: {
      id?: string | null;
      /** Format: date-time */
      timestamp?: string | null;
      /** Format: double */
      average?: number;
    };
    AverageDtoEnvelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
      result?: components["schemas"]["AverageDto"];
    };
    CountDto: {
      id?: string | null;
      /** Format: date-time */
      timestamp?: string | null;
      /** Format: int32 */
      count?: number;
    };
    CountDtoEnvelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
      result?: components["schemas"]["CountDto"];
    };
    CourseCertificateTemplateCreateDto: {
      /** Format: uuid */
      id?: string;
      /** Format: date-time */
      timestamp?: string;
      courseID: string;
      businessID: string;
      webPortalID?: string | null;
      websiteThemeID?: string | null;
      businessProfileRecordID?: string | null;
      socialProfileID?: string | null;
      parentWebContentID?: string | null;
      parentWebContentVersionID?: string | null;
    };
    CourseCertificateTemplateDto: {
      id?: string | null;
      /** Format: date-time */
      timestamp?: string | null;
      courseID?: string | null;
      businessID?: string | null;
      webPortalID?: string | null;
      websiteThemeID?: string | null;
      businessProfileRecordID?: string | null;
      socialProfileID?: string | null;
      parentWebContentID?: string | null;
      parentWebContentVersionID?: string | null;
    };
    CourseCertificateTemplateDtoEnvelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
      result?: components["schemas"]["CourseCertificateTemplateDto"];
    };
    CourseCertificateTemplateDtoListEnvelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
      result?: components["schemas"]["CourseCertificateTemplateDto"][] | null;
    };
    CourseCompletionCertificateCreateDto: {
      /** Format: uuid */
      id?: string;
      /** Format: date-time */
      timestamp?: string;
      studentProfileID: string;
      courseEnrollmentID: string;
      businessID?: string | null;
      businessProfileRecordID?: string | null;
      courseCompletionCertificateTemplateID?: string | null;
      courseID?: string | null;
    };
    CourseCompletionCertificateDto: {
      id?: string | null;
      /** Format: date-time */
      timestamp?: string | null;
      studentProfileID?: string | null;
      courseEnrollmentID?: string | null;
      businessID?: string | null;
      businessProfileRecordID?: string | null;
      courseCompletionCertificateTemplateID?: string | null;
      courseID?: string | null;
    };
    CourseCompletionCertificateDtoEnvelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
      result?: components["schemas"]["CourseCompletionCertificateDto"];
    };
    CourseCompletionCertificateDtoListEnvelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
      result?: components["schemas"]["CourseCompletionCertificateDto"][] | null;
    };
    CourseCompletionCertificateUpdateDto: {
      studentProfileID?: string | null;
      courseEnrollmentID?: string | null;
      businessID?: string | null;
      businessProfileRecordID?: string | null;
      courseCompletionCertificateTemplateID?: string | null;
      courseID?: string | null;
    };
    CourseDto: {
      id?: string | null;
      /** Format: date-time */
      timestamp?: string | null;
      sku?: string | null;
      upc?: string | null;
      ean?: string | null;
      mpn?: string | null;
      skUs?: string | null;
      isbn?: string | null;
      upCs?: string | null;
      eaNs?: string | null;
      asin?: string | null;
      gtin?: string | null;
      mpNs?: string | null;
      part?: string | null;
      name?: string | null;
      isbNs?: string | null;
      asiNs?: string | null;
      gtiNs?: string | null;
      model?: string | null;
      title?: string | null;
      color?: string | null;
      isbN13?: string | null;
      unspsc?: string | null;
      unitId?: string | null;
      series?: string | null;
      barcode?: string | null;
      unspsCs?: string | null;
      pattern?: string | null;
      summary?: string | null;
      brandId?: string | null;
      features?: string | null;
      material?: string | null;
      tenantId?: string | null;
      permalink?: string | null;
      brandName?: string | null;
      languageId?: string | null;
      itemTypeId?: string | null;
      categoryId?: string | null;
      currencyId?: string | null;
      unitGroupId?: string | null;
      description?: string | null;
      ingredients?: string | null;
      releaseDate?: string | null;
      enrollmentId?: string | null;
      supplierCode?: string | null;
      shipsToRules?: string | null;
      purchaseNote?: string | null;
      parentItemId?: string | null;
      itemTypeName?: string | null;
      discriminator?: string | null;
      tariffHeading?: string | null;
      nutritionFacts?: string | null;
      mozaicCoverUrl?: string | null;
      packageContent?: string | null;
      youtubeVideoId?: string | null;
      primaryImageUrl?: string | null;
      longDescription?: string | null;
      measurementUnit?: string | null;
      shortDescription?: string | null;
      googleCategories?: string | null;
      supplierProfileId?: string | null;
      shippingCountryId?: string | null;
      systemRequirements?: string | null;
      customTaxDescription?: string | null;
      officialDescriptionUrl?: string | null;
      energyEfficiencyRating?: string | null;
      pageCoverBackgroundUrl?: string | null;
      primaryGoogleCategoryId?: string | null;
      operatingSystemSupported?: string | null;
      supportedOperatingSystem?: string | null;
      primaryGoogleCategoryName?: string | null;
      hot?: boolean;
      onSale?: boolean;
      auction?: boolean;
      deleted?: boolean;
      digital?: boolean;
      preSale?: boolean;
      taxable?: boolean;
      inStock?: boolean;
      featured?: boolean;
      trending?: boolean;
      lowStock?: boolean;
      published?: boolean;
      byRequest?: boolean;
      onDiscount?: boolean;
      isDailyDeal?: boolean;
      isNewArrival?: boolean;
      isWeeklyDeal?: boolean;
      isBestSeller?: boolean;
      isMonthlyDeal?: boolean;
      hasVariations?: boolean;
      isFixedDiscount?: boolean;
      isDealersChoice?: boolean;
      manageInventory?: boolean;
      isOfficialChoice?: boolean;
      validPrimaryImage?: boolean;
      isDeadlineDiscount?: boolean;
      displayShowcaseTab?: boolean;
      taxIncludedInPrice?: boolean;
      isProductOfTheWeek?: boolean;
      isProductOfTheMonth?: boolean;
      isPercentageDiscount?: boolean;
      displayOnGlobalMozaic?: boolean;
      displayOnBrandsMozaic?: boolean;
      disableDefaultPolicies?: boolean;
      displayOnCategoryMozaic?: boolean;
      displayDescriptionEditor?: boolean;
      displayShortDescriptionEditor?: boolean;
      displayOnBannerMarketingRotation?: boolean;
      /** Format: date-time */
      auctionEnd?: string | null;
      /** Format: date-time */
      auctionStart?: string | null;
      /** Format: date-time */
      publishedDate?: string | null;
      /** Format: date-time */
      deadlineDiscountFromDate?: string | null;
      /** Format: date-time */
      deadlineDiscountDueDate?: string | null;
      /** Format: date-time */
      lastFixedPricesUpdateDateTime?: string | null;
      images?: string[] | null;
      /** Format: int32 */
      viewsCount?: number;
      /** Format: int32 */
      reviewsCount?: number;
      /** Format: int32 */
      questionsCount?: number;
      /** Format: int32 */
      packagedQuantity?: number;
      /** Format: double */
      reviewsAvg?: number | null;
      /** Format: double */
      recurrency?: number;
      /** Format: double */
      currentStock?: number;
      /** Format: double */
      width?: number | null;
      /** Format: double */
      weight?: number | null;
      /** Format: double */
      length?: number | null;
      /** Format: double */
      height?: number | null;
      /** Format: double */
      regularPrice?: number | null;
      /** Format: double */
      discountPrice?: number | null;
      /** Format: double */
      customTaxValue?: number | null;
      /** Format: double */
      discountAmount?: number | null;
      /** Format: double */
      inCartQuantity?: number | null;
      /** Format: double */
      customTaxAmount?: number | null;
      /** Format: double */
      discountPercentage?: number | null;
      /** Format: double */
      customTaxPercentage?: number | null;
      /** Format: double */
      estimatedTaxesInUsd?: number | null;
      /** Format: double */
      estimatedProfitInUsd?: number | null;
      /** Format: double */
      estimatedBasePriceInUsd?: number | null;
      /** Format: double */
      estimatedDiscountsInUsd?: number | null;
      /** Format: double */
      estimatedSurchargesInUsd?: number | null;
      /** Format: double */
      estimatedPaymentTaxInUsd?: number | null;
      /** Format: double */
      estimatedTotalPriceInUsd?: number | null;
      /** Format: double */
      estimatedPaymentCostInUsd?: number | null;
      /** Format: double */
      estimatedDealSavingsInUsd?: number | null;
      /** Format: double */
      estimatedRegularPriceInUsd?: number | null;
      /** Format: double */
      estimatedTaxBasePriceInUsd?: number | null;
      /** Format: double */
      estimatedWithholdingTaxesInUsd?: number | null;
      /** Format: double */
      estimatedDefaultShippingTaxInUsd?: number | null;
      /** Format: double */
      estimatedDefaultShippingCostInUsd?: number | null;
      selectedTags?: string[] | null;
      selectedTypes?: string[] | null;
      selectedBrands?: string[] | null;
      selectedCategories?: string[] | null;
      selectedTaxPolicies?: string[] | null;
      selectedPricingRules?: string[] | null;
      selectedRefundPolicies?: string[] | null;
      selectedReturnPolicies?: string[] | null;
      selectedPricingPolicies?: string[] | null;
      selectedGoogleCategories?: string[] | null;
      selectedWarrantyPolicies?: string[] | null;
      selectedShipmentPolicies?: string[] | null;
      selectedAttributesOptions?: string[] | null;
      selectedSellingMarginPolicies?: string[] | null;
    };
    CourseDtoEnvelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
      result?: components["schemas"]["CourseDto"];
    };
    CourseDtoListEnvelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
      result?: components["schemas"]["CourseDto"][] | null;
    };
    CourseEnrollmentCreateDto: {
      /** Format: uuid */
      id?: string;
      /** Format: date-time */
      timestamp?: string;
      courseID?: string | null;
      courseCohortID?: string | null;
      studentProfileID?: string | null;
      businessProfileRecordID?: string | null;
      courseCompletionCertificateID?: string | null;
    };
    CourseEnrollmentDto: {
      id?: string | null;
      /** Format: date-time */
      timestamp?: string | null;
      courseID?: string | null;
      courseCohortID?: string | null;
      studentProfileID?: string | null;
      businessProfileRecordID?: string | null;
      courseCompletionCertificateID?: string | null;
    };
    CourseEnrollmentDtoEnvelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
      result?: components["schemas"]["CourseEnrollmentDto"];
    };
    CourseEnrollmentDtoListEnvelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
      result?: components["schemas"]["CourseEnrollmentDto"][] | null;
    };
    CourseEnrollmentUpdateDto: {
      /** Format: uuid */
      id?: string;
      /** Format: date-time */
      timestamp?: string;
      courseCohortID?: string | null;
      courseCompletionCertificateID?: string | null;
    };
    CourseUpdateDto: Record<string, never>;
    EmptyEnvelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
    };
    ErrorEnvelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
    };
    InstructorProfileCreateDto: {
      /** Format: uuid */
      id?: string;
      /** Format: date-time */
      timestamp?: string;
      authorized?: boolean;
      about?: string | null;
      verified?: boolean;
      submitted?: boolean;
      avatarUrl?: string | null;
      qualifiedName?: string | null;
      /** Format: date-time */
      verificationTimestamp?: string;
      data?: string | null;
      dataLabel?: string | null;
      data1?: string | null;
      data1Label?: string | null;
      data2?: string | null;
      data2Label?: string | null;
      data3?: string | null;
      data3Label?: string | null;
      data4?: string | null;
      data4Label?: string | null;
      data5?: string | null;
      data5Label?: string | null;
      data6?: string | null;
      data6Label?: string | null;
      data7?: string | null;
      data7Label?: string | null;
      data8?: string | null;
      data8Label?: string | null;
      data9?: string | null;
      data9Label?: string | null;
      businessID?: string | null;
      contactID?: string | null;
      businessProfileRecordID?: string | null;
    };
    InstructorProfileDto: {
      id?: string | null;
      /** Format: date-time */
      timestamp?: string | null;
      authorized?: boolean;
      about?: string | null;
      verified?: boolean;
      submitted?: boolean;
      avatarUrl?: string | null;
      qualifiedName?: string | null;
      /** Format: date-time */
      verificationTimestamp?: string;
      data?: string | null;
      dataLabel?: string | null;
      data1?: string | null;
      data1Label?: string | null;
      data2?: string | null;
      data2Label?: string | null;
      data3?: string | null;
      data3Label?: string | null;
      data4?: string | null;
      data4Label?: string | null;
      data5?: string | null;
      data5Label?: string | null;
      data6?: string | null;
      data6Label?: string | null;
      data7?: string | null;
      data7Label?: string | null;
      data8?: string | null;
      data8Label?: string | null;
      data9?: string | null;
      data9Label?: string | null;
      businessID?: string | null;
      contactID?: string | null;
      businessProfileRecordID?: string | null;
    };
    InstructorProfileDtoEnvelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
      result?: components["schemas"]["InstructorProfileDto"];
    };
    InstructorProfileDtoListEnvelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
      result?: components["schemas"]["InstructorProfileDto"][] | null;
    };
    InstructorProfileUpdateDto: {
      id?: string | null;
      /** Format: date-time */
      timestamp?: string | null;
      authorized?: boolean;
      about?: string | null;
      verified?: boolean;
      submitted?: boolean;
      avatarUrl?: string | null;
      qualifiedName?: string | null;
      /** Format: date-time */
      verificationTimestamp?: string;
      data?: string | null;
      dataLabel?: string | null;
      data1?: string | null;
      data1Label?: string | null;
      data2?: string | null;
      data2Label?: string | null;
      data3?: string | null;
      data3Label?: string | null;
      data4?: string | null;
      data4Label?: string | null;
      data5?: string | null;
      data5Label?: string | null;
      data6?: string | null;
      data6Label?: string | null;
      data7?: string | null;
      data7Label?: string | null;
      data8?: string | null;
      data8Label?: string | null;
      data9?: string | null;
      data9Label?: string | null;
    };
    Int32Envelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
      /** Format: int32 */
      result?: number;
    };
    StudentProfileCreateDto: {
      /** Format: uuid */
      id?: string;
      /** Format: date-time */
      timestamp?: string;
      about?: string | null;
      verified?: boolean;
      submitted?: boolean;
      avatarUrl?: string | null;
      qualifiedName?: string | null;
      /** Format: date-time */
      verificationTimestamp?: string;
      data?: string | null;
      dataLabel?: string | null;
      data1?: string | null;
      data1Label?: string | null;
      data2?: string | null;
      data2Label?: string | null;
      data3?: string | null;
      data3Label?: string | null;
      data4?: string | null;
      data4Label?: string | null;
      data5?: string | null;
      data5Label?: string | null;
      data6?: string | null;
      data6Label?: string | null;
      data7?: string | null;
      data7Label?: string | null;
      data8?: string | null;
      data8Label?: string | null;
      data9?: string | null;
      data9Label?: string | null;
      businessID?: string | null;
      contactID?: string | null;
      businessProfileRecordID?: string | null;
    };
    StudentProfileDto: {
      id?: string | null;
      /** Format: date-time */
      timestamp?: string | null;
      about?: string | null;
      verified?: boolean;
      submitted?: boolean;
      avatarUrl?: string | null;
      qualifiedName?: string | null;
      /** Format: date-time */
      verificationTimestamp?: string;
      data?: string | null;
      dataLabel?: string | null;
      data1?: string | null;
      data1Label?: string | null;
      data2?: string | null;
      data2Label?: string | null;
      data3?: string | null;
      data3Label?: string | null;
      data4?: string | null;
      data4Label?: string | null;
      data5?: string | null;
      data5Label?: string | null;
      data6?: string | null;
      data6Label?: string | null;
      data7?: string | null;
      data7Label?: string | null;
      data8?: string | null;
      data8Label?: string | null;
      data9?: string | null;
      data9Label?: string | null;
      businessID?: string | null;
      contactID?: string | null;
      businessProfileRecordID?: string | null;
    };
    StudentProfileDtoEnvelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
      result?: components["schemas"]["StudentProfileDto"];
    };
    StudentProfileDtoListEnvelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
      result?: components["schemas"]["StudentProfileDto"][] | null;
    };
    StudentProfileUpdateDto: {
      /** Format: uuid */
      id?: string;
      /** Format: date-time */
      timestamp?: string;
      about?: string | null;
      verified?: boolean;
      submitted?: boolean;
      avatarUrl?: string | null;
      qualifiedName?: string | null;
      /** Format: date-time */
      verificationTimestamp?: string;
      data?: string | null;
      dataLabel?: string | null;
      data1?: string | null;
      data1Label?: string | null;
      data2?: string | null;
      data2Label?: string | null;
      data3?: string | null;
      data3Label?: string | null;
      data4?: string | null;
      data4Label?: string | null;
      data5?: string | null;
      data5Label?: string | null;
      data6?: string | null;
      data6Label?: string | null;
      data7?: string | null;
      data7Label?: string | null;
      data8?: string | null;
      data8Label?: string | null;
      data9?: string | null;
      data9Label?: string | null;
      businessID?: string | null;
      contactID?: string | null;
      businessProfileRecordID?: string | null;
    };
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}

export type $defs = Record<string, never>;

export type external = Record<string, never>;

export type operations = Record<string, never>;
