/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */


export interface paths {
  "/api/v2/AccountingService/AccountGroups": {
    get: {
      parameters: {
        query: {
          tenantId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["AccountGroupDtoListEnvelope"];
            "application/xml": components["schemas"]["AccountGroupDtoListEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    post: {
      parameters: {
        query: {
          tenantId: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["AccountGroupCreateDto"];
          "application/xml": components["schemas"]["AccountGroupCreateDto"];
        };
      };
      responses: {
        /** @description Created */
        201: {
          content: {
            "application/json": components["schemas"]["AccountGroupDtoEnvelope"];
            "application/xml": components["schemas"]["AccountGroupDtoEnvelope"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/AccountingService/AccountGroups/Count": {
    get: {
      parameters: {
        query?: {
          tenantId?: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["Int32Envelope"];
            "application/xml": components["schemas"]["Int32Envelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/AccountingService/AccountGroups/{id}": {
    get: {
      parameters: {
        query: {
          id: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["AccountGroupDtoEnvelope"];
            "application/xml": components["schemas"]["AccountGroupDtoEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    put: {
      parameters: {
        query: {
          id: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["AccountGroupUpdateDto"];
          "application/xml": components["schemas"]["AccountGroupUpdateDto"];
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["AccountGroupDtoEnvelope"];
            "application/xml": components["schemas"]["AccountGroupDtoEnvelope"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    delete: {
      parameters: {
        query: {
          id: string;
        };
      };
      responses: {
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/AccountingService/AccountingPeriods": {
    get: {
      parameters: {
        query: {
          tenantId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["AccountingPeriodDtoListEnvelope"];
            "application/xml": components["schemas"]["AccountingPeriodDtoListEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    post: {
      parameters: {
        query: {
          tenantId: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["AccountingPeriodCreateDto"];
          "application/xml": components["schemas"]["AccountingPeriodCreateDto"];
        };
      };
      responses: {
        /** @description Created */
        201: {
          content: {
            "application/json": components["schemas"]["AccountingPeriodDtoEnvelope"];
            "application/xml": components["schemas"]["AccountingPeriodDtoEnvelope"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/AccountingService/AccountingPeriods/Count": {
    get: {
      parameters: {
        query?: {
          tenantId?: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["Int32Envelope"];
            "application/xml": components["schemas"]["Int32Envelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/AccountingService/AccountingPeriods/{id}": {
    get: {
      parameters: {
        query: {
          id: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["AccountingPeriodDtoEnvelope"];
            "application/xml": components["schemas"]["AccountingPeriodDtoEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    put: {
      parameters: {
        query: {
          id: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["AccountingPeriodUpdateDto"];
          "application/xml": components["schemas"]["AccountingPeriodUpdateDto"];
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["EmptyEnvelope"];
            "application/xml": components["schemas"]["EmptyEnvelope"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    delete: {
      parameters: {
        query: {
          id: string;
        };
      };
      responses: {
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/AccountingService/Accounts": {
    get: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["AccountDtoListEnvelope"];
            "application/xml": components["schemas"]["AccountDtoListEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    post: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["AccountCreateDto"];
          "application/xml": components["schemas"]["AccountCreateDto"];
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["AccountDtoListEnvelope"];
            "application/xml": components["schemas"]["AccountDtoListEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/AccountingService/Accounts/Count": {
    get: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["Int32Envelope"];
            "application/xml": components["schemas"]["Int32Envelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/AccountingService/Accounts/Root": {
    get: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["AccountDtoListEnvelope"];
            "application/xml": components["schemas"]["AccountDtoListEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/AccountingService/Accounts/{accountId}": {
    get: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          accountId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["AccountDtoEnvelope"];
            "application/xml": components["schemas"]["AccountDtoEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    put: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          accountId: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["AccountUpdateDto"];
          "application/xml": components["schemas"]["AccountUpdateDto"];
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["AccountDtoEnvelope"];
            "application/xml": components["schemas"]["AccountDtoEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    delete: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          accountId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["EmptyEnvelope"];
            "application/xml": components["schemas"]["EmptyEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    patch: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          accountId: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["Operation"][];
          "application/xml": components["schemas"]["Operation"][];
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["EmptyEnvelope"];
            "application/xml": components["schemas"]["EmptyEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/AccountingService/Accounts/Root/Balance": {
    post: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["AccountDtoListEnvelope"];
            "application/xml": components["schemas"]["AccountDtoListEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/AccountingService/Accounts/{accountId}/Balance": {
    post: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          accountId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["AccountDtoEnvelope"];
            "application/xml": components["schemas"]["AccountDtoEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/AccountingService/Accounts/{accountId}/Children": {
    get: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          accountId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["AccountDtoListEnvelope"];
            "application/xml": components["schemas"]["AccountDtoListEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/AccountingService/Accounts/{accountId}/Entries": {
    get: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          accountId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["AccountingEntryDtoListEnvelope"];
            "application/xml": components["schemas"]["AccountingEntryDtoListEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    post: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          accountId: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["AccountingEntryCreateDto"];
          "application/xml": components["schemas"]["AccountingEntryCreateDto"];
        };
      };
      responses: {
        /** @description Created */
        201: {
          content: {
            "application/json": components["schemas"]["AccountingEntryDtoEnvelope"];
            "application/xml": components["schemas"]["AccountingEntryDtoEnvelope"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/AccountingService/Accounts/{accountId}/Entries/Debit": {
    get: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          accountId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["AccountingEntryDtoListEnvelope"];
            "application/xml": components["schemas"]["AccountingEntryDtoListEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/AccountingService/Accounts/{accountId}/Entries/Credit": {
    get: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          accountId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["AccountingEntryDtoListEnvelope"];
            "application/xml": components["schemas"]["AccountingEntryDtoListEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/AccountingService/Accounts/{accountId}/Entries/{entryId}": {
    get: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          accountId: string;
          entryId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["AccountingEntryDtoEnvelope"];
            "application/xml": components["schemas"]["AccountingEntryDtoEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    put: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          accountId: string;
          entryId: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["AccountingEntryUpdateDto"];
          "application/xml": components["schemas"]["AccountingEntryUpdateDto"];
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["EmptyEnvelope"];
            "application/xml": components["schemas"]["EmptyEnvelope"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    delete: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          accountId: string;
          entryId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["EmptyEnvelope"];
            "application/xml": components["schemas"]["EmptyEnvelope"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/AccountingService/Accounts/{accountId}/Debits": {
    get: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          accountId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["AccountingEntryDtoListEnvelope"];
            "application/xml": components["schemas"]["AccountingEntryDtoListEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    post: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          accountId: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["AccountingEntryCreateDto"];
          "application/xml": components["schemas"]["AccountingEntryCreateDto"];
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["AccountingEntryDtoListEnvelope"];
            "application/xml": components["schemas"]["AccountingEntryDtoListEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/AccountingService/Accounts/{accountId}/Debits/Count": {
    get: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          accountId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["Int32Envelope"];
            "application/xml": components["schemas"]["Int32Envelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/AccountingService/Accounts/{accountId}/Credits": {
    get: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          accountId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["AccountingEntryDtoListEnvelope"];
            "application/xml": components["schemas"]["AccountingEntryDtoListEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    post: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          accountId: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["AccountingEntryCreateDto"];
          "application/xml": components["schemas"]["AccountingEntryCreateDto"];
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["AccountingEntryDtoListEnvelope"];
            "application/xml": components["schemas"]["AccountingEntryDtoListEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/AccountingService/Accounts/{accountId}/Credits/Count": {
    get: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          accountId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["Int32Envelope"];
            "application/xml": components["schemas"]["Int32Envelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/AccountingService/Accounts/Aggregate": {
    post: {
      parameters: {
        query: {
          tenantId: string;
          currencyId?: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["AccountDto"][];
          "application/xml": components["schemas"]["AccountDto"][];
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["AccountingEntryDtoListEnvelope"];
            "application/xml": components["schemas"]["AccountingEntryDtoListEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/AccountingService/Accounts/Types": {
    get: {
      parameters: {
        query: {
          tenantId: string;
          accountTypeId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["AccountTypeDtoListEnvelope"];
            "application/xml": components["schemas"]["AccountTypeDtoListEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    post: {
      parameters: {
        query: {
          tenantId: string;
          accountId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["AccountTypeCreateDto"];
          "application/xml": components["schemas"]["AccountTypeCreateDto"];
        };
      };
      responses: {
        /** @description Created */
        201: {
          content: {
            "application/json": components["schemas"]["EmptyEnvelope"];
            "application/xml": components["schemas"]["EmptyEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/AccountingService/Accounts/Types/Count": {
    get: {
      parameters: {
        query: {
          tenantId: string;
          accountTypeId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["Int32Envelope"];
            "application/xml": components["schemas"]["Int32Envelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/AccountingService/Accounts/Types/{accountTypeId}": {
    put: {
      parameters: {
        query: {
          tenantId: string;
          accountId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          accountTypeId: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["AccountTypeUpdateDto"];
          "application/xml": components["schemas"]["AccountTypeUpdateDto"];
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["EmptyEnvelope"];
            "application/xml": components["schemas"]["EmptyEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    delete: {
      parameters: {
        query: {
          tenantId: string;
          accountId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          accountTypeId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["EmptyEnvelope"];
            "application/xml": components["schemas"]["EmptyEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/AccountingService/Accounts/Relations": {
    get: {
      parameters: {
        query: {
          tenantId: string;
          accountId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["AccountRelationDtoListEnvelope"];
            "application/xml": components["schemas"]["AccountRelationDtoListEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    post: {
      parameters: {
        query: {
          tenantId: string;
          accountId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["AccountRelationCreateDto"];
          "application/xml": components["schemas"]["AccountRelationCreateDto"];
        };
      };
      responses: {
        /** @description Created */
        201: {
          content: {
            "application/json": components["schemas"]["EmptyEnvelope"];
            "application/xml": components["schemas"]["EmptyEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/AccountingService/Accounts/Relations/Count": {
    get: {
      parameters: {
        query: {
          tenantId: string;
          accountRelationId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["Int32Envelope"];
            "application/xml": components["schemas"]["Int32Envelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/AccountingService/Accounts/Relations/{accountRelationId}": {
    put: {
      parameters: {
        query: {
          tenantId: string;
          accountId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          accountRelationId: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["AccountRelationUpdateDto"];
          "application/xml": components["schemas"]["AccountRelationUpdateDto"];
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["EmptyEnvelope"];
            "application/xml": components["schemas"]["EmptyEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    delete: {
      parameters: {
        query: {
          tenantId: string;
          accountId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          accountRelationId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["EmptyEnvelope"];
            "application/xml": components["schemas"]["EmptyEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/AccountingService/Banking": {
    get: {
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["BankDtoListEnvelope"];
            "application/xml": components["schemas"]["BankDtoListEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    post: {
      parameters: {
        query: {
          accountId: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["BankCreateDto"];
          "application/xml": components["schemas"]["BankCreateDto"];
        };
      };
      responses: {
        /** @description Created */
        201: {
          content: {
            "application/json": components["schemas"]["BankDtoEnvelope"];
            "application/xml": components["schemas"]["BankDtoEnvelope"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/AccountingService/Banking/Count": {
    get: {
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["Int32Envelope"];
            "application/xml": components["schemas"]["Int32Envelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/AccountingService/Banking/{bankId}": {
    get: {
      parameters: {
        query: {
          bankId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["BankDtoEnvelope"];
            "application/xml": components["schemas"]["BankDtoEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    put: {
      parameters: {
        query: {
          bankId: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["BankUpdateDto"];
          "application/xml": components["schemas"]["BankUpdateDto"];
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["BankDtoEnvelope"];
            "application/xml": components["schemas"]["BankDtoEnvelope"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    delete: {
      parameters: {
        query: {
          bankId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["BankDtoEnvelope"];
            "application/xml": components["schemas"]["BankDtoEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/AccountingService/Banking/{bankId}/Accounts": {
    get: {
      parameters: {
        query: {
          tenantId: string;
        };
        path: {
          bankId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["BankAccountDtoListEnvelope"];
            "application/xml": components["schemas"]["BankAccountDtoListEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    post: {
      parameters: {
        query: {
          tenantId: string;
        };
        path: {
          bankId: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["BankAccountCreateDto"];
          "application/xml": components["schemas"]["BankAccountCreateDto"];
        };
      };
      responses: {
        /** @description Created */
        201: {
          content: {
            "application/json": components["schemas"]["BankAccountDtoEnvelope"];
            "application/xml": components["schemas"]["BankAccountDtoEnvelope"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/AccountingService/Banking/{bankId}/Accounts/Count": {
    get: {
      parameters: {
        query: {
          tenantId: string;
        };
        path: {
          bankId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["BankAccountDtoListEnvelope"];
            "application/xml": components["schemas"]["BankAccountDtoListEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/AccountingService/Banking/{bankId}/Accounts/{accountId}": {
    get: {
      parameters: {
        query: {
          tenantId: string;
        };
        path: {
          bankId: string;
          accountId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["BankAccountDtoEnvelope"];
            "application/xml": components["schemas"]["BankAccountDtoEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    put: {
      parameters: {
        query: {
          tenantId: string;
        };
        path: {
          bankId: string;
          accountId: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["BankAccountUpdateDto"];
          "application/xml": components["schemas"]["BankAccountUpdateDto"];
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["BankAccountDtoEnvelope"];
            "application/xml": components["schemas"]["BankAccountDtoEnvelope"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    delete: {
      parameters: {
        query: {
          tenantId: string;
        };
        path: {
          bankId: string;
          accountId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["BankAccountDtoEnvelope"];
            "application/xml": components["schemas"]["BankAccountDtoEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/AccountingService/Banking/{tenantId}/Accounts/{bankAccountId}/Guarantees": {
    get: {
      parameters: {
        query: {
          tenantId: string;
        };
        path: {
          bankAccountId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["BankGuaranteeDtoListEnvelope"];
            "application/xml": components["schemas"]["BankGuaranteeDtoListEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/AccountingService/Banking/{tenantId}/Accounts/{bankAccountId}/Guarantees/Count": {
    get: {
      parameters: {
        query: {
          tenantId: string;
        };
        path: {
          bankAccountId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["Int32Envelope"];
            "application/xml": components["schemas"]["Int32Envelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/AccountingService/Banking/{bankId}/Guarantees/{guaranteeId}": {
    get: {
      parameters: {
        query: {
          tenantId: string;
        };
        path: {
          bankId: string;
          guaranteeId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["BankGuaranteeDtoEnvelope"];
            "application/xml": components["schemas"]["BankGuaranteeDtoEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    put: {
      parameters: {
        query: {
          tenantId: string;
        };
        path: {
          bankId: string;
          guaranteeId: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["BankGuaranteeUpdateDto"];
          "application/xml": components["schemas"]["BankGuaranteeUpdateDto"];
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["BankGuaranteeDtoEnvelope"];
            "application/xml": components["schemas"]["BankGuaranteeDtoEnvelope"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    delete: {
      parameters: {
        query: {
          tenantId: string;
        };
        path: {
          bankId: string;
          guaranteeId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["BankGuaranteeDtoEnvelope"];
            "application/xml": components["schemas"]["BankGuaranteeDtoEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/AccountingService/Banking/{bankId}/Guarantees": {
    post: {
      parameters: {
        query: {
          tenantId: string;
        };
        path: {
          bankId: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["BankGuaranteeCreateDto"];
          "application/xml": components["schemas"]["BankGuaranteeCreateDto"];
        };
      };
      responses: {
        /** @description Created */
        201: {
          content: {
            "application/json": components["schemas"]["BankGuaranteeDtoEnvelope"];
            "application/xml": components["schemas"]["BankGuaranteeDtoEnvelope"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/AccountingService/Banking/{bankId}/Transactions": {
    get: {
      parameters: {
        query: {
          tenantId: string;
        };
        path: {
          bankId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["BankTransactionDtoListEnvelope"];
            "application/xml": components["schemas"]["BankTransactionDtoListEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    post: {
      parameters: {
        query: {
          tenantId: string;
        };
        path: {
          bankId: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["BankTransactionCreateDto"];
          "application/xml": components["schemas"]["BankTransactionCreateDto"];
        };
      };
      responses: {
        /** @description Created */
        201: {
          content: {
            "application/json": components["schemas"]["BankTransactionDtoEnvelope"];
            "application/xml": components["schemas"]["BankTransactionDtoEnvelope"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/AccountingService/Banking/{bankId}/Transactions/Count": {
    get: {
      parameters: {
        query: {
          tenantId: string;
        };
        path: {
          bankId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["Int32Envelope"];
            "application/xml": components["schemas"]["Int32Envelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/AccountingService/Banking/{bankId}/Transactions/{transactionId}": {
    get: {
      parameters: {
        query: {
          tenantId: string;
        };
        path: {
          transactionId: string;
          bankId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["BankTransactionDtoEnvelope"];
            "application/xml": components["schemas"]["BankTransactionDtoEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    put: {
      parameters: {
        query: {
          tenantId: string;
        };
        path: {
          bankId: string;
          transactionId: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["BankTransactionUpdateDto"];
          "application/xml": components["schemas"]["BankTransactionUpdateDto"];
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["BankTransactionDtoEnvelope"];
            "application/xml": components["schemas"]["BankTransactionDtoEnvelope"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    delete: {
      parameters: {
        query: {
          tenantId: string;
        };
        path: {
          bankId: string;
          transactionId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["BankTransactionDtoEnvelope"];
            "application/xml": components["schemas"]["BankTransactionDtoEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/AccountingService/BillingProfiles/{billingProfileId}": {
    get: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          billingProfileId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["BillingProfileDtoEnvelope"];
            "application/xml": components["schemas"]["BillingProfileDtoEnvelope"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    put: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          billingProfileId: string;
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["BillingProfileUpdateDto"];
          "application/xml": components["schemas"]["BillingProfileUpdateDto"];
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["EmptyEnvelope"];
            "application/xml": components["schemas"]["EmptyEnvelope"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    delete: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          billingProfileId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["EmptyEnvelope"];
            "application/xml": components["schemas"]["EmptyEnvelope"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/AccountingService/BillingProfiles": {
    get: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["BillingProfileDtoListEnvelope"];
            "application/xml": components["schemas"]["BillingProfileDtoListEnvelope"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    post: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["BillingProfileCreateDto"];
          "application/xml": components["schemas"]["BillingProfileCreateDto"];
        };
      };
      responses: {
        /** @description Created */
        201: {
          content: {
            "application/json": components["schemas"]["EmptyEnvelope"];
            "application/xml": components["schemas"]["EmptyEnvelope"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/AccountingService/BillingProfiles/Count": {
    get: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["Int32Envelope"];
            "application/xml": components["schemas"]["Int32Envelope"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/AccountingService/Budgets/{budgetId}": {
    get: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          budgetId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["BudgetDtoEnvelope"];
            "application/xml": components["schemas"]["BudgetDtoEnvelope"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    put: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          budgetId: string;
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["BudgetUpdateDto"];
          "application/xml": components["schemas"]["BudgetUpdateDto"];
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["EmptyEnvelope"];
            "application/xml": components["schemas"]["EmptyEnvelope"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    delete: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          budgetId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["EmptyEnvelope"];
            "application/xml": components["schemas"]["EmptyEnvelope"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/AccountingService/Budgets": {
    get: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["BudgetDtoListEnvelope"];
            "application/xml": components["schemas"]["BudgetDtoListEnvelope"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    post: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["BudgetCreateDto"];
          "application/xml": components["schemas"]["BudgetCreateDto"];
        };
      };
      responses: {
        /** @description Created */
        201: {
          content: {
            "application/json": components["schemas"]["EmptyEnvelope"];
            "application/xml": components["schemas"]["EmptyEnvelope"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/AccountingService/Budgets/{budgetId}/AccountEntries": {
    get: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          budgetId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["BudgetAccountEntryDtoListEnvelope"];
            "application/xml": components["schemas"]["BudgetAccountEntryDtoListEnvelope"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    post: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          budgetId: string;
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["BudgetAccountEntryCreateDto"];
          "application/xml": components["schemas"]["BudgetAccountEntryCreateDto"];
        };
      };
      responses: {
        /** @description Created */
        201: {
          content: {
            "application/json": components["schemas"]["EmptyEnvelope"];
            "application/xml": components["schemas"]["EmptyEnvelope"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/AccountingService/Budgets/{budgetId}/AccountEntries/{budgetAccountEntryId}": {
    get: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          budgetId: string;
          budgetAccountEntryId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["BudgetAccountEntryDtoEnvelope"];
            "application/xml": components["schemas"]["BudgetAccountEntryDtoEnvelope"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    put: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          budgetId: string;
          budgetAccountEntryId: string;
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["BudgetAccountEntryUpdateDto"];
          "application/xml": components["schemas"]["BudgetAccountEntryUpdateDto"];
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["EmptyEnvelope"];
            "application/xml": components["schemas"]["EmptyEnvelope"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    delete: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          budgetId: string;
          budgetAccountEntryId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["EmptyEnvelope"];
            "application/xml": components["schemas"]["EmptyEnvelope"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/AccountingService/Commissions/Commissions": {
    get: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["CommissionDtoListEnvelope"];
            "application/xml": components["schemas"]["CommissionDtoListEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    post: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["CommissionCreateDto"];
          "application/xml": components["schemas"]["CommissionCreateDto"];
        };
      };
      responses: {
        /** @description Created */
        201: {
          content: {
            "application/json": components["schemas"]["CommissionDto"];
            "application/xml": components["schemas"]["CommissionDto"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/AccountingService/Commissions/Commissions/Count": {
    get: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["Int32Envelope"];
            "application/xml": components["schemas"]["Int32Envelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/AccountingService/Commissions/Commissions/{commissionId}": {
    get: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          commissionId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["CommissionDto"];
            "application/xml": components["schemas"]["CommissionDto"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    put: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          commissionId: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["CommissionUpdateDto"];
          "application/xml": components["schemas"]["CommissionUpdateDto"];
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["CommissionDto"];
            "application/xml": components["schemas"]["CommissionDto"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    delete: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          commissionId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["CommissionDto"];
            "application/xml": components["schemas"]["CommissionDto"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/AccountingService/Commissions/PaymentCommissions": {
    get: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["PaymentCommissionDtoListEnvelope"];
            "application/xml": components["schemas"]["PaymentCommissionDtoListEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    post: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["PaymentCommissionCreateDto"];
          "application/xml": components["schemas"]["PaymentCommissionCreateDto"];
        };
      };
      responses: {
        /** @description Created */
        201: {
          content: {
            "application/json": components["schemas"]["PaymentCommissionDto"];
            "application/xml": components["schemas"]["PaymentCommissionDto"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/AccountingService/Commissions/PaymentCommissions/Count": {
    get: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["Int32Envelope"];
            "application/xml": components["schemas"]["Int32Envelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/AccountingService/Commissions/PaymentCommissions/{paymentcommissionId}": {
    get: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          paymentcommissionId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["PaymentCommissionDto"];
            "application/xml": components["schemas"]["PaymentCommissionDto"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    put: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          paymentcommissionId: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["PaymentCommissionUpdateDto"];
          "application/xml": components["schemas"]["PaymentCommissionUpdateDto"];
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["PaymentCommissionDto"];
            "application/xml": components["schemas"]["PaymentCommissionDto"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    delete: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          paymentcommissionId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["PaymentCommissionDto"];
            "application/xml": components["schemas"]["PaymentCommissionDto"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/AccountingService/CostCentres": {
    get: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["CostCentreDtoListEnvelope"];
            "application/xml": components["schemas"]["CostCentreDtoListEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/AccountingService/CostCentres/Count": {
    get: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["Int32Envelope"];
            "application/xml": components["schemas"]["Int32Envelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/AccountingService/CostCentres/{costCentreId}": {
    get: {
      parameters: {
        query?: {
          tenantId?: components["schemas"]["TenantId"];
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          costCentreId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["CostCentreDtoEnvelope"];
            "application/xml": components["schemas"]["CostCentreDtoEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/AccountingService/CostCentres/CostCentres": {
    post: {
      parameters: {
        query?: {
          tenantId?: components["schemas"]["TenantId"];
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["CostCentreCreateDto"];
          "application/xml": components["schemas"]["CostCentreCreateDto"];
        };
      };
      responses: {
        /** @description Created */
        201: {
          content: {
            "application/json": components["schemas"]["CostCentreDtoEnvelope"];
            "application/xml": components["schemas"]["CostCentreDtoEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/AccountingService/CostCentres/CostCentres/{costCentreId}": {
    put: {
      parameters: {
        query?: {
          tenantId?: components["schemas"]["TenantId"];
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          costCentreId: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["CostCentreUpdateDto"];
          "application/xml": components["schemas"]["CostCentreUpdateDto"];
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["CostCentreDtoEnvelope"];
            "application/xml": components["schemas"]["CostCentreDtoEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    delete: {
      parameters: {
        query?: {
          tenantId?: components["schemas"]["TenantId"];
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          costCentreId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["CostCentreDtoEnvelope"];
            "application/xml": components["schemas"]["CostCentreDtoEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/AccountingService/CostCentres/CostCentreGroups": {
    get: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["CostCentreGroupDtoListEnvelope"];
            "application/xml": components["schemas"]["CostCentreGroupDtoListEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    post: {
      parameters: {
        query?: {
          tenantId?: components["schemas"]["TenantId"];
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["CostCentreGroupCreateDto"];
          "application/xml": components["schemas"]["CostCentreGroupCreateDto"];
        };
      };
      responses: {
        /** @description Created */
        201: {
          content: {
            "application/json": components["schemas"]["CostCentreGroupDtoEnvelope"];
            "application/xml": components["schemas"]["CostCentreGroupDtoEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/AccountingService/CostCentres/CostCentreGroups/Count": {
    get: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["Int32Envelope"];
            "application/xml": components["schemas"]["Int32Envelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/AccountingService/CostCentres/CostCentreGroups/{costCentreGroupId}": {
    get: {
      parameters: {
        query?: {
          tenantId?: components["schemas"]["TenantId"];
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          costCentreGroupId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["CostCentreGroupDtoEnvelope"];
            "application/xml": components["schemas"]["CostCentreGroupDtoEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    put: {
      parameters: {
        query?: {
          tenantId?: components["schemas"]["TenantId"];
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          costCentreGroupId: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["CostCentreGroupUpdateDto"];
          "application/xml": components["schemas"]["CostCentreGroupUpdateDto"];
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["CostCentreGroupDtoEnvelope"];
            "application/xml": components["schemas"]["CostCentreGroupDtoEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    delete: {
      parameters: {
        query?: {
          tenantId?: components["schemas"]["TenantId"];
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          costCentreGroupId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["CostCentreGroupDtoEnvelope"];
            "application/xml": components["schemas"]["CostCentreGroupDtoEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/AccountingService/CostCentres/CostCentreBudgets": {
    get: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["CostCentreBudgetDtoListEnvelope"];
            "application/xml": components["schemas"]["CostCentreBudgetDtoListEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    post: {
      parameters: {
        query?: {
          tenantId?: components["schemas"]["TenantId"];
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["CostCentreBudgetCreateDto"];
          "application/xml": components["schemas"]["CostCentreBudgetCreateDto"];
        };
      };
      responses: {
        /** @description Created */
        201: {
          content: {
            "application/json": components["schemas"]["CostCentreBudgetDtoEnvelope"];
            "application/xml": components["schemas"]["CostCentreBudgetDtoEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/AccountingService/CostCentres/CostCentreBudgets/{costCentreBudgetId}": {
    get: {
      parameters: {
        query?: {
          tenantId?: components["schemas"]["TenantId"];
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          costCentreBudgetId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["CostCentreBudgetDtoEnvelope"];
            "application/xml": components["schemas"]["CostCentreBudgetDtoEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    put: {
      parameters: {
        query?: {
          tenantId?: components["schemas"]["TenantId"];
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          costCentreBudgetId: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["CostCentreBudgetUpdateDto"];
          "application/xml": components["schemas"]["CostCentreBudgetUpdateDto"];
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["CostCentreBudgetDtoEnvelope"];
            "application/xml": components["schemas"]["CostCentreBudgetDtoEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    delete: {
      parameters: {
        query?: {
          tenantId?: components["schemas"]["TenantId"];
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          costCentreBudgetId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["CostCentreBudgetDtoEnvelope"];
            "application/xml": components["schemas"]["CostCentreBudgetDtoEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/AccountingService/FinancialBooks": {
    get: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["FinancialBookDtoListEnvelope"];
            "application/xml": components["schemas"]["FinancialBookDtoListEnvelope"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    post: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["FinancialBookCreateDto"];
          "application/xml": components["schemas"]["FinancialBookCreateDto"];
        };
      };
      responses: {
        /** @description Created */
        201: {
          content: {
            "application/json": components["schemas"]["EmptyEnvelope"];
            "application/xml": components["schemas"]["EmptyEnvelope"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/AccountingService/FinancialBooks/Count": {
    get: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["Int32Envelope"];
            "application/xml": components["schemas"]["Int32Envelope"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/AccountingService/FinancialBooks/{financialBookId}": {
    get: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          financialBookId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["FinancialBookDtoEnvelope"];
            "application/xml": components["schemas"]["FinancialBookDtoEnvelope"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    put: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          financialBookId: string;
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["FinancialBookUpdateDto"];
          "application/xml": components["schemas"]["FinancialBookUpdateDto"];
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["EmptyEnvelope"];
            "application/xml": components["schemas"]["EmptyEnvelope"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    delete: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          financialBookId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["EmptyEnvelope"];
            "application/xml": components["schemas"]["EmptyEnvelope"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/AccountingService/Fiscals/Authorities": {
    get: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["FiscalAuthorityDtoListEnvelope"];
            "application/xml": components["schemas"]["FiscalAuthorityDtoListEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    post: {
      parameters: {
        query: {
          tenantId: components["schemas"]["TenantId"];
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["FiscalAuthorityCreateDto"];
          "application/xml": components["schemas"]["FiscalAuthorityCreateDto"];
        };
      };
      responses: {
        /** @description Created */
        201: {
          content: {
            "application/json": components["schemas"]["EmptyEnvelope"];
            "application/xml": components["schemas"]["EmptyEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/AccountingService/Fiscals/Authorities/Count": {
    get: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["Int32Envelope"];
            "application/xml": components["schemas"]["Int32Envelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/AccountingService/Fiscals/Authorities/{authorityId}": {
    get: {
      parameters: {
        query: {
          tenantId: components["schemas"]["TenantId"];
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          authorityId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["FiscalAuthorityDtoEnvelope"];
            "application/xml": components["schemas"]["FiscalAuthorityDtoEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    put: {
      parameters: {
        query: {
          tenantId: components["schemas"]["TenantId"];
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          authorityId: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["FiscalAuthorityUpdateDto"];
          "application/xml": components["schemas"]["FiscalAuthorityUpdateDto"];
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["EmptyEnvelope"];
            "application/xml": components["schemas"]["EmptyEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    delete: {
      parameters: {
        query: {
          tenantId: components["schemas"]["TenantId"];
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          authorityId: string;
        };
      };
      responses: {
        /** @description No Content */
        204: {
          content: {
            "application/json": components["schemas"]["EmptyEnvelope"];
            "application/xml": components["schemas"]["EmptyEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/AccountingService/Fiscals/Authorities/{authorityId}/IdentificationTypes": {
    get: {
      parameters: {
        query?: {
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          authorityId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["FiscalIdentificationTypeDtoListEnvelope"];
            "application/xml": components["schemas"]["FiscalIdentificationTypeDtoListEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/AccountingService/Fiscals/Authorities/{authorityId}/IdentificationTypes/Count": {
    get: {
      parameters: {
        query?: {
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          authorityId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["Int32Envelope"];
            "application/xml": components["schemas"]["Int32Envelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/AccountingService/Fiscals/Authorities/{fiscalAuthorityId}/IdentificationTypes/{identificationTypeId}": {
    get: {
      parameters: {
        query: {
          tenantId: components["schemas"]["TenantId"];
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          fiscalAuthorityId: string;
          identificationTypeId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["FiscalIdentificationTypeDtoEnvelope"];
            "application/xml": components["schemas"]["FiscalIdentificationTypeDtoEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/AccountingService/Fiscals/Authorities/IdentificationTypes": {
    post: {
      parameters: {
        query: {
          tenantId: components["schemas"]["TenantId"];
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["FiscalIdentificationTypeCreateDto"];
          "application/xml": components["schemas"]["FiscalIdentificationTypeCreateDto"];
        };
      };
      responses: {
        /** @description Created */
        201: {
          content: {
            "application/json": components["schemas"]["EmptyEnvelope"];
            "application/xml": components["schemas"]["EmptyEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/AccountingService/Fiscals/Authorities/IdentificationTypes/{identificationTypeId}": {
    put: {
      parameters: {
        query: {
          tenantId: components["schemas"]["TenantId"];
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          identificationTypeId: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["FiscalIdentificationTypeUpdateDto"];
          "application/xml": components["schemas"]["FiscalIdentificationTypeUpdateDto"];
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["EmptyEnvelope"];
            "application/xml": components["schemas"]["EmptyEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    delete: {
      parameters: {
        query: {
          tenantId: components["schemas"]["TenantId"];
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          identificationTypeId: string;
        };
      };
      responses: {
        /** @description No Content */
        204: {
          content: {
            "application/json": components["schemas"]["EmptyEnvelope"];
            "application/xml": components["schemas"]["EmptyEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/AccountingService/Fiscals/Authorities/{authorityId}/FiscalRegimes": {
    get: {
      parameters: {
        query: {
          fiscalAuthorityId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          authorityId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["FiscalRegimeDtoListEnvelope"];
            "application/xml": components["schemas"]["FiscalRegimeDtoListEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/AccountingService/Fiscals/Authorities/{fiscalAuthorityId}/FiscalRegimes/Count": {
    get: {
      parameters: {
        query?: {
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          fiscalAuthorityId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["Int32Envelope"];
            "application/xml": components["schemas"]["Int32Envelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/AccountingService/Fiscals/Authorities/{fiscalAuthorityId}/FiscalRegimes/{regimeId}": {
    get: {
      parameters: {
        query: {
          tenantId: components["schemas"]["TenantId"];
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          fiscalAuthorityId: string;
          regimeId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["FiscalRegimeDtoEnvelope"];
            "application/xml": components["schemas"]["FiscalRegimeDtoEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/AccountingService/Fiscals/Authorities/FiscalRegimes": {
    post: {
      parameters: {
        query: {
          tenantId: components["schemas"]["TenantId"];
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["FiscalRegimeCreateDto"];
          "application/xml": components["schemas"]["FiscalRegimeCreateDto"];
        };
      };
      responses: {
        /** @description Created */
        201: {
          content: {
            "application/json": components["schemas"]["EmptyEnvelope"];
            "application/xml": components["schemas"]["EmptyEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/AccountingService/Fiscals/Authorities/FiscalRegimes/{regimeId}": {
    put: {
      parameters: {
        query: {
          tenantId: components["schemas"]["TenantId"];
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          regimeId: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["FiscalRegimeUpdateDto"];
          "application/xml": components["schemas"]["FiscalRegimeUpdateDto"];
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["EmptyEnvelope"];
            "application/xml": components["schemas"]["EmptyEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    delete: {
      parameters: {
        query: {
          tenantId: components["schemas"]["TenantId"];
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          regimeId: string;
        };
      };
      responses: {
        /** @description No Content */
        204: {
          content: {
            "application/json": components["schemas"]["EmptyEnvelope"];
            "application/xml": components["schemas"]["EmptyEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/AccountingService/Fiscals/Authorities/{authorityId}/EnumerationRanges": {
    get: {
      parameters: {
        query: {
          fiscalAuthorityId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          authorityId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["InvoiceEnumerationRangeDtoListEnvelope"];
            "application/xml": components["schemas"]["InvoiceEnumerationRangeDtoListEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/AccountingService/Fiscals/Authorities/{fiscalAuthorityId}/EnumerationRanges/Count": {
    get: {
      parameters: {
        query?: {
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          fiscalAuthorityId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["Int32Envelope"];
            "application/xml": components["schemas"]["Int32Envelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/AccountingService/Fiscals/Authorities/{fiscalAuthorityId}/EnumerationRanges/{enumerationRangeId}": {
    get: {
      parameters: {
        query: {
          tenantId: components["schemas"]["TenantId"];
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          fiscalAuthorityId: string;
          enumerationRangeId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["InvoiceEnumerationRangeDtoEnvelope"];
            "application/xml": components["schemas"]["InvoiceEnumerationRangeDtoEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/AccountingService/Fiscals/Authorities/{authorityId}/FiscalResponsibilities": {
    get: {
      parameters: {
        query: {
          fiscalAuthorityId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          authorityId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["FiscalResponsibilityDtoListEnvelope"];
            "application/xml": components["schemas"]["FiscalResponsibilityDtoListEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/AccountingService/Fiscals/Authorities/{fiscalAuthorityId}/FiscalResponsibilities/Count": {
    get: {
      parameters: {
        query?: {
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          fiscalAuthorityId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["Int32Envelope"];
            "application/xml": components["schemas"]["Int32Envelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/AccountingService/Fiscals/Authorities/{fiscalAuthorityId}/FiscalResponsibilities/{fiscalResponsibilityId}": {
    get: {
      parameters: {
        query: {
          tenantId: components["schemas"]["TenantId"];
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          fiscalAuthorityId: string;
          fiscalResponsibilityId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["FiscalResponsibilityDtoEnvelope"];
            "application/xml": components["schemas"]["FiscalResponsibilityDtoEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/AccountingService/Fiscals/Authorities/FiscalResponsibilities": {
    post: {
      parameters: {
        query: {
          tenantId: components["schemas"]["TenantId"];
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["FiscalResponsibilityCreateDto"];
          "application/xml": components["schemas"]["FiscalResponsibilityCreateDto"];
        };
      };
      responses: {
        /** @description Created */
        201: {
          content: {
            "application/json": components["schemas"]["EmptyEnvelope"];
            "application/xml": components["schemas"]["EmptyEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/AccountingService/Fiscals/Authorities/FiscalResponsibilities/{fiscalResponsibilityId}": {
    put: {
      parameters: {
        query: {
          tenantId: components["schemas"]["TenantId"];
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          fiscalResponsibilityId: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["FiscalResponsibilityUpdateDto"];
          "application/xml": components["schemas"]["FiscalResponsibilityUpdateDto"];
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["EmptyEnvelope"];
            "application/xml": components["schemas"]["EmptyEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    delete: {
      parameters: {
        query: {
          tenantId: components["schemas"]["TenantId"];
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          fiscalResponsibilityId: string;
        };
      };
      responses: {
        /** @description No Content */
        204: {
          content: {
            "application/json": components["schemas"]["EmptyEnvelope"];
            "application/xml": components["schemas"]["EmptyEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/AccountingService/Fiscals/Authorities/{fiscalAuthorityId}/FiscalResponsibilities/{fiscalResponsibilityId}/FiscalResponsibilityRecords": {
    get: {
      parameters: {
        query: {
          tenantId: components["schemas"]["TenantId"];
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          fiscalAuthorityId: string;
          fiscalResponsibilityId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["FiscalResponsibilityRecordDtoListEnvelope"];
            "application/xml": components["schemas"]["FiscalResponsibilityRecordDtoListEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/AccountingService/Fiscals/Authorities/{fiscalAuthorityId}/FiscalResponsibilities/{fiscalResponsibilityId}/FiscalResponsibilityRecords/Count": {
    get: {
      parameters: {
        query: {
          tenantId: components["schemas"]["TenantId"];
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          fiscalAuthorityId: string;
          fiscalResponsibilityId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["Int32Envelope"];
            "application/xml": components["schemas"]["Int32Envelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/AccountingService/Fiscals/Authorities/{fiscalAuthorityId}/FiscalResponsibilities/{fiscalResponsibilityId}/FiscalResponsibilityRecords/{fiscalResponsibilityRecordId}": {
    get: {
      parameters: {
        query: {
          tenantId: components["schemas"]["TenantId"];
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          fiscalAuthorityId: string;
          fiscalResponsibilityId: string;
          fiscalResponsibilityRecordId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["FiscalResponsibilityRecordDtoEnvelope"];
            "application/xml": components["schemas"]["FiscalResponsibilityRecordDtoEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/AccountingService/Fiscals/Authorities/FiscalResponsibilityRecords": {
    post: {
      parameters: {
        query: {
          tenantId: components["schemas"]["TenantId"];
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["FiscalResponsibilityRecordCreateDto"];
          "application/xml": components["schemas"]["FiscalResponsibilityRecordCreateDto"];
        };
      };
      responses: {
        /** @description Created */
        201: {
          content: {
            "application/json": components["schemas"]["EmptyEnvelope"];
            "application/xml": components["schemas"]["EmptyEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/AccountingService/Fiscals/Authorities/FiscalResponsibilityRecords/{fiscalResponsibilityRecordId}": {
    put: {
      parameters: {
        query: {
          tenantId: components["schemas"]["TenantId"];
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          fiscalResponsibilityRecordId: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["FiscalResponsibilityRecordUpdateDto"];
          "application/xml": components["schemas"]["FiscalResponsibilityRecordUpdateDto"];
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["EmptyEnvelope"];
            "application/xml": components["schemas"]["EmptyEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    delete: {
      parameters: {
        query: {
          tenantId: components["schemas"]["TenantId"];
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          fiscalResponsibilityRecordId: string;
        };
      };
      responses: {
        /** @description No Content */
        204: {
          content: {
            "application/json": components["schemas"]["EmptyEnvelope"];
            "application/xml": components["schemas"]["EmptyEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/AccountingService/Fiscals/Authorities/{authorityId}/FiscalYears": {
    get: {
      parameters: {
        query: {
          tenantId: components["schemas"]["TenantId"];
          fiscalAuthorityId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          authorityId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["FiscalYearDtoListEnvelope"];
            "application/xml": components["schemas"]["FiscalYearDtoListEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/AccountingService/Fiscals/Authorities/{fiscalAuthorityId}/FiscalYears/Count": {
    get: {
      parameters: {
        query: {
          tenantId: components["schemas"]["TenantId"];
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          fiscalAuthorityId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["Int32Envelope"];
            "application/xml": components["schemas"]["Int32Envelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/AccountingService/Fiscals/Authorities/{fiscalAuthorityId}/FiscalYears/{fiscalYearId}": {
    get: {
      parameters: {
        query: {
          tenantId: components["schemas"]["TenantId"];
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          fiscalAuthorityId: string;
          fiscalYearId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["FiscalYearDtoEnvelope"];
            "application/xml": components["schemas"]["FiscalYearDtoEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/AccountingService/Fiscals/Authorities/{authorityId}/FiscalYears/{fiscalYearId}/FiscalPeriods": {
    get: {
      parameters: {
        query: {
          tenantId: components["schemas"]["TenantId"];
          fiscalAuthorityId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          fiscalYearId: string;
          authorityId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["FiscalPeriodDtoListEnvelope"];
            "application/xml": components["schemas"]["FiscalPeriodDtoListEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/AccountingService/Fiscals/Authorities/{fiscalAuthorityId}/FiscalYears/{fiscalYearId}/FiscalPeriods/Count": {
    get: {
      parameters: {
        query: {
          tenantId: components["schemas"]["TenantId"];
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          fiscalAuthorityId: string;
          fiscalYearId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["Int32Envelope"];
            "application/xml": components["schemas"]["Int32Envelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/AccountingService/Fiscals/Authorities/{fiscalAuthorityId}/FiscalYears/{fiscalYearId}/FiscalPeriods/{fiscalPeriodId}": {
    get: {
      parameters: {
        query: {
          tenantId: components["schemas"]["TenantId"];
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          fiscalAuthorityId: string;
          fiscalYearId: string;
          fiscalPeriodId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["FiscalPeriodDtoEnvelope"];
            "application/xml": components["schemas"]["FiscalPeriodDtoEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/AccountingService/Fiscals/Authorities/FiscalPeriods": {
    post: {
      parameters: {
        query: {
          tenantId: components["schemas"]["TenantId"];
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["FiscalPeriodCreateDto"];
          "application/xml": components["schemas"]["FiscalPeriodCreateDto"];
        };
      };
      responses: {
        /** @description Created */
        201: {
          content: {
            "application/json": components["schemas"]["EmptyEnvelope"];
            "application/xml": components["schemas"]["EmptyEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/AccountingService/Fiscals/Authorities/FiscalPeriods/{fiscalPeriodId}": {
    put: {
      parameters: {
        query: {
          tenantId: components["schemas"]["TenantId"];
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          fiscalPeriodId: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["FiscalPeriodUpdateDto"];
          "application/xml": components["schemas"]["FiscalPeriodUpdateDto"];
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["EmptyEnvelope"];
            "application/xml": components["schemas"]["EmptyEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    delete: {
      parameters: {
        query: {
          tenantId: components["schemas"]["TenantId"];
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          fiscalPeriodId: string;
        };
      };
      responses: {
        /** @description No Content */
        204: {
          content: {
            "application/json": components["schemas"]["EmptyEnvelope"];
            "application/xml": components["schemas"]["EmptyEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/AccountingService/FiscalYears": {
    get: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["FiscalYearDtoListEnvelope"];
            "application/xml": components["schemas"]["FiscalYearDtoListEnvelope"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    post: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["FiscalYearCreateDto"];
          "application/xml": components["schemas"]["FiscalYearCreateDto"];
        };
      };
      responses: {
        /** @description Created */
        201: {
          content: {
            "application/json": components["schemas"]["EmptyEnvelope"];
            "application/xml": components["schemas"]["EmptyEnvelope"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/AccountingService/FiscalYears/Count": {
    get: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["Int32Envelope"];
            "application/xml": components["schemas"]["Int32Envelope"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/AccountingService/FiscalYears/{fiscalYearId}": {
    get: operations["GetFiscalYearDetailsAsync"];
    put: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          fiscalYearId: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["FiscalYearUpdateDto"];
          "application/xml": components["schemas"]["FiscalYearUpdateDto"];
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["EmptyEnvelope"];
            "application/xml": components["schemas"]["EmptyEnvelope"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    delete: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          fiscalYearId: string;
        };
      };
      responses: {
        /** @description No Content */
        204: {
          content: {
            "application/json": components["schemas"]["EmptyEnvelope"];
            "application/xml": components["schemas"]["EmptyEnvelope"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/AccountingService/Grants": {
    get: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["GrantDtoListEnvelope"];
            "application/xml": components["schemas"]["GrantDtoListEnvelope"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    post: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["GrantCreateDto"];
          "application/xml": components["schemas"]["GrantCreateDto"];
        };
      };
      responses: {
        /** @description Created */
        201: {
          content: {
            "application/json": components["schemas"]["EmptyEnvelope"];
            "application/xml": components["schemas"]["EmptyEnvelope"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/AccountingService/Grants/Count": {
    get: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["Int32Envelope"];
            "application/xml": components["schemas"]["Int32Envelope"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/AccountingService/Grants/{grantId}": {
    get: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          grantId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["GrantDtoEnvelope"];
            "application/xml": components["schemas"]["GrantDtoEnvelope"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    put: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          grantId: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["GrantUpdateDto"];
          "application/xml": components["schemas"]["GrantUpdateDto"];
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["EmptyEnvelope"];
            "application/xml": components["schemas"]["EmptyEnvelope"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    delete: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          grantId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["EmptyEnvelope"];
            "application/xml": components["schemas"]["EmptyEnvelope"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/AccountingService/InvoiceEnumerationRanges": {
    get: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["InvoiceEnumerationRangeDtoListEnvelope"];
            "application/xml": components["schemas"]["InvoiceEnumerationRangeDtoListEnvelope"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    post: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["InvoiceEnumerationRangeCreateDto"];
          "application/xml": components["schemas"]["InvoiceEnumerationRangeCreateDto"];
        };
      };
      responses: {
        /** @description Created */
        201: {
          content: {
            "application/json": components["schemas"]["EmptyEnvelope"];
            "application/xml": components["schemas"]["EmptyEnvelope"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/AccountingService/InvoiceEnumerationRanges/{invoiceEnumerationRangeId}": {
    get: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          invoiceEnumerationRangeId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["InvoiceEnumerationRangeDtoEnvelope"];
            "application/xml": components["schemas"]["InvoiceEnumerationRangeDtoEnvelope"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    put: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          invoiceEnumerationRangeId: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["InvoiceEnumerationRangeUpdateDto"];
          "application/xml": components["schemas"]["InvoiceEnumerationRangeUpdateDto"];
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["EmptyEnvelope"];
            "application/xml": components["schemas"]["EmptyEnvelope"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    delete: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          invoiceEnumerationRangeId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["EmptyEnvelope"];
            "application/xml": components["schemas"]["EmptyEnvelope"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/AccountingService/Journals": {
    get: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["JournalDtoListEnvelope"];
            "application/xml": components["schemas"]["JournalDtoListEnvelope"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    post: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["JournalCreateDto"];
          "application/xml": components["schemas"]["JournalCreateDto"];
        };
      };
      responses: {
        /** @description Created */
        201: {
          content: {
            "application/json": components["schemas"]["EmptyEnvelope"];
            "application/xml": components["schemas"]["EmptyEnvelope"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/AccountingService/Journals/Count": {
    get: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["JournalDtoListEnvelope"];
            "application/xml": components["schemas"]["JournalDtoListEnvelope"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/AccountingService/Journals/{journalId}": {
    get: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          journalId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["JournalDtoEnvelope"];
            "application/xml": components["schemas"]["JournalDtoEnvelope"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    put: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          journalId: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["JournalUpdateDto"];
          "application/xml": components["schemas"]["JournalUpdateDto"];
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["EmptyEnvelope"];
            "application/xml": components["schemas"]["EmptyEnvelope"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    delete: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          journalId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["EmptyEnvelope"];
            "application/xml": components["schemas"]["EmptyEnvelope"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/AccountingService/Journals/{journalId}/Entries": {
    get: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          journalId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["JournalEntryDtoListEnvelope"];
            "application/xml": components["schemas"]["JournalEntryDtoListEnvelope"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    post: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          journalId: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["JournalEntryCreateDto"];
          "application/xml": components["schemas"]["JournalEntryCreateDto"];
        };
      };
      responses: {
        /** @description Created */
        201: {
          content: {
            "application/json": components["schemas"]["EmptyEnvelope"];
            "application/xml": components["schemas"]["EmptyEnvelope"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/AccountingService/Journals/{journalId}/Entries/Count": {
    get: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          journalId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["Int32Envelope"];
            "application/xml": components["schemas"]["Int32Envelope"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/AccountingService/Journals/{journalId}/Entries/{journalEntryId}": {
    put: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          journalId: string;
          journalEntryId: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["JournalEntryUpdateDto"];
          "application/xml": components["schemas"]["JournalEntryUpdateDto"];
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["EmptyEnvelope"];
            "application/xml": components["schemas"]["EmptyEnvelope"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    delete: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          journalId: string;
          journalEntryId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["EmptyEnvelope"];
            "application/xml": components["schemas"]["EmptyEnvelope"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/AccountingService/JournalTypes/{journaltypeId}": {
    get: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          journaltypeId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["JournalTypeDtoEnvelope"];
            "application/xml": components["schemas"]["JournalTypeDtoEnvelope"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    put: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          journaltypeId: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["JournalTypeUpdateDto"];
          "application/xml": components["schemas"]["JournalTypeUpdateDto"];
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["EmptyEnvelope"];
            "application/xml": components["schemas"]["EmptyEnvelope"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    delete: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          journaltypeId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["EmptyEnvelope"];
            "application/xml": components["schemas"]["EmptyEnvelope"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/AccountingService/JournalTypes": {
    get: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["JournalTypeDtoListEnvelope"];
            "application/xml": components["schemas"]["JournalTypeDtoListEnvelope"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    post: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["JournalTypeCreateDto"];
          "application/xml": components["schemas"]["JournalTypeCreateDto"];
        };
      };
      responses: {
        /** @description Created */
        201: {
          content: {
            "application/json": components["schemas"]["EmptyEnvelope"];
            "application/xml": components["schemas"]["EmptyEnvelope"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/AccountingService/JournalTypes/Count": {
    get: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["Int32Envelope"];
            "application/xml": components["schemas"]["Int32Envelope"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/AccountingService/Ledgers": {
    get: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["LedgerDtoListEnvelope"];
            "application/xml": components["schemas"]["LedgerDtoListEnvelope"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    post: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["CreateLedgerDto"];
          "application/xml": components["schemas"]["CreateLedgerDto"];
        };
      };
      responses: {
        /** @description Created */
        201: {
          content: {
            "application/json": components["schemas"]["EmptyEnvelope"];
            "application/xml": components["schemas"]["EmptyEnvelope"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/AccountingService/Ledgers/Count": {
    get: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["Int32Envelope"];
            "application/xml": components["schemas"]["Int32Envelope"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/AccountingService/Ledgers/{ledgerId}": {
    get: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          ledgerId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["LedgerDtoEnvelope"];
            "application/xml": components["schemas"]["LedgerDtoEnvelope"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    put: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          ledgerId: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["UpdateLedgerDto"];
          "application/xml": components["schemas"]["UpdateLedgerDto"];
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["EmptyEnvelope"];
            "application/xml": components["schemas"]["EmptyEnvelope"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/AccountingService/Loans/{loanId}": {
    get: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          loanId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["LoanDtoEnvelope"];
            "application/xml": components["schemas"]["LoanDtoEnvelope"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    put: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          loanId: string;
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["LoanUpdateDto"];
          "application/xml": components["schemas"]["LoanUpdateDto"];
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["EmptyEnvelope"];
            "application/xml": components["schemas"]["EmptyEnvelope"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    delete: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          loanId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["EmptyEnvelope"];
            "application/xml": components["schemas"]["EmptyEnvelope"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/AccountingService/Loans": {
    get: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["LoanDtoListEnvelope"];
            "application/xml": components["schemas"]["LoanDtoListEnvelope"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    post: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["LoanCreateDto"];
          "application/xml": components["schemas"]["LoanCreateDto"];
        };
      };
      responses: {
        /** @description Created */
        201: {
          content: {
            "application/json": components["schemas"]["EmptyEnvelope"];
            "application/xml": components["schemas"]["EmptyEnvelope"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/AccountingService/Loans/Count": {
    get: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["Int32Envelope"];
            "application/xml": components["schemas"]["Int32Envelope"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/AccountingService/Loans/Applications": {
    get: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["LoanApplicationDtoListEnvelope"];
            "application/xml": components["schemas"]["LoanApplicationDtoListEnvelope"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    post: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["LoanApplicationCreateDto"];
          "application/xml": components["schemas"]["LoanApplicationCreateDto"];
        };
      };
      responses: {
        /** @description Created */
        201: {
          content: {
            "application/json": components["schemas"]["EmptyEnvelope"];
            "application/xml": components["schemas"]["EmptyEnvelope"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/AccountingService/Loans/Applications/Count": {
    post: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["Int32Envelope"];
            "application/xml": components["schemas"]["Int32Envelope"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/AccountingService/Loans/Applications/{loanApplicationId}": {
    get: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          loanApplicationId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["LoanApplicationDtoEnvelope"];
            "application/xml": components["schemas"]["LoanApplicationDtoEnvelope"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    put: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          loanApplicationId: string;
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["LoanApplicationUpdateDto"];
          "application/xml": components["schemas"]["LoanApplicationUpdateDto"];
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["EmptyEnvelope"];
            "application/xml": components["schemas"]["EmptyEnvelope"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    delete: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          loanApplicationId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["EmptyEnvelope"];
            "application/xml": components["schemas"]["EmptyEnvelope"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/AccountingService/Receipts": {
    get: {
      parameters: {
        query: {
          tenantId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["ReceiptDtoListEnvelope"];
            "application/xml": components["schemas"]["ReceiptDtoListEnvelope"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    post: {
      parameters: {
        query: {
          tenantId: string;
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["ReceiptCreateDto"];
          "application/xml": components["schemas"]["ReceiptCreateDto"];
        };
      };
      responses: {
        /** @description Created */
        201: {
          content: {
            "application/json": components["schemas"]["EmptyEnvelope"];
            "application/xml": components["schemas"]["EmptyEnvelope"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/AccountingService/Receipts/Count": {
    get: {
      parameters: {
        query: {
          tenantId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["Int32Envelope"];
            "application/xml": components["schemas"]["Int32Envelope"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/AccountingService/Receipts/{receiptId}": {
    get: {
      parameters: {
        query: {
          tenantId: string;
        };
        path: {
          receiptId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["ReceiptDtoEnvelope"];
            "application/xml": components["schemas"]["ReceiptDtoEnvelope"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    put: {
      parameters: {
        query: {
          tenantId: string;
        };
        path: {
          receiptId: string;
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["ReceiptUpdateDto"];
          "application/xml": components["schemas"]["ReceiptUpdateDto"];
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["EmptyEnvelope"];
            "application/xml": components["schemas"]["EmptyEnvelope"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    delete: {
      parameters: {
        query: {
          tenantId: string;
        };
        path: {
          receiptId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["EmptyEnvelope"];
            "application/xml": components["schemas"]["EmptyEnvelope"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/AccountingService/Shares/ShareClasses": {
    get: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["ShareClassDtoListEnvelope"];
            "application/xml": components["schemas"]["ShareClassDtoListEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    post: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["ShareClassCreateDto"];
          "application/xml": components["schemas"]["ShareClassCreateDto"];
        };
      };
      responses: {
        /** @description Created */
        201: {
          content: {
            "application/json": components["schemas"]["ShareClassDtoEnvelope"];
            "application/xml": components["schemas"]["ShareClassDtoEnvelope"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/AccountingService/Shares/ShareClasses/Count": {
    get: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["Int32Envelope"];
            "application/xml": components["schemas"]["Int32Envelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/AccountingService/Shares/ShareClasses/{shareClassId}": {
    get: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          shareClassId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["ShareClassDtoEnvelope"];
            "application/xml": components["schemas"]["ShareClassDtoEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    put: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          shareClassId: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["ShareClassUpdateDto"];
          "application/xml": components["schemas"]["ShareClassUpdateDto"];
        };
      };
      responses: {
        /** @description Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    delete: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          shareClassId: string;
        };
      };
      responses: {
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/AccountingService/Shares/Issuances": {
    get: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["ShareIssuanceDtoListEnvelope"];
            "application/xml": components["schemas"]["ShareIssuanceDtoListEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    post: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["ShareIssuanceCreateDto"];
          "application/xml": components["schemas"]["ShareIssuanceCreateDto"];
        };
      };
      responses: {
        /** @description Created */
        201: {
          content: {
            "application/json": components["schemas"]["ShareIssuanceDtoEnvelope"];
            "application/xml": components["schemas"]["ShareIssuanceDtoEnvelope"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/AccountingService/Shares/Issuances/Count": {
    get: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["Int32Envelope"];
            "application/xml": components["schemas"]["Int32Envelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/AccountingService/Shares/Issuances/{shareIssuanceId}": {
    get: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          shareIssuanceId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["ShareIssuanceDtoEnvelope"];
            "application/xml": components["schemas"]["ShareIssuanceDtoEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    put: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          shareIssuanceId: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["ShareIssuanceUpdateDto"];
          "application/xml": components["schemas"]["ShareIssuanceUpdateDto"];
        };
      };
      responses: {
        /** @description Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    delete: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          shareIssuanceId: string;
        };
      };
      responses: {
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/AccountingService/Shares/Transfers": {
    get: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["ShareTransferDtoListEnvelope"];
            "application/xml": components["schemas"]["ShareTransferDtoListEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    post: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["ShareTransferCreateDto"];
          "application/xml": components["schemas"]["ShareTransferCreateDto"];
        };
      };
      responses: {
        /** @description Created */
        201: {
          content: {
            "application/json": components["schemas"]["ShareTransferDtoEnvelope"];
            "application/xml": components["schemas"]["ShareTransferDtoEnvelope"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/AccountingService/Shares/Transfers/Count": {
    get: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["Int32Envelope"];
            "application/xml": components["schemas"]["Int32Envelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/AccountingService/Shares/Transfers/{shareTransferId}": {
    get: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          shareTransferId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["ShareTransferDtoEnvelope"];
            "application/xml": components["schemas"]["ShareTransferDtoEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    put: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          shareTransferId: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["ShareTransferUpdateDto"];
          "application/xml": components["schemas"]["ShareTransferUpdateDto"];
        };
      };
      responses: {
        /** @description Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    delete: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          shareTransferId: string;
        };
      };
      responses: {
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/AccountingService/Shares/TransferReasons": {
    get: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["ShareTransferReasonDtoListEnvelope"];
            "application/xml": components["schemas"]["ShareTransferReasonDtoListEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    post: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["ShareTransferReasonCreateDto"];
          "application/xml": components["schemas"]["ShareTransferReasonCreateDto"];
        };
      };
      responses: {
        /** @description Created */
        201: {
          content: {
            "application/json": components["schemas"]["ShareTransferReasonDtoEnvelope"];
            "application/xml": components["schemas"]["ShareTransferReasonDtoEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/AccountingService/Shares/TransferReasons/Count": {
    get: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["Int32Envelope"];
            "application/xml": components["schemas"]["Int32Envelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/AccountingService/Shares/TransferReasons/{shareTransferReasonId}": {
    get: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          shareTransferReasonId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["ShareTransferReasonDtoEnvelope"];
            "application/xml": components["schemas"]["ShareTransferReasonDtoEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    put: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          shareTransferReasonId: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["ShareTransferReasonUpdateDto"];
          "application/xml": components["schemas"]["ShareTransferReasonUpdateDto"];
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["ShareTransferReasonDtoEnvelope"];
            "application/xml": components["schemas"]["ShareTransferReasonDtoEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    delete: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          shareTransferReasonId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["ShareTransferReasonDtoEnvelope"];
            "application/xml": components["schemas"]["ShareTransferReasonDtoEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/AccountingService/Taxes/TaxPolicies": {
    get: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["TaxPolicyDtoListEnvelope"];
            "application/xml": components["schemas"]["TaxPolicyDtoListEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    post: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["TaxPolicyCreateDto"];
          "application/xml": components["schemas"]["TaxPolicyCreateDto"];
        };
      };
      responses: {
        /** @description Created */
        201: {
          content: {
            "application/json": components["schemas"]["EmptyEnvelope"];
            "application/xml": components["schemas"]["EmptyEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/AccountingService/Taxes/TaxPolicies/ByAutority/{authorityId}": {
    get: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          authorityId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["TaxPolicyDtoListEnvelope"];
            "application/xml": components["schemas"]["TaxPolicyDtoListEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/AccountingService/Taxes/TaxPolicies/{id}": {
    get: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          id: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["TaxPolicyDtoEnvelope"];
            "application/xml": components["schemas"]["TaxPolicyDtoEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    put: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          id: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["TaxPolicyUpdateDto"];
          "application/xml": components["schemas"]["TaxPolicyUpdateDto"];
        };
      };
      responses: {
        /** @description No Content */
        204: {
          content: {
            "application/json": components["schemas"]["EmptyEnvelope"];
            "application/xml": components["schemas"]["EmptyEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/AccountingService/Taxes/TaxPolicies/{taxPolicyId}/ItemTaxPolicyRecords": {
    get: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          taxPolicyId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["ItemTaxPolicyRecordDtoListEnvelope"];
            "application/xml": components["schemas"]["ItemTaxPolicyRecordDtoListEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    post: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          taxPolicyId: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["ItemTaxPolicyRecordCreateDto"];
          "application/xml": components["schemas"]["ItemTaxPolicyRecordCreateDto"];
        };
      };
      responses: {
        /** @description Created */
        201: {
          content: {
            "application/json": components["schemas"]["EmptyEnvelope"];
            "application/xml": components["schemas"]["EmptyEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/AccountingService/Taxes/TaxPolicies/{taxPolicyId}/ItemTaxPolicyRecords/{itemTaxPolicyRecordId}": {
    get: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          taxPolicyId: string;
          itemTaxPolicyRecordId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["ItemTaxPolicyRecordDtoEnvelope"];
            "application/xml": components["schemas"]["ItemTaxPolicyRecordDtoEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    put: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          taxPolicyId: string;
          itemTaxPolicyRecordId: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["ItemTaxPolicyRecordUpdateDto"];
          "application/xml": components["schemas"]["ItemTaxPolicyRecordUpdateDto"];
        };
      };
      responses: {
        /** @description No Content */
        204: {
          content: {
            "application/json": components["schemas"]["EmptyEnvelope"];
            "application/xml": components["schemas"]["EmptyEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    delete: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          taxPolicyId: string;
          itemTaxPolicyRecordId: string;
        };
      };
      responses: {
        /** @description No Content */
        204: {
          content: {
            "application/json": components["schemas"]["EmptyEnvelope"];
            "application/xml": components["schemas"]["EmptyEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/AccountingService/Taxes/TaxPolicies/{taxPolicyId}/AppliedTaxPolicyRecords": {
    get: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          taxPolicyId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["AppliedTaxPolicyRecordDtoListEnvelope"];
            "application/xml": components["schemas"]["AppliedTaxPolicyRecordDtoListEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    post: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          taxPolicyId: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["AppliedTaxPolicyRecordCreateDto"];
          "application/xml": components["schemas"]["AppliedTaxPolicyRecordCreateDto"];
        };
      };
      responses: {
        /** @description Created */
        201: {
          content: {
            "application/json": components["schemas"]["EmptyEnvelope"];
            "application/xml": components["schemas"]["EmptyEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/AccountingService/Taxes/TaxPolicies/{taxPolicyId}/AppliedTaxPolicyRecords/Count": {
    get: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          taxPolicyId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["AppliedTaxPolicyRecordDtoListEnvelope"];
            "application/xml": components["schemas"]["AppliedTaxPolicyRecordDtoListEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/AccountingService/Taxes/TaxPolicies/{taxPolicyId}/AppliedTaxPolicyRecords/{appliedTaxPolicyRecordId}": {
    get: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          taxPolicyId: string;
          appliedTaxPolicyRecordId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["AppliedTaxPolicyRecordDtoEnvelope"];
            "application/xml": components["schemas"]["AppliedTaxPolicyRecordDtoEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    put: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          taxPolicyId: string;
          appliedTaxPolicyRecordId: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["AppliedTaxPolicyRecordUpdateDto"];
          "application/xml": components["schemas"]["AppliedTaxPolicyRecordUpdateDto"];
        };
      };
      responses: {
        /** @description No Content */
        204: {
          content: {
            "application/json": components["schemas"]["EmptyEnvelope"];
            "application/xml": components["schemas"]["EmptyEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    delete: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          taxPolicyId: string;
          appliedTaxPolicyRecordId: string;
        };
      };
      responses: {
        /** @description No Content */
        204: {
          content: {
            "application/json": components["schemas"]["EmptyEnvelope"];
            "application/xml": components["schemas"]["EmptyEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/AccountingService/Taxes/TaxRates": {
    get: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["TaxRateDtoListEnvelope"];
            "application/xml": components["schemas"]["TaxRateDtoListEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    post: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["TaxRateCreateDto"];
          "application/xml": components["schemas"]["TaxRateCreateDto"];
        };
      };
      responses: {
        /** @description Created */
        201: {
          content: {
            "application/json": components["schemas"]["EmptyEnvelope"];
            "application/xml": components["schemas"]["EmptyEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/AccountingService/Taxes/TaxRates/{id}": {
    get: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          id: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["TaxRateDtoEnvelope"];
            "application/xml": components["schemas"]["TaxRateDtoEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    put: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          id: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["TaxRateUpdateDto"];
          "application/xml": components["schemas"]["TaxRateUpdateDto"];
        };
      };
      responses: {
        /** @description No Content */
        204: {
          content: {
            "application/json": components["schemas"]["EmptyEnvelope"];
            "application/xml": components["schemas"]["EmptyEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    delete: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          id: string;
        };
      };
      responses: {
        /** @description No Content */
        204: {
          content: {
            "application/json": components["schemas"]["EmptyEnvelope"];
            "application/xml": components["schemas"]["EmptyEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/AccountingService/Transactions": {
    get: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["TransactionDtoListEnvelope"];
            "application/xml": components["schemas"]["TransactionDtoListEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    post: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["TransactionCreateDto"];
          "application/xml": components["schemas"]["TransactionCreateDto"];
        };
      };
      responses: {
        /** @description Created */
        201: {
          content: {
            "application/json": components["schemas"]["TransactionDtoEnvelope"];
            "application/xml": components["schemas"]["TransactionDtoEnvelope"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/AccountingService/Transactions/Count": {
    get: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["Int32Envelope"];
            "application/xml": components["schemas"]["Int32Envelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/AccountingService/Transactions/{transactionId}": {
    get: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          transactionId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["TransactionDtoEnvelope"];
            "application/xml": components["schemas"]["TransactionDtoEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    put: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          transactionId: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["TransactionUpdateDto"];
          "application/xml": components["schemas"]["TransactionUpdateDto"];
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["TransactionDtoEnvelope"];
            "application/xml": components["schemas"]["TransactionDtoEnvelope"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    delete: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          transactionId: string;
        };
      };
      responses: {
        /** @description No Content */
        204: {
          content: {
            "application/json": components["schemas"]["TransactionDtoEnvelope"];
            "application/xml": components["schemas"]["TransactionDtoEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/AccountingService/Transactions/Categories": {
    get: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["TransactionCategoryDtoListEnvelope"];
            "application/xml": components["schemas"]["TransactionCategoryDtoListEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    post: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["TransactionCategoryCreateDto"];
          "application/xml": components["schemas"]["TransactionCategoryCreateDto"];
        };
      };
      responses: {
        /** @description Created */
        201: {
          content: {
            "application/json": components["schemas"]["TransactionCategoryDtoEnvelope"];
            "application/xml": components["schemas"]["TransactionCategoryDtoEnvelope"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/AccountingService/Transactions/Categories/Count": {
    get: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["Int32Envelope"];
            "application/xml": components["schemas"]["Int32Envelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/AccountingService/Transactions/Categories/{categoryId}": {
    get: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          categoryId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["TransactionCategoryDtoEnvelope"];
            "application/xml": components["schemas"]["TransactionCategoryDtoEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    put: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          categoryId: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["TransactionCategoryUpdateDto"];
          "application/xml": components["schemas"]["TransactionCategoryUpdateDto"];
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["TransactionCategoryDtoEnvelope"];
            "application/xml": components["schemas"]["TransactionCategoryDtoEnvelope"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    delete: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          categoryId: string;
        };
      };
      responses: {
        /** @description No Content */
        204: {
          content: {
            "application/json": components["schemas"]["TransactionCategoryDtoEnvelope"];
            "application/xml": components["schemas"]["TransactionCategoryDtoEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: {
    AccountCreateDto: {
      /** Format: uuid */
      id?: string;
      /** Format: date-time */
      timestamp?: string;
      group?: boolean;
      frozen?: boolean;
      name: string;
      code?: string | null;
      path?: string | null;
      prefix?: string | null;
      tenantId?: string | null;
      currencyId: string;
      enrollmentId?: string | null;
      accountTypeId?: string | null;
      parentAccountId?: string | null;
      /**
       * Format: int32
       * @enum {integer}
       */
      accountCategory: 0 | 1 | 2 | 3 | 4;
    };
    AccountDto: {
      id?: string | null;
      /** Format: date-time */
      timestamp?: string | null;
      group?: boolean;
      frozen?: boolean;
      name?: string | null;
      code?: string | null;
      path?: string | null;
      title?: string | null;
      prefix?: string | null;
      /** Format: double */
      balance?: number;
      currencyId?: string | null;
      accountType?: string | null;
      qualifiedName?: string | null;
      accountTypeId?: string | null;
      /** Format: double */
      debitsBalance?: number;
      /** Format: double */
      creditsBalance?: number;
      parentAccountId?: string | null;
      tenantId?: string | null;
      enrollmentId?: string | null;
      /** Format: int32 */
      childrenAccountsCount?: number;
      /**
       * Format: int32
       * @enum {integer}
       */
      accountCategory?: 0 | 1 | 2 | 3 | 4;
      balanceAmount?: components["schemas"]["Money"];
      creditsBalanceAmount?: components["schemas"]["Money"];
      debitsBalanceAmount?: components["schemas"]["Money"];
    };
    AccountDtoEnvelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
      result?: components["schemas"]["AccountDto"];
    };
    AccountDtoListEnvelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
      result?: components["schemas"]["AccountDto"][] | null;
    };
    AccountGroupCreateDto: {
      /** Format: uuid */
      id?: string;
      /** Format: date-time */
      timestamp?: string;
      title?: string | null;
      description?: string | null;
      parentAccountGroupId?: string | null;
      tenantId?: string | null;
      enrolmentId?: string | null;
    };
    AccountGroupDto: {
      id?: string | null;
      /** Format: date-time */
      timestamp?: string | null;
      title?: string | null;
      description?: string | null;
      parentAccountGroupId?: string | null;
      tenantId?: string | null;
      enrolmentId?: string | null;
    };
    AccountGroupDtoEnvelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
      result?: components["schemas"]["AccountGroupDto"];
    };
    AccountGroupDtoListEnvelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
      result?: components["schemas"]["AccountGroupDto"][] | null;
    };
    AccountGroupUpdateDto: {
      title?: string | null;
      description?: string | null;
      parentAccountGroupId?: string | null;
      tenantId?: string | null;
      enrolmentId?: string | null;
    };
    AccountRelationCreateDto: {
      /** Format: uuid */
      id?: string;
      /** Format: date-time */
      timestamp?: string;
      accountId?: string | null;
      tenantId?: string | null;
      enrolmentId?: string | null;
    };
    AccountRelationDto: {
      id?: string | null;
      /** Format: date-time */
      timestamp?: string | null;
      accountId?: string | null;
      tenantId?: string | null;
      enrolmentId?: string | null;
    };
    AccountRelationDtoListEnvelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
      result?: components["schemas"]["AccountRelationDto"][] | null;
    };
    AccountRelationUpdateDto: {
      accountId?: string | null;
      tenantId?: string | null;
      enrolmentId?: string | null;
    };
    AccountTypeCreateDto: {
      /** Format: uuid */
      id?: string;
      /** Format: date-time */
      timestamp?: string;
      name?: string | null;
      description?: string | null;
      tenantId?: string | null;
      enrolmentId?: string | null;
    };
    AccountTypeDto: {
      id?: string | null;
      /** Format: date-time */
      timestamp?: string | null;
      name?: string | null;
      description?: string | null;
      tenantId?: string | null;
      enrolmentId?: string | null;
    };
    AccountTypeDtoListEnvelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
      result?: components["schemas"]["AccountTypeDto"][] | null;
    };
    AccountTypeUpdateDto: {
      name?: string | null;
      description?: string | null;
      tenantId?: string | null;
      enrolmentId?: string | null;
    };
    AccountUpdateDto: {
      group?: boolean;
      frozen?: boolean;
      name: string;
      code?: string | null;
      path?: string | null;
      prefix?: string | null;
      currencyId: string;
      accountTypeId?: string | null;
      parentAccountId?: string | null;
      /**
       * Format: int32
       * @enum {integer}
       */
      accountCategory?: 0 | 1 | 2 | 3 | 4;
    };
    AccountingEntryCreateDto: {
      /** Format: uuid */
      id?: string;
      /** Format: date-time */
      timestamp?: string;
      tenantId?: string | null;
      enrollmentId?: string | null;
      description: string;
      /** Format: date-time */
      date?: string | null;
      /** Format: double */
      amount?: number;
      currencyId: string;
      debitAccountId?: string | null;
      creditAccountId?: string | null;
      journalEntryId?: string | null;
      /**
       * Format: int32
       * @enum {integer}
       */
      accountingEntryType?: 0 | 1 | 2;
    };
    AccountingEntryDto: {
      id?: string | null;
      /** Format: date-time */
      timestamp?: string | null;
      /** Format: double */
      debit?: number;
      /** Format: double */
      credit?: number;
      description?: string | null;
      /** Format: double */
      forexRate?: number;
      accountId?: string | null;
      tenantId?: string | null;
      /** Format: date-time */
      date?: string | null;
      enrolmentId?: string | null;
      currencyId?: string | null;
      debitAccountId?: string | null;
      creditAccountId?: string | null;
      journalEntryId?: string | null;
      debitAccountName?: string | null;
      creditAccountName?: string | null;
      /**
       * Format: int32
       * @enum {integer}
       */
      accountingEntryType?: 0 | 1 | 2;
      debitAmount?: components["schemas"]["Money"];
      creditAmount?: components["schemas"]["Money"];
    };
    AccountingEntryDtoEnvelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
      result?: components["schemas"]["AccountingEntryDto"];
    };
    AccountingEntryDtoListEnvelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
      result?: components["schemas"]["AccountingEntryDto"][] | null;
    };
    AccountingEntryUpdateDto: {
      tenantId?: string | null;
      enrolmentId?: string | null;
      description?: string | null;
      /** Format: double */
      amount?: number;
      /** Format: date-time */
      date?: string | null;
      currencyId?: string | null;
      debitAccountId?: string | null;
      creditAccountId?: string | null;
      journalEntryId?: string | null;
      /**
       * Format: int32
       * @enum {integer}
       */
      accountingEntryType?: 0 | 1 | 2;
    };
    AccountingPeriodCreateDto: {
      /** Format: uuid */
      id?: string;
      /** Format: date-time */
      timestamp?: string;
      name?: string | null;
      tenantId?: string | null;
      enrolmentId?: string | null;
      /** Format: date-time */
      dateStart?: string;
      /** Format: date-time */
      dateEnd?: string;
    };
    AccountingPeriodDto: {
      id?: string | null;
      /** Format: date-time */
      timestamp?: string | null;
      name?: string | null;
      tenantId?: string | null;
      enrolmentId?: string | null;
      /** Format: date-time */
      dateStart?: string;
      /** Format: date-time */
      dateEnd?: string;
    };
    AccountingPeriodDtoEnvelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
      result?: components["schemas"]["AccountingPeriodDto"];
    };
    AccountingPeriodDtoListEnvelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
      result?: components["schemas"]["AccountingPeriodDto"][] | null;
    };
    AccountingPeriodUpdateDto: {
      name?: string | null;
      tenantId?: string | null;
      enrolmentId?: string | null;
      /** Format: date-time */
      dateStart?: string;
      /** Format: date-time */
      dateEnd?: string;
    };
    AppliedTaxPolicyRecordCreateDto: {
      /** Format: uuid */
      id?: string;
      /** Format: date-time */
      timestamp?: string;
      tenantId?: string | null;
      enrolmentId?: string | null;
      taxPolicyId?: string | null;
      invoiceId?: string | null;
      itemId?: string | null;
      /** Format: double */
      taxAmountInUSD?: number;
      /** Format: double */
      taxBaseAmountInUSD?: number;
    };
    AppliedTaxPolicyRecordDto: {
      id?: string | null;
      /** Format: date-time */
      timestamp?: string | null;
      tenantId?: string | null;
      enrolmentId?: string | null;
      taxPolicyId?: string | null;
      invoiceId?: string | null;
      itemId?: string | null;
      /** Format: double */
      taxAmountInUSD?: number;
      /** Format: double */
      taxBaseAmountInUSD?: number;
    };
    AppliedTaxPolicyRecordDtoEnvelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
      result?: components["schemas"]["AppliedTaxPolicyRecordDto"];
    };
    AppliedTaxPolicyRecordDtoListEnvelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
      result?: components["schemas"]["AppliedTaxPolicyRecordDto"][] | null;
    };
    AppliedTaxPolicyRecordUpdateDto: {
      tenantId?: string | null;
      enrolmentId?: string | null;
      taxPolicyId?: string | null;
      invoiceId?: string | null;
      itemId?: string | null;
      /** Format: double */
      taxAmountInUSD?: number;
      /** Format: double */
      taxBaseAmountInUSD?: number;
    };
    BankAccountCreateDto: {
      /** Format: uuid */
      id?: string;
      /** Format: date-time */
      timestamp?: string;
      group?: boolean;
      frozen?: boolean;
      name: string;
      code?: string | null;
      path?: string | null;
      prefix?: string | null;
      tenantId?: string | null;
      currencyId: string;
      enrollmentId?: string | null;
      accountTypeId?: string | null;
      parentAccountId?: string | null;
      /**
       * Format: int32
       * @enum {integer}
       */
      accountCategory: 0 | 1 | 2 | 3 | 4;
      iban?: string | null;
      swift?: string | null;
      branchCode?: string | null;
      bankAccountNumber?: string | null;
      qualifiedName?: string | null;
      bankId?: string | null;
      bankProfileId?: string | null;
    };
    BankAccountDto: {
      id?: string | null;
      /** Format: date-time */
      timestamp?: string | null;
      group?: boolean;
      frozen?: boolean;
      name?: string | null;
      code?: string | null;
      path?: string | null;
      title?: string | null;
      prefix?: string | null;
      /** Format: double */
      balance?: number;
      currencyId?: string | null;
      accountType?: string | null;
      accountTypeId?: string | null;
      /** Format: double */
      debitsBalance?: number;
      /** Format: double */
      creditsBalance?: number;
      parentAccountId?: string | null;
      tenantId?: string | null;
      enrollmentId?: string | null;
      /** Format: int32 */
      childrenAccountsCount?: number;
      /**
       * Format: int32
       * @enum {integer}
       */
      accountCategory?: 0 | 1 | 2 | 3 | 4;
      balanceAmount?: components["schemas"]["Money"];
      creditsBalanceAmount?: components["schemas"]["Money"];
      debitsBalanceAmount?: components["schemas"]["Money"];
      iban?: string | null;
      swift?: string | null;
      branchCode?: string | null;
      bankAccountNumber?: string | null;
      qualifiedName?: string | null;
      bankId?: string | null;
      bankProfileId?: string | null;
    };
    BankAccountDtoEnvelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
      result?: components["schemas"]["BankAccountDto"];
    };
    BankAccountDtoListEnvelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
      result?: components["schemas"]["BankAccountDto"][] | null;
    };
    BankAccountUpdateDto: {
      group?: boolean;
      frozen?: boolean;
      name: string;
      code?: string | null;
      path?: string | null;
      prefix?: string | null;
      currencyId: string;
      accountTypeId?: string | null;
      parentAccountId?: string | null;
      /**
       * Format: int32
       * @enum {integer}
       */
      accountCategory?: 0 | 1 | 2 | 3 | 4;
      iban?: string | null;
      swift?: string | null;
      branchCode?: string | null;
      bankAccountNumber?: string | null;
      qualifiedName?: string | null;
      bankId?: string | null;
      bankProfileId?: string | null;
    };
    BankCreateDto: {
      /** Format: uuid */
      id?: string;
      /** Format: date-time */
      timestamp?: string;
      name?: string | null;
      image?: string | null;
      countryId?: string | null;
    };
    BankDto: {
      id?: string | null;
      /** Format: date-time */
      timestamp?: string | null;
      name?: string | null;
      image?: string | null;
      countryId?: string | null;
    };
    BankDtoEnvelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
      result?: components["schemas"]["BankDto"];
    };
    BankDtoListEnvelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
      result?: components["schemas"]["BankDto"][] | null;
    };
    BankGuaranteeCreateDto: {
      /** Format: uuid */
      id?: string;
      /** Format: date-time */
      timestamp?: string;
      /** Format: double */
      margin?: number;
      /** Format: double */
      charges?: number;
      beneficiaryName?: string | null;
      guaranteeNumber?: string | null;
      guaranteeConditions?: string | null;
      /** Format: double */
      fixedDepositNumber?: number;
      /** Format: date-time */
      startDate?: string;
      /** Format: date-time */
      endDate?: string;
      /** Format: int32 */
      validityInDays?: number;
      tenantId?: string | null;
      /**
       * Format: int32
       * @enum {integer}
       */
      bankGuaranteeType?: 0 | 1;
      enrolmentId?: string | null;
      contactId?: string | null;
      projectId?: string | null;
      orderId?: string | null;
      bankProfileId?: string | null;
      bankAccountId?: string | null;
      currencyId?: string | null;
    };
    BankGuaranteeDto: {
      id?: string | null;
      /** Format: date-time */
      timestamp?: string | null;
      /** Format: double */
      margin?: number;
      /** Format: double */
      charges?: number;
      beneficiaryName?: string | null;
      guaranteeNumber?: string | null;
      guaranteeConditions?: string | null;
      /** Format: double */
      fixedDepositNumber?: number;
      /** Format: date-time */
      startDate?: string;
      /** Format: date-time */
      endDate?: string;
      /** Format: int32 */
      validityInDays?: number;
      tenantId?: string | null;
      /**
       * Format: int32
       * @enum {integer}
       */
      bankGuaranteeType?: 0 | 1;
      enrolmentId?: string | null;
      contactId?: string | null;
      projectId?: string | null;
      orderId?: string | null;
      bankProfileId?: string | null;
      bankAccountId?: string | null;
      currencyId?: string | null;
    };
    BankGuaranteeDtoEnvelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
      result?: components["schemas"]["BankGuaranteeDto"];
    };
    BankGuaranteeDtoListEnvelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
      result?: components["schemas"]["BankGuaranteeDto"][] | null;
    };
    BankGuaranteeUpdateDto: {
      /** Format: double */
      margin?: number;
      /** Format: double */
      charges?: number;
      beneficiaryName?: string | null;
      guaranteeNumber?: string | null;
      guaranteeConditions?: string | null;
      /** Format: double */
      fixedDepositNumber?: number;
      /** Format: date-time */
      startDate?: string;
      /** Format: date-time */
      endDate?: string;
      /** Format: int32 */
      validityInDays?: number;
      tenantId?: string | null;
      /**
       * Format: int32
       * @enum {integer}
       */
      bankGuaranteeType?: 0 | 1;
      enrolmentId?: string | null;
      contactId?: string | null;
      projectId?: string | null;
      orderId?: string | null;
      bankProfileId?: string | null;
      bankAccountId?: string | null;
      currencyId?: string | null;
    };
    BankTransactionCreateDto: {
      /** Format: uuid */
      id?: string;
      /** Format: date-time */
      timestamp?: string;
      bankProfileId?: string | null;
      bankAccountId?: string | null;
    };
    BankTransactionDto: {
      id?: string | null;
      /** Format: date-time */
      timestamp?: string | null;
      description?: string | null;
      /** Format: double */
      price?: number;
      /** Format: double */
      quantity?: number;
      externalDescription?: string | null;
      /** Format: double */
      basisQuantity?: number;
      /** Format: double */
      basisAmount?: number;
      /** Format: double */
      percent?: number;
      unitGroupId?: string | null;
      unitId?: string | null;
      transactionCategoryId?: string | null;
      currencyId?: string | null;
      tenantId?: string | null;
      enrolmentId?: string | null;
      bankProfileId?: string | null;
      bankAccountId?: string | null;
    };
    BankTransactionDtoEnvelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
      result?: components["schemas"]["BankTransactionDto"];
    };
    BankTransactionDtoListEnvelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
      result?: components["schemas"]["BankTransactionDto"][] | null;
    };
    BankTransactionUpdateDto: {
      description?: string | null;
      /** Format: double */
      price?: number;
      /** Format: double */
      quantity?: number;
      externalDescription?: string | null;
      /** Format: double */
      basisQuantity?: number;
      /** Format: double */
      basisAmount?: number;
      /** Format: double */
      percent?: number;
      unitGroupId?: string | null;
      unitId?: string | null;
      transactionCategoryId?: string | null;
      currencyId?: string | null;
      tenantId?: string | null;
      enrolmentId?: string | null;
      bankProfileId?: string | null;
      bankAccountId?: string | null;
    };
    BankUpdateDto: {
      name?: string | null;
      image?: string | null;
      countryId?: string | null;
    };
    BillingProfileCreateDto: {
      /** Format: uuid */
      id?: string;
      /** Format: date-time */
      timestamp?: string;
      contactId?: string | null;
      tenantId?: string | null;
      taxId: string;
      phone: string;
      email: string;
      address: string;
      address1?: string | null;
      address2?: string | null;
      postalCode: string;
      businessName: string;
      commercialName: string;
      ticker?: string | null;
      duns?: string | null;
      isPublicCompany?: boolean;
      isFactaCustomer?: boolean;
      countryId: string;
      stateId: string;
      cityId: string;
      fiscalIdentificationTypeId: string;
      fiscalAuthorityId: string;
      fiscalRegimeId: string;
    };
    BillingProfileDto: {
      id?: string | null;
      /** Format: date-time */
      timestamp?: string;
      tenantId?: string | null;
      contactId?: string | null;
      enrollmentId?: string | null;
      about?: string | null;
      verified?: boolean;
      submitted?: boolean;
      avatarUrl?: string | null;
      qualifiedName?: string | null;
      /** Format: date-time */
      verificationTimestamp?: string | null;
      data?: string | null;
      dataLabel?: string | null;
      data1?: string | null;
      data1Label?: string | null;
      data2?: string | null;
      data2Label?: string | null;
      data3?: string | null;
      data3Label?: string | null;
      data4?: string | null;
      data4Label?: string | null;
      data5?: string | null;
      data5Label?: string | null;
      data6?: string | null;
      data6Label?: string | null;
      data7?: string | null;
      data7Label?: string | null;
      data8?: string | null;
      data8Label?: string | null;
      data9?: string | null;
      data9Label?: string | null;
      taxId: string;
      email: string;
      phone?: string | null;
      address?: string | null;
      address1?: string | null;
      address2?: string | null;
      postalCode?: string | null;
      businessName?: string | null;
      commercialName?: string | null;
      ticker?: string | null;
      duns?: string | null;
      isPublicCompany?: boolean;
      isFactaCustomer?: boolean;
      /**
       * Format: int32
       * @enum {integer}
       */
      taxPayerType?: 0 | 1;
      countryId: string;
      stateId?: string | null;
      cityId?: string | null;
      fiscalIdentificationTypeId?: string | null;
      fiscalAuthorityId?: string | null;
      fiscalRegimeId?: string | null;
      contactName?: string | null;
      fiscalAuthorityName?: string | null;
      countryName?: string | null;
    };
    BillingProfileDtoEnvelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
      result?: components["schemas"]["BillingProfileDto"];
    };
    BillingProfileDtoListEnvelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
      result?: components["schemas"]["BillingProfileDto"][] | null;
    };
    BillingProfileUpdateDto: {
      contactId?: string | null;
      tenantId?: string | null;
      taxId?: string | null;
      phone?: string | null;
      email?: string | null;
      address?: string | null;
      address1?: string | null;
      address2?: string | null;
      postalCode?: string | null;
      businessName?: string | null;
      commercialName?: string | null;
      ticker?: string | null;
      duns?: string | null;
      isPublicCompany?: boolean;
      isFactaCustomer?: boolean;
      countryId?: string | null;
      stateId?: string | null;
      cityId?: string | null;
      fiscalIdentificationTypeId?: string | null;
      fiscalAuthorityId?: string | null;
      fiscalRegimeId?: string | null;
    };
    BudgetAccountEntryCreateDto: {
      /** Format: uuid */
      id?: string;
      /** Format: date-time */
      timestamp?: string;
      tenantId?: string | null;
      enrollmentId?: string | null;
      description: string;
      /** Format: date-time */
      date?: string | null;
      /** Format: double */
      amount?: number;
      currencyId: string;
      debitAccountId?: string | null;
      creditAccountId?: string | null;
      journalEntryId?: string | null;
      /**
       * Format: int32
       * @enum {integer}
       */
      accountingEntryType?: 0 | 1 | 2;
      budgetId?: string | null;
    };
    BudgetAccountEntryDto: {
      id?: string | null;
      /** Format: date-time */
      timestamp?: string | null;
      /** Format: double */
      debit?: number;
      /** Format: double */
      credit?: number;
      description?: string | null;
      /** Format: double */
      forexRate?: number;
      accountId?: string | null;
      tenantId?: string | null;
      /** Format: date-time */
      date?: string | null;
      enrolmentId?: string | null;
      currencyId?: string | null;
      debitAccountId?: string | null;
      creditAccountId?: string | null;
      journalEntryId?: string | null;
      debitAccountName?: string | null;
      creditAccountName?: string | null;
      /**
       * Format: int32
       * @enum {integer}
       */
      accountingEntryType?: 0 | 1 | 2;
      debitAmount?: components["schemas"]["Money"];
      creditAmount?: components["schemas"]["Money"];
      budgetId?: string | null;
    };
    BudgetAccountEntryDtoEnvelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
      result?: components["schemas"]["BudgetAccountEntryDto"];
    };
    BudgetAccountEntryDtoListEnvelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
      result?: components["schemas"]["BudgetAccountEntryDto"][] | null;
    };
    BudgetAccountEntryUpdateDto: {
      tenantId?: string | null;
      enrolmentId?: string | null;
      description?: string | null;
      /** Format: double */
      amount?: number;
      /** Format: date-time */
      date?: string | null;
      currencyId?: string | null;
      debitAccountId?: string | null;
      creditAccountId?: string | null;
      journalEntryId?: string | null;
      /**
       * Format: int32
       * @enum {integer}
       */
      accountingEntryType?: 0 | 1 | 2;
      budgetId?: string | null;
    };
    BudgetCreateDto: {
      /** Format: uuid */
      id?: string;
      /** Format: date-time */
      timestamp?: string;
      name?: string | null;
      tenantId?: string | null;
      fiscalYearId?: string | null;
    };
    BudgetDto: {
      id?: string | null;
      /** Format: date-time */
      timestamp?: string | null;
      name?: string | null;
      tenantId?: string | null;
      fiscalYearId?: string | null;
    };
    BudgetDtoEnvelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
      result?: components["schemas"]["BudgetDto"];
    };
    BudgetDtoListEnvelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
      result?: components["schemas"]["BudgetDto"][] | null;
    };
    BudgetUpdateDto: {
      name?: string | null;
      fiscalYearId?: string | null;
    };
    CommissionCreateDto: {
      /** Format: uuid */
      id?: string;
      /** Format: date-time */
      timestamp?: string;
      title?: string | null;
      description?: string | null;
      /** Format: double */
      baseAmount?: number;
      /** Format: double */
      addedPercent?: number;
      /** Format: double */
      addedAmount?: number;
      /** Format: double */
      taxComission?: number;
      tenantId?: string | null;
      enrolmentId?: string | null;
      salaryId?: string | null;
      emisorWalletAccountId?: string | null;
      receiverWalletAccountId?: string | null;
      emisorContactId?: string | null;
      receiverContactId?: string | null;
    };
    CommissionDto: {
      id?: string | null;
      /** Format: date-time */
      timestamp?: string | null;
      title?: string | null;
      description?: string | null;
      /** Format: double */
      baseAmount?: number;
      /** Format: double */
      addedPercent?: number;
      /** Format: double */
      addedAmount?: number;
      /** Format: double */
      taxComission?: number;
      tenantId?: string | null;
      enrolmentId?: string | null;
      salaryId?: string | null;
      emisorWalletAccountId?: string | null;
      receiverWalletAccountId?: string | null;
      emisorContactId?: string | null;
      receiverContactId?: string | null;
    };
    CommissionDtoListEnvelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
      result?: components["schemas"]["CommissionDto"][] | null;
    };
    CommissionUpdateDto: {
      title?: string | null;
      description?: string | null;
      /** Format: double */
      baseAmount?: number;
      /** Format: double */
      addedPercent?: number;
      /** Format: double */
      addedAmount?: number;
      /** Format: double */
      taxComission?: number;
      tenantId?: string | null;
      enrolmentId?: string | null;
      salaryId?: string | null;
      emisorWalletAccountId?: string | null;
      receiverWalletAccountId?: string | null;
      emisorContactId?: string | null;
      receiverContactId?: string | null;
    };
    CostCentreBudgetCreateDto: {
      /** Format: uuid */
      id?: string;
      /** Format: date-time */
      timestamp?: string;
      name?: string | null;
      tenantId?: string | null;
      fiscalYearId?: string | null;
      costCentreId?: string | null;
    };
    CostCentreBudgetDto: {
      id?: string | null;
      /** Format: date-time */
      timestamp?: string | null;
      name?: string | null;
      tenantId?: string | null;
      fiscalYearId?: string | null;
      costCentreId?: string | null;
    };
    CostCentreBudgetDtoEnvelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
      result?: components["schemas"]["CostCentreBudgetDto"];
    };
    CostCentreBudgetDtoListEnvelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
      result?: components["schemas"]["CostCentreBudgetDto"][] | null;
    };
    CostCentreBudgetUpdateDto: {
      name?: string | null;
      fiscalYearId?: string | null;
      costCentreId?: string | null;
    };
    CostCentreCreateDto: {
      /** Format: uuid */
      id?: string;
      /** Format: date-time */
      timestamp?: string;
      name?: string | null;
      disabled?: boolean;
      description?: string | null;
      /**
       * Format: int32
       * @enum {integer}
       */
      costCentreType?: 0 | 1;
      tenantId?: string | null;
      costCentresGroupId?: string | null;
      parentCostCentreId?: string | null;
    };
    CostCentreDto: {
      id?: string | null;
      /** Format: date-time */
      timestamp?: string | null;
      name?: string | null;
      disabled?: boolean;
      description?: string | null;
      /**
       * Format: int32
       * @enum {integer}
       */
      costCentreType?: 0 | 1;
      tenantId?: string | null;
      costCentresGroupId?: string | null;
      parentCostCentreId?: string | null;
    };
    CostCentreDtoEnvelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
      result?: components["schemas"]["CostCentreDto"];
    };
    CostCentreDtoListEnvelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
      result?: components["schemas"]["CostCentreDto"][] | null;
    };
    CostCentreGroupCreateDto: {
      /** Format: uuid */
      id?: string;
      /** Format: date-time */
      timestamp?: string;
      name?: string | null;
      description?: string | null;
      disabled?: boolean;
      tenantId?: string | null;
      parentCostCentresGroupId?: string | null;
    };
    CostCentreGroupDto: {
      id?: string | null;
      /** Format: date-time */
      timestamp?: string | null;
      name?: string | null;
      description?: string | null;
      disabled?: boolean;
      tenantId?: string | null;
      parentCostCentresGroupId?: string | null;
    };
    CostCentreGroupDtoEnvelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
      result?: components["schemas"]["CostCentreGroupDto"];
    };
    CostCentreGroupDtoListEnvelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
      result?: components["schemas"]["CostCentreGroupDto"][] | null;
    };
    CostCentreGroupUpdateDto: {
      name?: string | null;
      description?: string | null;
      disabled?: boolean;
      tenantId?: string | null;
      parentCostCentresGroupId?: string | null;
    };
    CostCentreUpdateDto: {
      name?: string | null;
      disabled?: boolean;
      description?: string | null;
      /**
       * Format: int32
       * @enum {integer}
       */
      costCentreType?: 0 | 1;
      tenantId?: string | null;
      costCentresGroupId?: string | null;
      parentCostCentreId?: string | null;
    };
    CreateLedgerDto: {
      /** Format: uuid */
      id?: string;
      /** Format: date-time */
      timestamp?: string;
      name?: string | null;
      description?: string | null;
      /** Format: date-time */
      dateTime?: string;
      tenantId?: string | null;
      enrolmentId?: string | null;
      ledgerTypeId?: string | null;
    };
    Currency: {
      code?: string | null;
      country?: string | null;
    };
    EmptyEnvelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
    };
    ErrorEnvelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
    };
    FinancialBookCreateDto: {
      /** Format: uuid */
      id?: string;
      /** Format: date-time */
      timestamp?: string;
      name: string;
      description?: string | null;
      tenantID?: string | null;
    };
    FinancialBookDto: {
      id?: string | null;
      /** Format: date-time */
      timestamp?: string | null;
      name?: string | null;
      description?: string | null;
      businessID?: string | null;
    };
    FinancialBookDtoEnvelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
      result?: components["schemas"]["FinancialBookDto"];
    };
    FinancialBookDtoListEnvelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
      result?: components["schemas"]["FinancialBookDto"][] | null;
    };
    FinancialBookUpdateDto: {
      name?: string | null;
      description?: string | null;
      tenantId?: string | null;
    };
    FiscalAuthorityCreateDto: {
      /** Format: uuid */
      id?: string;
      /** Format: date-time */
      timestamp?: string;
      name?: string | null;
      description?: string | null;
      countryId?: string | null;
      logoUrl?: string | null;
      webUrl?: string | null;
    };
    FiscalAuthorityDto: {
      id?: string | null;
      /** Format: date-time */
      timestamp?: string | null;
      name?: string | null;
      description?: string | null;
      tenantId?: string | null;
      enrollmentId?: string | null;
      countryId?: string | null;
      logoUrl?: string | null;
      webUrl?: string | null;
    };
    FiscalAuthorityDtoEnvelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
      result?: components["schemas"]["FiscalAuthorityDto"];
    };
    FiscalAuthorityDtoListEnvelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
      result?: components["schemas"]["FiscalAuthorityDto"][] | null;
    };
    FiscalAuthorityUpdateDto: {
      name?: string | null;
      description?: string | null;
      countryId?: string | null;
      logoUrl?: string | null;
      webUrl?: string | null;
    };
    FiscalIdentificationTypeCreateDto: {
      /** Format: uuid */
      id?: string;
      /** Format: date-time */
      timestamp?: string;
      code?: string | null;
      name?: string | null;
      fiscalAuthorityId?: string | null;
      tenantId?: string | null;
      enrolmentId?: string | null;
    };
    FiscalIdentificationTypeDto: {
      id?: string | null;
      /** Format: date-time */
      timestamp?: string | null;
      code?: string | null;
      name?: string | null;
      fiscalAuthorityId?: string | null;
      tenantId?: string | null;
      enrolmentId?: string | null;
    };
    FiscalIdentificationTypeDtoEnvelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
      result?: components["schemas"]["FiscalIdentificationTypeDto"];
    };
    FiscalIdentificationTypeDtoListEnvelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
      result?: components["schemas"]["FiscalIdentificationTypeDto"][] | null;
    };
    FiscalIdentificationTypeUpdateDto: {
      code?: string | null;
      name?: string | null;
      fiscalAuthorityId?: string | null;
      tenantId?: string | null;
      enrolmentId?: string | null;
    };
    FiscalPeriodCreateDto: {
      /** Format: uuid */
      id?: string;
      /** Format: date-time */
      timestamp?: string;
      name?: string | null;
      /** Format: date-time */
      fromDate?: string;
      /** Format: date-time */
      toDate?: string;
      tenantId?: string | null;
      enrolmentId?: string | null;
      fiscalYearId?: string | null;
    };
    FiscalPeriodDto: {
      id?: string | null;
      /** Format: date-time */
      timestamp?: string | null;
      name?: string | null;
      /** Format: date-time */
      fromDate?: string;
      /** Format: date-time */
      toDate?: string;
      tenantId?: string | null;
      enrolmentId?: string | null;
      fiscalYearId?: string | null;
    };
    FiscalPeriodDtoEnvelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
      result?: components["schemas"]["FiscalPeriodDto"];
    };
    FiscalPeriodDtoListEnvelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
      result?: components["schemas"]["FiscalPeriodDto"][] | null;
    };
    FiscalPeriodUpdateDto: {
      name?: string | null;
      /** Format: date-time */
      fromDate?: string;
      /** Format: date-time */
      toDate?: string;
      tenantId?: string | null;
      enrolmentId?: string | null;
      fiscalYearId?: string | null;
    };
    FiscalRegimeCreateDto: {
      /** Format: uuid */
      id?: string;
      /** Format: date-time */
      timestamp?: string;
      code?: string | null;
      name?: string | null;
      fiscalAuthorityId?: string | null;
      tenantId?: string | null;
      enrolmentId?: string | null;
    };
    FiscalRegimeDto: {
      id?: string | null;
      /** Format: date-time */
      timestamp?: string | null;
      code?: string | null;
      name?: string | null;
      fiscalAuthorityId?: string | null;
      tenantId?: string | null;
      enrolmentId?: string | null;
    };
    FiscalRegimeDtoEnvelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
      result?: components["schemas"]["FiscalRegimeDto"];
    };
    FiscalRegimeDtoListEnvelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
      result?: components["schemas"]["FiscalRegimeDto"][] | null;
    };
    FiscalRegimeUpdateDto: {
      code?: string | null;
      name?: string | null;
      fiscalAuthorityId?: string | null;
      tenantId?: string | null;
      enrolmentId?: string | null;
    };
    FiscalResponsibilityCreateDto: {
      /** Format: uuid */
      id?: string;
      /** Format: date-time */
      timestamp?: string;
      code?: string | null;
      name?: string | null;
      fiscalAuthorityId?: string | null;
      tenantId?: string | null;
      enrolmentId?: string | null;
    };
    FiscalResponsibilityDto: {
      id?: string | null;
      /** Format: date-time */
      timestamp?: string | null;
      code?: string | null;
      name?: string | null;
      fiscalAuthorityId?: string | null;
      tenantId?: string | null;
      enrolmentId?: string | null;
    };
    FiscalResponsibilityDtoEnvelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
      result?: components["schemas"]["FiscalResponsibilityDto"];
    };
    FiscalResponsibilityDtoListEnvelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
      result?: components["schemas"]["FiscalResponsibilityDto"][] | null;
    };
    FiscalResponsibilityRecordCreateDto: {
      /** Format: uuid */
      id?: string;
      /** Format: date-time */
      timestamp?: string;
      fiscalResponsibilityId?: string | null;
      billingProfileId?: string | null;
      tenantId?: string | null;
      enrolmentId?: string | null;
    };
    FiscalResponsibilityRecordDto: {
      id?: string | null;
      /** Format: date-time */
      timestamp?: string | null;
      fiscalResponsibilityId?: string | null;
      billingProfileId?: string | null;
      tenantId?: string | null;
      enrolmentId?: string | null;
    };
    FiscalResponsibilityRecordDtoEnvelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
      result?: components["schemas"]["FiscalResponsibilityRecordDto"];
    };
    FiscalResponsibilityRecordDtoListEnvelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
      result?: components["schemas"]["FiscalResponsibilityRecordDto"][] | null;
    };
    FiscalResponsibilityRecordUpdateDto: {
      fiscalResponsibilityId?: string | null;
      billingProfileId?: string | null;
      tenantId?: string | null;
      enrolmentId?: string | null;
    };
    FiscalResponsibilityUpdateDto: {
      code?: string | null;
      name?: string | null;
      fiscalAuthorityId?: string | null;
      tenantId?: string | null;
      enrolmentId?: string | null;
    };
    FiscalYearCreateDto: {
      /** Format: uuid */
      id?: string;
      /** Format: date-time */
      timestamp?: string;
      name?: string | null;
      description?: string | null;
      closed?: boolean;
      tenantId?: string | null;
      enrollmentId?: string | null;
      /** Format: date-time */
      endDate?: string;
      /** Format: date-time */
      startDate?: string;
    };
    FiscalYearDto: {
      id?: string | null;
      /** Format: date-time */
      timestamp?: string | null;
      name?: string | null;
      description?: string | null;
      default?: boolean;
      tenantId?: string | null;
      enrollmentId?: string | null;
      fiscalAuthorityId?: string | null;
      /** Format: date-time */
      endDate?: string;
      /** Format: date-time */
      startDate?: string;
    };
    FiscalYearDtoEnvelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
      result?: components["schemas"]["FiscalYearDto"];
    };
    FiscalYearDtoListEnvelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
      result?: components["schemas"]["FiscalYearDto"][] | null;
    };
    FiscalYearUpdateDto: {
      name?: string | null;
      description?: string | null;
      closed?: boolean;
      /** Format: date-time */
      endDate?: string;
      /** Format: date-time */
      startDate?: string;
    };
    GrantCreateDto: {
      /** Format: uuid */
      id?: string;
      /** Format: date-time */
      timestamp?: string;
      tenantId?: string | null;
      enrolmentId?: string | null;
    };
    GrantDto: {
      id?: string | null;
      /** Format: date-time */
      timestamp?: string | null;
      tenantId?: string | null;
      enrolmentId?: string | null;
    };
    GrantDtoEnvelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
      result?: components["schemas"]["GrantDto"];
    };
    GrantDtoListEnvelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
      result?: components["schemas"]["GrantDto"][] | null;
    };
    GrantUpdateDto: {
      tenantId?: string | null;
      enrolmentId?: string | null;
    };
    Int32Envelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
      /** Format: int32 */
      result?: number;
    };
    InvoiceEnumerationRangeCreateDto: {
      /** Format: uuid */
      id?: string;
      /** Format: date-time */
      timestamp?: string;
      prefix?: string | null;
      suffix?: string | null;
      identifier?: string | null;
      qualifiedName?: string | null;
      /** Format: int64 */
      currentNumeration?: number;
      /** Format: int64 */
      numerationFrom?: number;
      /** Format: int64 */
      numerationTo?: number;
      /** Format: date-time */
      validFrom: string;
      /** Format: date-time */
      validTo: string;
      fiscalAuthorityId?: string | null;
      tenantId?: string | null;
      enrolmentId?: string | null;
      /**
       * Format: int32
       * @enum {integer}
       */
      documentType?: 0 | 1 | 2;
    };
    InvoiceEnumerationRangeDto: {
      id?: string | null;
      /** Format: date-time */
      timestamp?: string | null;
      prefix?: string | null;
      suffix?: string | null;
      identifier?: string | null;
      qualifiedName?: string | null;
      /** Format: int64 */
      currentNumeration?: number;
      /** Format: int64 */
      numerationTo?: number;
      /** Format: int64 */
      numerationFrom?: number;
      /** Format: date-time */
      validFrom?: string;
      /** Format: date-time */
      validTo?: string;
      fiscalAuthorityId?: string | null;
      tenantId?: string | null;
      enrolmentId?: string | null;
      /**
       * Format: int32
       * @enum {integer}
       */
      documentType?: 0 | 1 | 2;
    };
    InvoiceEnumerationRangeDtoEnvelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
      result?: components["schemas"]["InvoiceEnumerationRangeDto"];
    };
    InvoiceEnumerationRangeDtoListEnvelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
      result?: components["schemas"]["InvoiceEnumerationRangeDto"][] | null;
    };
    InvoiceEnumerationRangeUpdateDto: {
      prefix?: string | null;
      suffix?: string | null;
      identifier?: string | null;
      qualifiedName?: string | null;
      /** Format: int64 */
      currentNumeration?: number;
      /** Format: int64 */
      numerationFrom?: number;
      /** Format: int64 */
      numerationTo?: number;
      /** Format: date-time */
      validFrom?: string;
      /** Format: date-time */
      validTo?: string;
      fiscalAuthorityId?: string | null;
      tenantId?: string | null;
      enrolmentId?: string | null;
      /**
       * Format: int32
       * @enum {integer}
       */
      documentType?: 0 | 1 | 2;
    };
    ItemTaxPolicyRecordCreateDto: {
      /** Format: uuid */
      id?: string;
      /** Format: date-time */
      timestamp?: string;
      taxPolicyId?: string | null;
      itemPriceId?: string | null;
      itemId?: string | null;
    };
    ItemTaxPolicyRecordDto: {
      id?: string | null;
      /** Format: date-time */
      timestamp?: string | null;
      taxPolicyId?: string | null;
      itemPriceId?: string | null;
      itemId?: string | null;
    };
    ItemTaxPolicyRecordDtoEnvelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
      result?: components["schemas"]["ItemTaxPolicyRecordDto"];
    };
    ItemTaxPolicyRecordDtoListEnvelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
      result?: components["schemas"]["ItemTaxPolicyRecordDto"][] | null;
    };
    ItemTaxPolicyRecordUpdateDto: {
      /** Format: uuid */
      id?: string;
      /** Format: date-time */
      timestamp?: string;
      taxPolicyId?: string | null;
      itemPriceId?: string | null;
      itemId?: string | null;
    };
    JournalCreateDto: {
      /** Format: uuid */
      id?: string;
      /** Format: date-time */
      timestamp?: string;
      name: string;
      description?: string | null;
      /** Format: date-time */
      dateTime?: string;
      tenantID?: string | null;
      enrolmentID?: string | null;
      parentJournalID?: string | null;
      journalTypeID?: string | null;
      ledgerID?: string | null;
    };
    JournalDto: {
      id?: string | null;
      /** Format: date-time */
      timestamp?: string | null;
      name?: string | null;
      description?: string | null;
      tenantId?: string | null;
      ledgerId?: string | null;
      enrolmentId?: string | null;
      fiscalYearId?: string | null;
      journalTypeId?: string | null;
      parentJournalId?: string | null;
    };
    JournalDtoEnvelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
      result?: components["schemas"]["JournalDto"];
    };
    JournalDtoListEnvelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
      result?: components["schemas"]["JournalDto"][] | null;
    };
    JournalEntryCreateDto: {
      /** Format: uuid */
      id?: string;
      /** Format: date-time */
      timestamp?: string;
      group?: boolean;
      opening?: boolean;
      description: string;
      /** Format: date-time */
      date: string;
      /** Format: double */
      debit?: number;
      /** Format: double */
      credit?: number;
      journalId: string;
      currencyId: string;
      debitAccountId: string;
      creditAccountId: string;
      parentJournalEntryId?: string | null;
      invoiceCode?: string | null;
    };
    JournalEntryDto: {
      id?: string | null;
      /** Format: date-time */
      timestamp?: string | null;
      group?: boolean;
      opening?: boolean;
      description?: string | null;
      /** Format: date-time */
      date?: string | null;
      forexRatesSnapshot?: string | null;
      /** Format: double */
      forexRate?: number;
      /** Format: double */
      credit?: number;
      /** Format: double */
      debit?: number;
      currencyId?: string | null;
      tenantId?: string | null;
      enrolmentId?: string | null;
      journalId?: string | null;
      journalName?: string | null;
      journalCode?: string | null;
      creditAccountId?: string | null;
      creditAccountName?: string | null;
      debitAccountId?: string | null;
      debitAccountName?: string | null;
      invoiceCode?: string | null;
      parentJournalEntryId?: string | null;
      creditAmount?: components["schemas"]["Money"];
      debitAmount?: components["schemas"]["Money"];
    };
    JournalEntryDtoListEnvelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
      result?: components["schemas"]["JournalEntryDto"][] | null;
    };
    JournalEntryUpdateDto: {
      group?: boolean;
      opening?: boolean;
      description: string;
      /** Format: date-time */
      date: string;
      /** Format: double */
      debit?: number;
      /** Format: double */
      credit?: number;
      journalId: string;
      currencyId: string;
      invoiceCode?: string | null;
      debitAccountId: string;
      creditAccountId: string;
      parentJournalEntryId?: string | null;
    };
    JournalTypeCreateDto: {
      /** Format: uuid */
      id?: string;
      /** Format: date-time */
      timestamp?: string;
      name?: string | null;
      tenantId?: string | null;
      enrolmentId?: string | null;
    };
    JournalTypeDto: {
      id?: string | null;
      /** Format: date-time */
      timestamp?: string | null;
      name?: string | null;
      tenantId?: string | null;
      enrolmentId?: string | null;
    };
    JournalTypeDtoEnvelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
      result?: components["schemas"]["JournalTypeDto"];
    };
    JournalTypeDtoListEnvelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
      result?: components["schemas"]["JournalTypeDto"][] | null;
    };
    JournalTypeUpdateDto: {
      name?: string | null;
      tenantId?: string | null;
      enrolmentId?: string | null;
    };
    JournalUpdateDto: {
      name?: string | null;
      description?: string | null;
      /** Format: date-time */
      dateTime?: string;
      parentJournalID?: string | null;
      journalTypeID?: string | null;
      ledgerID?: string | null;
    };
    LedgerDto: {
      id?: string | null;
      /** Format: date-time */
      timestamp?: string | null;
      name?: string | null;
      description?: string | null;
      /** Format: date-time */
      dateTime?: string;
      tenantId?: string | null;
      enrolmentId?: string | null;
      ledgerTypeId?: string | null;
    };
    LedgerDtoEnvelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
      result?: components["schemas"]["LedgerDto"];
    };
    LedgerDtoListEnvelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
      result?: components["schemas"]["LedgerDto"][] | null;
    };
    LoanApplicationCreateDto: {
      /** Format: uuid */
      id?: string;
      /** Format: date-time */
      timestamp?: string;
      tenantId?: string | null;
      enrolmentId?: string | null;
    };
    LoanApplicationDto: {
      id?: string | null;
      /** Format: date-time */
      timestamp?: string | null;
      tenantId?: string | null;
      enrolmentId?: string | null;
    };
    LoanApplicationDtoEnvelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
      result?: components["schemas"]["LoanApplicationDto"];
    };
    LoanApplicationDtoListEnvelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
      result?: components["schemas"]["LoanApplicationDto"][] | null;
    };
    LoanApplicationUpdateDto: {
      tenantId?: string | null;
      enrolmentId?: string | null;
    };
    LoanCreateDto: {
      /** Format: uuid */
      id?: string;
      /** Format: date-time */
      timestamp?: string;
      /** Format: date-time */
      loanTimestamp?: string;
      /** Format: date-time */
      paymentDeadline?: string;
      /** Format: double */
      value?: number;
      /** Format: double */
      interestRate?: number;
      isCompundInterestRate?: boolean;
      loanTypeId?: string | null;
      currencyId?: string | null;
      tenantId?: string | null;
      enrolmentId?: string | null;
    };
    LoanDto: {
      id?: string | null;
      /** Format: date-time */
      timestamp?: string | null;
      /** Format: date-time */
      loanTimestamp?: string;
      /** Format: date-time */
      paymentDeadline?: string;
      /** Format: double */
      value?: number;
      /** Format: double */
      interestRate?: number;
      isCompundInterestRate?: boolean;
      loanTypeId?: string | null;
      currencyId?: string | null;
      tenantId?: string | null;
      enrolmentId?: string | null;
    };
    LoanDtoEnvelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
      result?: components["schemas"]["LoanDto"];
    };
    LoanDtoListEnvelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
      result?: components["schemas"]["LoanDto"][] | null;
    };
    LoanUpdateDto: {
      /** Format: date-time */
      loanTimestamp?: string;
      /** Format: date-time */
      paymentDeadline?: string;
      /** Format: double */
      value?: number;
      /** Format: double */
      interestRate?: number;
      isCompundInterestRate?: boolean;
      loanTypeId?: string | null;
      currencyId?: string | null;
      enrolmentId?: string | null;
    };
    Money: {
      /** Format: double */
      amount?: number;
      currency?: components["schemas"]["Currency"];
    };
    Operation: {
      /**
       * Format: int32
       * @enum {integer}
       */
      operationType?: 0 | 1 | 2 | 3 | 4 | 5 | 6;
      path?: string | null;
      op?: string | null;
      from?: string | null;
      value?: unknown;
    };
    PaymentCommissionCreateDto: {
      /** Format: uuid */
      id?: string;
      /** Format: date-time */
      timestamp?: string;
      paymentId?: string | null;
    };
    PaymentCommissionDto: {
      id?: string | null;
      /** Format: date-time */
      timestamp?: string | null;
      title?: string | null;
      description?: string | null;
      /** Format: double */
      baseAmount?: number;
      /** Format: double */
      addedPercent?: number;
      /** Format: double */
      addedAmount?: number;
      /** Format: double */
      taxComission?: number;
      tenantId?: string | null;
      enrolmentId?: string | null;
      salaryId?: string | null;
      emisorWalletAccountId?: string | null;
      receiverWalletAccountId?: string | null;
      emisorContactId?: string | null;
      receiverContactId?: string | null;
      paymentID?: string | null;
    };
    PaymentCommissionDtoListEnvelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
      result?: components["schemas"]["PaymentCommissionDto"][] | null;
    };
    PaymentCommissionUpdateDto: {
      title?: string | null;
      description?: string | null;
      /** Format: double */
      baseAmount?: number;
      /** Format: double */
      addedPercent?: number;
      /** Format: double */
      addedAmount?: number;
      /** Format: double */
      taxComission?: number;
      tenantId?: string | null;
      enrolmentId?: string | null;
      salaryId?: string | null;
      emisorWalletAccountId?: string | null;
      receiverWalletAccountId?: string | null;
      emisorContactId?: string | null;
      receiverContactId?: string | null;
      paymentId?: string | null;
    };
    ReceiptCreateDto: {
      title?: string | null;
      userId?: string | null;
      currencyId?: string | null;
      priceListId?: string | null;
      description?: string | null;
      enrollmentId?: string | null;
      individualId?: string | null;
      paymentTermId?: string | null;
      organizationId?: string | null;
      receiverTenantId?: string | null;
      firstName?: string | null;
      lastName?: string | null;
      companyName?: string | null;
      billingEmail?: string | null;
      addressLine1?: string | null;
      addressLine2?: string | null;
      postalCode?: string | null;
      countryId?: string | null;
      stateId?: string | null;
      cityId?: string | null;
      billingLocationId?: string | null;
      shippingLocationId?: string | null;
      shippingMethodId?: string | null;
      paymentId?: string | null;
      tenantId?: string | null;
      /** Format: double */
      forexRate?: number;
      /** Format: double */
      totalAmount?: number;
      /** Format: double */
      totalAmountInUSD?: number;
      closed?: boolean;
      accountHolderId?: string | null;
      contactId?: string | null;
      enrolmentId?: string | null;
      /**
       * Format: int32
       * @enum {integer}
       */
      receiptType?: 0 | 1;
      orderId?: string | null;
      invoiceId?: string | null;
    };
    ReceiptDto: {
      id?: string | null;
      /** Format: date-time */
      timestamp?: string | null;
      paymentId?: string | null;
      tenantId?: string | null;
      closed?: boolean;
      accountHolderId?: string | null;
      contactId?: string | null;
      enrolmentId?: string | null;
      /**
       * Format: int32
       * @enum {integer}
       */
      receiptType?: 0 | 1;
      orderId?: string | null;
      invoiceId?: string | null;
    };
    ReceiptDtoEnvelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
      result?: components["schemas"]["ReceiptDto"];
    };
    ReceiptDtoListEnvelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
      result?: components["schemas"]["ReceiptDto"][] | null;
    };
    ReceiptUpdateDto: {
      paymentId?: string | null;
      tenantId?: string | null;
      /** Format: double */
      forexRate?: number;
      /** Format: double */
      totalAmount?: number;
      /** Format: double */
      totalAmountInUsd?: number;
      closed?: boolean;
      currencyId?: string | null;
      accountHolderId?: string | null;
      contactId?: string | null;
      enrolmentId?: string | null;
      orderId?: string | null;
      invoiceId?: string | null;
    };
    ShareClassCreateDto: {
      /** Format: uuid */
      id?: string;
      /** Format: date-time */
      timestamp?: string;
      name?: string | null;
      value?: boolean;
      description?: string | null;
      forexRates?: string | null;
      currencyId?: string | null;
      tenantId?: string | null;
      enrolmentId?: string | null;
    };
    ShareClassDto: {
      id?: string | null;
      /** Format: date-time */
      timestamp?: string | null;
      name?: string | null;
      value?: boolean;
      description?: string | null;
      forexRates?: string | null;
      currencyId?: string | null;
      tenantId?: string | null;
      enrolmentId?: string | null;
    };
    ShareClassDtoEnvelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
      result?: components["schemas"]["ShareClassDto"];
    };
    ShareClassDtoListEnvelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
      result?: components["schemas"]["ShareClassDto"][] | null;
    };
    ShareClassUpdateDto: {
      name?: string | null;
      value?: boolean;
      description?: string | null;
      forexRates?: string | null;
      currencyId?: string | null;
      tenantId?: string | null;
      enrolmentId?: string | null;
    };
    ShareIssuanceCreateDto: {
      /** Format: uuid */
      id?: string;
      /** Format: date-time */
      timestamp?: string;
      tenantId?: string | null;
      enrolmentId?: string | null;
      /** Format: int32 */
      unitPrice?: number;
      /** Format: int32 */
      quantity?: number;
      currencyId?: string | null;
    };
    ShareIssuanceDto: {
      id?: string | null;
      /** Format: date-time */
      timestamp?: string | null;
      tenantId?: string | null;
      enrolmentId?: string | null;
      /** Format: int32 */
      unitPrice?: number;
      /** Format: int32 */
      quantity?: number;
      currencyId?: string | null;
    };
    ShareIssuanceDtoEnvelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
      result?: components["schemas"]["ShareIssuanceDto"];
    };
    ShareIssuanceDtoListEnvelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
      result?: components["schemas"]["ShareIssuanceDto"][] | null;
    };
    ShareIssuanceUpdateDto: {
      tenantId?: string | null;
      enrolmentId?: string | null;
      /** Format: int32 */
      unitPrice?: number;
      /** Format: int32 */
      quantity?: number;
      currencyId?: string | null;
    };
    ShareTransferCreateDto: {
      /** Format: uuid */
      id?: string;
      /** Format: date-time */
      timestamp?: string;
      description?: string | null;
      /** Format: double */
      value?: number;
      newShareHolderId?: string | null;
      formerShareHolderId?: string | null;
      shareTransferReasonId?: string | null;
      enrolmentId?: string | null;
      tenantId?: string | null;
    };
    ShareTransferDto: {
      id?: string | null;
      /** Format: date-time */
      timestamp?: string | null;
      description?: string | null;
      /** Format: double */
      value?: number;
      newShareHolderId?: string | null;
      formerShareHolderId?: string | null;
      shareTransferReasonId?: string | null;
      enrolmentId?: string | null;
      tenantId?: string | null;
    };
    ShareTransferDtoEnvelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
      result?: components["schemas"]["ShareTransferDto"];
    };
    ShareTransferDtoListEnvelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
      result?: components["schemas"]["ShareTransferDto"][] | null;
    };
    ShareTransferReasonCreateDto: {
      /** Format: uuid */
      id?: string;
      /** Format: date-time */
      timestamp?: string;
      name?: string | null;
      description?: string | null;
      enrolmentId?: string | null;
      tenantId?: string | null;
    };
    ShareTransferReasonDto: {
      id?: string | null;
      /** Format: date-time */
      timestamp?: string | null;
      name?: string | null;
      description?: string | null;
      enrolmentId?: string | null;
      tenantId?: string | null;
    };
    ShareTransferReasonDtoEnvelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
      result?: components["schemas"]["ShareTransferReasonDto"];
    };
    ShareTransferReasonDtoListEnvelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
      result?: components["schemas"]["ShareTransferReasonDto"][] | null;
    };
    ShareTransferReasonUpdateDto: {
      name?: string | null;
      description?: string | null;
      enrolmentId?: string | null;
      tenantId?: string | null;
    };
    ShareTransferUpdateDto: {
      description?: string | null;
      /** Format: double */
      value?: number;
      newShareHolderId?: string | null;
      formerShareHolderId?: string | null;
      shareTransferReasonId?: string | null;
      enrolmentId?: string | null;
      tenantId?: string | null;
    };
    TaxPolicyCreateDto: {
      /** Format: uuid */
      id?: string;
      /** Format: date-time */
      timestamp?: string;
      code?: string | null;
      title?: string | null;
      description?: string | null;
      isFree?: boolean;
      reduce?: boolean;
      isEnabled?: boolean;
      isDefault?: boolean;
      allowInternational?: boolean;
      /** Format: int32 */
      hours?: number;
      /** Format: int32 */
      days?: number;
      /** Format: int32 */
      weeks?: number;
      /** Format: int32 */
      months?: number;
      /** Format: int32 */
      years?: number;
      /** Format: double */
      value?: number;
      /** Format: double */
      percentage?: number;
      currencyId?: string | null;
      countryId?: string | null;
      countryStateId?: string | null;
      customState?: string | null;
      customCity?: string | null;
      cityId?: string | null;
      enrolmentId?: string | null;
      tenantId?: string | null;
      zero?: boolean;
      reduced?: boolean;
      withholding?: boolean;
      fiscalAuthorityId?: string | null;
    };
    TaxPolicyDto: {
      id?: string | null;
      /** Format: date-time */
      timestamp?: string | null;
      code?: string | null;
      title?: string | null;
      description?: string | null;
      isFree?: boolean;
      reduce?: boolean;
      isEnabled?: boolean;
      isDefault?: boolean;
      allowInternational?: boolean;
      /** Format: int32 */
      hours?: number;
      /** Format: int32 */
      days?: number;
      /** Format: int32 */
      weeks?: number;
      /** Format: int32 */
      months?: number;
      /** Format: int32 */
      years?: number;
      /** Format: double */
      value?: number;
      /** Format: double */
      percentage?: number;
      currencyId?: string | null;
      countryId?: string | null;
      countryStateId?: string | null;
      customState?: string | null;
      customCity?: string | null;
      cityId?: string | null;
      enrolmentId?: string | null;
      tenantId?: string | null;
      zero?: boolean;
      reduced?: boolean;
      withholding?: boolean;
      fiscalAuthorityID?: string | null;
    };
    TaxPolicyDtoEnvelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
      result?: components["schemas"]["TaxPolicyDto"];
    };
    TaxPolicyDtoListEnvelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
      result?: components["schemas"]["TaxPolicyDto"][] | null;
    };
    TaxPolicyUpdateDto: {
      code?: string | null;
      title?: string | null;
      description?: string | null;
      isFree?: boolean;
      reduce?: boolean;
      isEnabled?: boolean;
      isDefault?: boolean;
      allowInternational?: boolean;
      /** Format: int32 */
      hours?: number;
      /** Format: int32 */
      days?: number;
      /** Format: int32 */
      weeks?: number;
      /** Format: int32 */
      months?: number;
      /** Format: int32 */
      years?: number;
      /** Format: double */
      value?: number;
      /** Format: double */
      percentage?: number;
      currencyId?: string | null;
      countryId?: string | null;
      countryStateId?: string | null;
      customState?: string | null;
      customCity?: string | null;
      cityId?: string | null;
      enrolmentId?: string | null;
      tenantId?: string | null;
      zero?: boolean;
      reduced?: boolean;
      withholding?: boolean;
      fiscalAuthorityId?: string | null;
    };
    TaxRateCreateDto: {
      /** Format: uuid */
      id?: string;
      /** Format: date-time */
      timestamp?: string;
      name?: string | null;
      /** Format: double */
      rate?: number;
      /** Format: double */
      value?: number;
      um?: string | null;
      unitId?: string | null;
      unitGroupId?: string | null;
      /** Format: int32 */
      priority?: number;
      compound?: boolean;
      shipping?: boolean;
      withholding?: boolean;
      /** Format: double */
      singleTransactionThreshold?: number;
      /** Format: double */
      cumulativeTransactionThreshold?: number;
      fiscalAuthorityId?: string | null;
      fiscalYearId?: string | null;
      tenantId?: string | null;
      countryId?: string | null;
      taxClassId?: string | null;
      currencyId?: string | null;
      taxPolicyId?: string | null;
      enrolmentId?: string | null;
    };
    TaxRateDto: {
      id?: string | null;
      /** Format: date-time */
      timestamp?: string | null;
      name?: string | null;
      /** Format: double */
      rate?: number;
      /** Format: double */
      value?: number;
      um?: string | null;
      unitId?: string | null;
      unitGroupId?: string | null;
      /** Format: int32 */
      priority?: number;
      compound?: boolean;
      shipping?: boolean;
      withholding?: boolean;
      /** Format: double */
      singleTransactionThreshold?: number;
      /** Format: double */
      cumulativeTransactionThreshold?: number;
      fiscalAuthorityId?: string | null;
      fiscalYearId?: string | null;
      tenantId?: string | null;
      countryId?: string | null;
      taxClassId?: string | null;
      currencyId?: string | null;
      taxPolicyId?: string | null;
      enrolmentId?: string | null;
    };
    TaxRateDtoEnvelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
      result?: components["schemas"]["TaxRateDto"];
    };
    TaxRateDtoListEnvelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
      result?: components["schemas"]["TaxRateDto"][] | null;
    };
    TaxRateUpdateDto: {
      name?: string | null;
      /** Format: double */
      rate?: number;
      /** Format: double */
      value?: number;
      um?: string | null;
      unitId?: string | null;
      unitGroupId?: string | null;
      /** Format: int32 */
      priority?: number;
      compound?: boolean;
      shipping?: boolean;
      withholding?: boolean;
      /** Format: double */
      singleTransactionThreshold?: number;
      /** Format: double */
      cumulativeTransactionThreshold?: number;
      fiscalAuthorityId?: string | null;
      fiscalYearId?: string | null;
      tenantId?: string | null;
      countryId?: string | null;
      taxClassId?: string | null;
      currencyId?: string | null;
      taxPolicyId?: string | null;
      enrolmentId?: string | null;
    };
    TenantId: Record<string, never>;
    TransactionCategoryCreateDto: {
      /** Format: uuid */
      id?: string;
      /** Format: date-time */
      timestamp?: string;
      name?: string | null;
      description?: string | null;
      enrolmentId?: string | null;
      tenantId?: string | null;
    };
    TransactionCategoryDto: {
      id?: string | null;
      /** Format: date-time */
      timestamp?: string | null;
      name?: string | null;
      description?: string | null;
      enrolmentId?: string | null;
      tenantId?: string | null;
    };
    TransactionCategoryDtoEnvelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
      result?: components["schemas"]["TransactionCategoryDto"];
    };
    TransactionCategoryDtoListEnvelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
      result?: components["schemas"]["TransactionCategoryDto"][] | null;
    };
    TransactionCategoryUpdateDto: {
      name?: string | null;
      description?: string | null;
      enrolmentId?: string | null;
      tenantId?: string | null;
    };
    TransactionCreateDto: {
      /** Format: uuid */
      id?: string;
      /** Format: date-time */
      timestamp?: string;
      description?: string | null;
      /** Format: double */
      price?: number;
      /** Format: double */
      quantity?: number;
      externalDescription?: string | null;
      /** Format: double */
      basisQuantity?: number;
      /** Format: double */
      basisAmount?: number;
      /** Format: double */
      percent?: number;
      unitGroupId?: string | null;
      unitId?: string | null;
      transactionCategoryId?: string | null;
      currencyId?: string | null;
      tenantId?: string | null;
      enrolmentId?: string | null;
    };
    TransactionDto: {
      id?: string | null;
      /** Format: date-time */
      timestamp?: string | null;
      description?: string | null;
      /** Format: double */
      price?: number;
      /** Format: double */
      quantity?: number;
      externalDescription?: string | null;
      /** Format: double */
      basisQuantity?: number;
      /** Format: double */
      basisAmount?: number;
      /** Format: double */
      percent?: number;
      unitGroupId?: string | null;
      unitId?: string | null;
      transactionCategoryId?: string | null;
      currencyId?: string | null;
      tenantId?: string | null;
      enrolmentId?: string | null;
    };
    TransactionDtoEnvelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
      result?: components["schemas"]["TransactionDto"];
    };
    TransactionDtoListEnvelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
      result?: components["schemas"]["TransactionDto"][] | null;
    };
    TransactionUpdateDto: {
      description?: string | null;
      /** Format: double */
      price?: number;
      /** Format: double */
      quantity?: number;
      externalDescription?: string | null;
      /** Format: double */
      basisQuantity?: number;
      /** Format: double */
      basisAmount?: number;
      /** Format: double */
      percent?: number;
      unitGroupId?: string | null;
      unitId?: string | null;
      transactionCategoryId?: string | null;
      currencyId?: string | null;
      tenantId?: string | null;
      enrolmentId?: string | null;
    };
    UpdateLedgerDto: {
      name?: string | null;
      description?: string | null;
      tenantId?: string | null;
      enrolmentId?: string | null;
      ledgerTypeId?: string | null;
    };
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}

export type $defs = Record<string, never>;

export type external = Record<string, never>;

export interface operations {

  GetFiscalYearDetailsAsync: {
    parameters: {
      query: {
        tenantId: string;
        "api-version"?: string;
      };
      header?: {
        "x-api-version"?: string;
      };
      path: {
        fiscalYearId: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["FiscalYearDtoEnvelope"];
          "application/xml": components["schemas"]["FiscalYearDtoEnvelope"];
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "application/json": components["schemas"]["ErrorEnvelope"];
          "application/xml": components["schemas"]["ErrorEnvelope"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json": components["schemas"]["ErrorEnvelope"];
          "application/xml": components["schemas"]["ErrorEnvelope"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json": components["schemas"]["ErrorEnvelope"];
          "application/xml": components["schemas"]["ErrorEnvelope"];
        };
      };
    };
  };
}
