/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */


export interface paths {
  "/api/v2/WalletsService/Wallets/{walletId}": {
    /**
     * Get Wallet Details
     * @description Get details of a specific wallet by ID.
     */
    get: operations["GetWalletDetailsAsync"];
  };
  "/api/v2/WalletsService/Wallets/{walletId}/Orders": {
    /**
     * Get Wallet Orders
     * @description Get orders of a specific wallet by ID.
     */
    get: operations["GetWalletOrdersAsync"];
  };
  "/api/v2/WalletsService/Wallets/{walletId}/Orders/Extended": {
    /**
     * Get Wallet Extended Orders
     * @description Get extended orders of a specific wallet by ID.
     */
    get: operations["GetWalletExtendedOrdersAsync"];
  };
  "/api/v2/WalletsService/Wallets/{walletId}/Orders/Count": {
    /**
     * Get Wallet Orders Count
     * @description Get orders count of a specific wallet by ID.
     */
    get: operations["GetWalletOrdersCountAsync"];
  };
  "/api/v2/WalletsService/Wallets/{walletId}/Invoices": {
    /**
     * Get Wallet Invoices
     * @description Get invoices of a specific wallet by ID.
     */
    get: operations["GetWalletInvoicesAsync"];
  };
  "/api/v2/WalletsService/Wallets/{walletId}/Invoices/Count": {
    /**
     * Get Wallet Invoices Count
     * @description Get invoices count of a specific wallet by ID.
     */
    get: operations["GetWalletInvoicesCountAsync"];
  };
  "/api/v2/WalletsService/Wallets/{walletId}/Payments": {
    /**
     * Get Wallet Payments
     * @description Get payments of a specific wallet by ID.
     */
    get: operations["GetWalletPaymentsAsync"];
  };
  "/api/v2/WalletsService/Wallets/{walletId}/Payments/Count": {
    /**
     * Get Wallet Payments Count
     * @description Get payments count of a specific wallet by ID.
     */
    get: operations["GetWalletPaymentsCountAsync"];
  };
  "/api/v2/WalletsService/Wallets/{walletId}/Locations": {
    /**
     * Get Wallet Locations
     * @description Get locations of a specific wallet by ID.
     */
    get: operations["GetWalletLocationsAsync"];
    /**
     * Create Wallet Location
     * @description Create a new location for a specific wallet by ID.
     */
    post: operations["CreateWalletLocationAsync"];
  };
  "/api/v2/WalletsService/Wallets/{walletId}/Locations/Count": {
    /**
     * Get Wallet Locations Count
     * @description Get locations count of a specific wallet by ID.
     */
    get: operations["GetWalletLocationsCountAsync"];
  };
  "/api/v2/WalletsService/Wallets/{walletId}/Locations/{locationId}": {
    /**
     * Get Wallet Location
     * @description Get a specific location of a specific wallet by ID.
     */
    get: operations["GetWalletLocationAsync"];
    /**
     * Update Wallet Location
     * @description Update a specific location of a specific wallet by ID.
     */
    put: operations["UpdateWalletLocationAsync"];
    /**
     * Delete Wallet Location
     * @description Delete a specific location of a specific wallet by ID.
     */
    delete: operations["DeleteWalletLocationAsync"];
  };
  "/api/v2/WalletsService/Wallets/{walletId}/Invoices/Incoming": {
    /**
     * Get Incoming Wallet Invoices
     * @description Get incoming invoices of a specific wallet by ID.
     */
    get: operations["GetIncomingWalletInvoicesAsync"];
  };
  "/api/v2/WalletsService/Wallets/{walletId}/Invoices/Incoming/Count": {
    /**
     * Get Incoming Wallet Invoices Count
     * @description Get incoming invoices count of a specific wallet by ID.
     */
    get: operations["GetIncomingWalletInvoicesCountAsync"];
  };
  "/api/v2/WalletsService/Wallets/{walletId}/Invoices/Outgoing": {
    /**
     * Get Outgoing Wallet Invoices
     * @description Get outgoing invoices of a specific wallet by ID.
     */
    get: operations["GetOutgoingWalletInvoicesAsync"];
  };
  "/api/v2/WalletsService/Wallets/{walletId}/Invoices/Outgoing/Count": {
    /**
     * Get Outgoing Wallet Invoices Count
     * @description Get outgoing invoices count of a specific wallet by ID.
     */
    get: operations["GetOutgoingWalletInvoicesCountAsync"];
  };
  "/api/v2/WalletsService/Wallets/{walletId}/Payments/Incoming": {
    /**
     * Get Incoming Payments
     * @description Get incoming payments of a specific wallet by ID.
     */
    get: operations["GetIncomingPaymentsAsync"];
  };
  "/api/v2/WalletsService/Wallets/{walletId}/Payments/Incoming/Count": {
    /**
     * Get Incoming Payments Count
     * @description Get incoming payments count of a specific wallet by ID.
     */
    get: operations["GetIncomingPaymentsCountAsync"];
  };
  "/api/v2/WalletsService/Wallets/{walletId}/Payments/Outgoing": {
    /**
     * Get Outgoing Payments
     * @description Get outgoing payments of a specific wallet by ID.
     */
    get: operations["GetOutgoingPaymentsAsync"];
  };
  "/api/v2/WalletsService/Wallets/{walletId}/Payments/Outgoing/Count": {
    /**
     * Get Outgoing Payments Count
     * @description Get outgoing payments count of a specific wallet by ID.
     */
    get: operations["GetOutgoingPaymentsCountAsync"];
  };
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: {
    ContactDto: {
      id?: string | null;
      /** Format: date-time */
      timestamp?: string | null;
      qualifiedName?: string | null;
      tenantId?: string | null;
      /**
       * Format: int32
       * @enum {integer}
       */
      type?: 0 | 1;
      publicName?: string | null;
      firstName?: string | null;
      lastName?: string | null;
      jobTitle?: string | null;
      coverUrl?: string | null;
      avatarUrl?: string | null;
      countryId?: string | null;
      timezoneId?: string | null;
      languageId?: string | null;
      socialProfileId?: string | null;
      webUrl?: string | null;
      gitHubUrl?: string | null;
      twitchUrl?: string | null;
      redditUrl?: string | null;
      tikTokUrl?: string | null;
      websiteUrl?: string | null;
      twitterUrl?: string | null;
      facebookUrl?: string | null;
      youTubeUrl?: string | null;
      linkedInUrl?: string | null;
      instagramUrl?: string | null;
      githubUsername?: string | null;
      duns?: string | null;
      taxId?: string | null;
      /** Format: email */
      email?: string | null;
      about?: string | null;
      street?: string | null;
      cartId?: string | null;
      cityId?: string | null;
      zipCode?: string | null;
      stateId?: string | null;
      walletId?: string | null;
      faxNumber?: string | null;
      postalCode?: string | null;
      currencyId?: string | null;
      streetLine1?: string | null;
      streetLine2?: string | null;
      territoryId?: string | null;
      mobilePhone?: string | null;
      enrollmentId?: string | null;
      annualRevenue?: string | null;
      relatedUserId?: string | null;
      businessPhone?: string | null;
      ownerContactId?: string | null;
      relatedTenantId?: string | null;
      activityFeedId?: string | null;
      parentContactId?: string | null;
      identityProvider?: string | null;
      partnerProfileId?: string | null;
      primaryContactId?: string | null;
      activeDirectoryId?: string | null;
      identityProviderAccessToken?: string | null;
      /** Format: date-time */
      birthday?: string | null;
    };
    Currency: {
      code?: string | null;
      country?: string | null;
    };
    EmptyEnvelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
    };
    ErrorEnvelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
    };
    ExtendedOrderDto: {
      id?: string | null;
      /** Format: date-time */
      timestamp?: string | null;
      closed?: boolean;
      type?: string | null;
      title?: string | null;
      userId?: string | null;
      tenantId?: string | null;
      currencyId?: string | null;
      description?: string | null;
      priceListId?: string | null;
      enrollmentId?: string | null;
      individualId?: string | null;
      organizationId?: string | null;
      receiverTenantId?: string | null;
      firstName?: string | null;
      lastName?: string | null;
      companyName?: string | null;
      billingEmail?: string | null;
      addressLine1?: string | null;
      addressLine2?: string | null;
      postalCode?: string | null;
      countryId?: string | null;
      stateId?: string | null;
      cityId?: string | null;
      customerNotes?: string | null;
      /** Format: double */
      forexRate?: number;
      /** Format: double */
      total?: number;
      /** Format: double */
      totalTaxes?: number;
      /** Format: double */
      totalTaxBase?: number;
      /** Format: double */
      totalDiscounts?: number;
      /** Format: double */
      totalSurcharges?: number;
      /** Format: double */
      totalGlobalDiscounts?: number;
      /** Format: double */
      totalGlobalSurcharges?: number;
      /** Format: double */
      totalTaxesInUsd?: number;
      /** Format: double */
      totalAmountInUsd?: number;
      /** Format: double */
      totalProfitInUsd?: number;
      /** Format: double */
      totalTaxBaseInUsd?: number;
      /** Format: double */
      totalDiscountsInUsd?: number;
      /** Format: double */
      totalSurchargesInUsd?: number;
      /** Format: double */
      totalDetailAmountInUsd?: number;
      /** Format: double */
      totalGlobalDiscountsInUsd?: number;
      /** Format: double */
      totalGlobalSurchargesInUsd?: number;
      /** Format: double */
      totalWithholdingTaxesInUsd?: number;
      /** Format: double */
      totalShippingCostInUsd?: number;
      /** Format: double */
      totalShippingTaxesInUsd?: number;
      currency?: components["schemas"]["Currency"];
      totalInUsd?: components["schemas"]["Money"];
      totalTaxAmountInUsd?: components["schemas"]["Money"];
      totalTaxBaseAmountInUsd?: components["schemas"]["Money"];
      totalDiscountsAmountInUsd?: components["schemas"]["Money"];
      totalSurchargesAmountInUsd?: components["schemas"]["Money"];
      totalGlobalDiscountsAmountInUsd?: components["schemas"]["Money"];
      totalGlobalSurchargesAmountInUsd?: components["schemas"]["Money"];
      totalAmount?: components["schemas"]["Money"];
      totalTaxAmount?: components["schemas"]["Money"];
      totalTaxBaseAmount?: components["schemas"]["Money"];
      totalDiscountsAmount?: components["schemas"]["Money"];
      totalSurchargesAmount?: components["schemas"]["Money"];
      totalGlobalDiscountsAmount?: components["schemas"]["Money"];
      totalGlobalSurchargesAmount?: components["schemas"]["Money"];
      /** Format: int32 */
      orderLinesCount?: number;
      quoteId?: string | null;
      walletId?: string | null;
      paymentTermId?: string | null;
      parentOrderId?: string | null;
      shippingMethodId?: string | null;
      billingLocationId?: string | null;
      shippingLocationId?: string | null;
      qualifiedIdentifier?: string | null;
      /**
       * Format: int32
       * @enum {integer}
       */
      costCalculationMethod?: 0 | 1;
      /**
       * Format: int32
       * @enum {integer}
       */
      freightTerms?: 0 | 1;
      /**
       * Format: int32
       * @enum {integer}
       */
      orderStatus?: 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10;
      /** Format: date-time */
      requestedDeliveryDate?: string;
      /** Format: double */
      customTaxAmount?: number;
      /** Format: double */
      customTotalAmount?: number;
      /** Format: double */
      customDetailAmount?: number;
      /** Format: double */
      customProfitAmount?: number;
      /** Format: double */
      customDiscountsAmount?: number;
      /** Format: double */
      customSurchargesAmount?: number;
      /** Format: double */
      customShippingTaxAmount?: number;
      /** Format: double */
      customShippingCostAmount?: number;
      /** Format: double */
      customWithholdingTaxAmount?: number;
      user?: components["schemas"]["UserDto"];
      tenant?: components["schemas"]["TenantDto"];
      individual?: components["schemas"]["ContactDto"];
      organization?: components["schemas"]["ContactDto"];
      receiverTenant?: components["schemas"]["TenantDto"];
      enrollment?: components["schemas"]["TenantEnrolmentDto"];
    };
    ExtendedOrderDtoListEnvelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
      result?: components["schemas"]["ExtendedOrderDto"][] | null;
    };
    Int32Envelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
      /** Format: int32 */
      result?: number;
    };
    InvoiceDto: {
      id?: string | null;
      /** Format: date-time */
      timestamp?: string | null;
      closed?: boolean;
      type?: string | null;
      title?: string | null;
      userId?: string | null;
      tenantId?: string | null;
      currencyId?: string | null;
      description?: string | null;
      priceListId?: string | null;
      enrollmentId?: string | null;
      individualId?: string | null;
      organizationId?: string | null;
      receiverTenantId?: string | null;
      firstName?: string | null;
      lastName?: string | null;
      companyName?: string | null;
      billingEmail?: string | null;
      addressLine1?: string | null;
      addressLine2?: string | null;
      postalCode?: string | null;
      countryId?: string | null;
      stateId?: string | null;
      cityId?: string | null;
      customerNotes?: string | null;
      /** Format: double */
      forexRate?: number;
      /** Format: double */
      total?: number;
      /** Format: double */
      totalTaxes?: number;
      /** Format: double */
      totalTaxBase?: number;
      /** Format: double */
      totalDiscounts?: number;
      /** Format: double */
      totalSurcharges?: number;
      /** Format: double */
      totalGlobalDiscounts?: number;
      /** Format: double */
      totalGlobalSurcharges?: number;
      /** Format: double */
      totalTaxesInUsd?: number;
      /** Format: double */
      totalAmountInUsd?: number;
      /** Format: double */
      totalProfitInUsd?: number;
      /** Format: double */
      totalTaxBaseInUsd?: number;
      /** Format: double */
      totalDiscountsInUsd?: number;
      /** Format: double */
      totalSurchargesInUsd?: number;
      /** Format: double */
      totalDetailAmountInUsd?: number;
      /** Format: double */
      totalGlobalDiscountsInUsd?: number;
      /** Format: double */
      totalGlobalSurchargesInUsd?: number;
      /** Format: double */
      totalWithholdingTaxesInUsd?: number;
      /** Format: double */
      totalShippingCostInUsd?: number;
      /** Format: double */
      totalShippingTaxesInUsd?: number;
      currency?: components["schemas"]["Currency"];
      totalInUsd?: components["schemas"]["Money"];
      totalTaxAmountInUsd?: components["schemas"]["Money"];
      totalTaxBaseAmountInUsd?: components["schemas"]["Money"];
      totalDiscountsAmountInUsd?: components["schemas"]["Money"];
      totalSurchargesAmountInUsd?: components["schemas"]["Money"];
      totalGlobalDiscountsAmountInUsd?: components["schemas"]["Money"];
      totalGlobalSurchargesAmountInUsd?: components["schemas"]["Money"];
      totalAmount?: components["schemas"]["Money"];
      totalTaxAmount?: components["schemas"]["Money"];
      totalTaxBaseAmount?: components["schemas"]["Money"];
      totalDiscountsAmount?: components["schemas"]["Money"];
      totalSurchargesAmount?: components["schemas"]["Money"];
      totalGlobalDiscountsAmount?: components["schemas"]["Money"];
      totalGlobalSurchargesAmount?: components["schemas"]["Money"];
      paid?: boolean;
      /** Format: int64 */
      number?: number;
      notes?: string | null;
      orderId?: string | null;
      enumeration?: string | null;
      paymentModeId?: string | null;
      enumerationRangeId?: string | null;
      emisorBillingProfileId?: string | null;
      receiverBillingProfileId?: string | null;
      emisorWalletAccountId?: string | null;
      receiverWalletAccountId?: string | null;
      /** Format: date-time */
      paymentDue?: string | null;
      /**
       * Format: int32
       * @enum {integer}
       */
      invoiceType?: 0 | 1;
      /**
       * Format: int32
       * @enum {integer}
       */
      documentType?: 0 | 1 | 2;
      /**
       * Format: int32
       * @enum {integer}
       */
      invoiceStatus?: 0 | 1 | 2 | 3 | 4;
    };
    InvoiceDtoListEnvelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
      result?: components["schemas"]["InvoiceDto"][] | null;
    };
    LocationCreateDto: {
      /** Format: uuid */
      id?: string;
      /** Format: date-time */
      timestamp?: string;
      title?: string | null;
      email?: string | null;
      phone?: string | null;
      fax?: string | null;
      address1?: string | null;
      address2?: string | null;
      address3?: string | null;
      unit?: string | null;
      cityId?: string | null;
      stateId?: string | null;
      postalCode?: string | null;
      countryId?: string | null;
      tenantId?: string | null;
      /** Format: double */
      longitude?: number;
      /** Format: double */
      latitude?: number;
      isRoutable?: boolean;
      isGlobalPrimary?: boolean;
      isCountryPrimary?: boolean;
      canGenerateLabels?: boolean;
      isDefaultSenderAddress?: boolean;
      isDefaultReturnAddress?: boolean;
      isDefaultSuppingLocation?: boolean;
    };
    LocationDto: {
      id?: string | null;
      /** Format: date-time */
      timestamp?: string | null;
      title?: string | null;
      business?: string | null;
      email?: string | null;
      phone?: string | null;
      fax?: string | null;
      address1?: string | null;
      address2?: string | null;
      address3?: string | null;
      unit?: string | null;
      cityId?: string | null;
      stateId?: string | null;
      postalCode?: string | null;
      countryId?: string | null;
      /** Format: double */
      longitude?: number;
      /** Format: double */
      latitude?: number;
      isRoutable?: boolean;
      isGlobalPrimary?: boolean;
      isCountryPrimary?: boolean;
      canGenerateLabels?: boolean;
      isDefaultSenderAddress?: boolean;
      isDefaultReturnAddress?: boolean;
      isDefaultSuppingLocation?: boolean;
    };
    LocationDtoEnvelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
      result?: components["schemas"]["LocationDto"];
    };
    LocationDtoListEnvelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
      result?: components["schemas"]["LocationDto"][] | null;
    };
    LocationUpdateDto: {
      title?: string | null;
      email?: string | null;
      phone?: string | null;
      fax?: string | null;
      address1?: string | null;
      address2?: string | null;
      address3?: string | null;
      unit?: string | null;
      cityId?: string | null;
      stateId?: string | null;
      postalCode?: string | null;
      countryId?: string | null;
      tenantId?: string | null;
      /** Format: double */
      longitude?: number;
      /** Format: double */
      latitude?: number;
      isRoutable?: boolean;
      isGlobalPrimary?: boolean;
      isCountryPrimary?: boolean;
      canGenerateLabels?: boolean;
      isDefaultSenderAddress?: boolean;
      isDefaultReturnAddress?: boolean;
      isDefaultSuppingLocation?: boolean;
    };
    Money: {
      /** Format: double */
      amount?: number;
      currency?: components["schemas"]["Currency"];
    };
    OrderDto: {
      id?: string | null;
      /** Format: date-time */
      timestamp?: string | null;
      closed?: boolean;
      type?: string | null;
      title?: string | null;
      userId?: string | null;
      tenantId?: string | null;
      currencyId?: string | null;
      description?: string | null;
      priceListId?: string | null;
      enrollmentId?: string | null;
      individualId?: string | null;
      organizationId?: string | null;
      receiverTenantId?: string | null;
      firstName?: string | null;
      lastName?: string | null;
      companyName?: string | null;
      billingEmail?: string | null;
      addressLine1?: string | null;
      addressLine2?: string | null;
      postalCode?: string | null;
      countryId?: string | null;
      stateId?: string | null;
      cityId?: string | null;
      customerNotes?: string | null;
      /** Format: double */
      forexRate?: number;
      /** Format: double */
      total?: number;
      /** Format: double */
      totalTaxes?: number;
      /** Format: double */
      totalTaxBase?: number;
      /** Format: double */
      totalDiscounts?: number;
      /** Format: double */
      totalSurcharges?: number;
      /** Format: double */
      totalGlobalDiscounts?: number;
      /** Format: double */
      totalGlobalSurcharges?: number;
      /** Format: double */
      totalTaxesInUsd?: number;
      /** Format: double */
      totalAmountInUsd?: number;
      /** Format: double */
      totalProfitInUsd?: number;
      /** Format: double */
      totalTaxBaseInUsd?: number;
      /** Format: double */
      totalDiscountsInUsd?: number;
      /** Format: double */
      totalSurchargesInUsd?: number;
      /** Format: double */
      totalDetailAmountInUsd?: number;
      /** Format: double */
      totalGlobalDiscountsInUsd?: number;
      /** Format: double */
      totalGlobalSurchargesInUsd?: number;
      /** Format: double */
      totalWithholdingTaxesInUsd?: number;
      /** Format: double */
      totalShippingCostInUsd?: number;
      /** Format: double */
      totalShippingTaxesInUsd?: number;
      currency?: components["schemas"]["Currency"];
      totalInUsd?: components["schemas"]["Money"];
      totalTaxAmountInUsd?: components["schemas"]["Money"];
      totalTaxBaseAmountInUsd?: components["schemas"]["Money"];
      totalDiscountsAmountInUsd?: components["schemas"]["Money"];
      totalSurchargesAmountInUsd?: components["schemas"]["Money"];
      totalGlobalDiscountsAmountInUsd?: components["schemas"]["Money"];
      totalGlobalSurchargesAmountInUsd?: components["schemas"]["Money"];
      totalAmount?: components["schemas"]["Money"];
      totalTaxAmount?: components["schemas"]["Money"];
      totalTaxBaseAmount?: components["schemas"]["Money"];
      totalDiscountsAmount?: components["schemas"]["Money"];
      totalSurchargesAmount?: components["schemas"]["Money"];
      totalGlobalDiscountsAmount?: components["schemas"]["Money"];
      totalGlobalSurchargesAmount?: components["schemas"]["Money"];
      /** Format: int32 */
      orderLinesCount?: number;
      quoteId?: string | null;
      walletId?: string | null;
      paymentTermId?: string | null;
      parentOrderId?: string | null;
      shippingMethodId?: string | null;
      billingLocationId?: string | null;
      shippingLocationId?: string | null;
      qualifiedIdentifier?: string | null;
      /**
       * Format: int32
       * @enum {integer}
       */
      costCalculationMethod?: 0 | 1;
      /**
       * Format: int32
       * @enum {integer}
       */
      freightTerms?: 0 | 1;
      /**
       * Format: int32
       * @enum {integer}
       */
      orderStatus?: 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10;
      /** Format: date-time */
      requestedDeliveryDate?: string;
      /** Format: double */
      customTaxAmount?: number;
      /** Format: double */
      customTotalAmount?: number;
      /** Format: double */
      customDetailAmount?: number;
      /** Format: double */
      customProfitAmount?: number;
      /** Format: double */
      customDiscountsAmount?: number;
      /** Format: double */
      customSurchargesAmount?: number;
      /** Format: double */
      customShippingTaxAmount?: number;
      /** Format: double */
      customShippingCostAmount?: number;
      /** Format: double */
      customWithholdingTaxAmount?: number;
    };
    OrderDtoListEnvelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
      result?: components["schemas"]["OrderDto"][] | null;
    };
    PaymentDto: {
      id?: string | null;
      /** Format: date-time */
      timestamp?: string | null;
      /** Format: date-time */
      timeStamp?: string;
      test?: boolean;
      invoiceId?: string | null;
      tenantId?: string | null;
      emisorWalletId?: string | null;
      receiverWalletId?: string | null;
      currencyId?: string | null;
      /** Format: double */
      forexRate?: number;
      /** Format: double */
      totalCost?: number;
      /** Format: double */
      totalTaxes?: number;
      closed?: boolean;
      data?: string | null;
      dataLabel?: string | null;
      data1?: string | null;
      data1Label?: string | null;
      response?: string | null;
      authorization?: string | null;
      referenceCode?: string | null;
      correlationCode?: string | null;
      /** Format: date-time */
      lastUpdated?: string;
      /**
       * Format: int32
       * @enum {integer}
       */
      onBehalfOf?: 0 | 1 | 2 | 3;
      /**
       * Format: int32
       * @enum {integer}
       */
      paymentType?: 0 | 1 | 2;
      /**
       * Format: int32
       * @enum {integer}
       */
      paymentStatus?: 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11;
      /** Format: double */
      baseCost?: number;
      signature?: string | null;
      signatureMismatch?: boolean;
      isExternal?: boolean;
      markedForRevision?: boolean;
      forexRatesSnapshot?: string | null;
      officialId?: string | null;
      /** Format: date-time */
      officialIdExpeditionDate?: string;
      fiscalIdentificationTypeId?: string | null;
      billingAddress?: string | null;
      phone?: string | null;
      cellphone?: string | null;
      department?: string | null;
      city?: string | null;
      countryId?: string | null;
      locationId?: string | null;
      entitlementId?: string | null;
      /** Format: double */
      antiFraudScore?: number;
      callRecordURL?: string | null;
      called?: boolean;
      verified?: boolean;
      payerPictureTimestamp?: string | null;
      payerPicture?: string | null;
      identificationPictureTimestamp?: string | null;
      identificationPicture?: string | null;
      identificationBackPicture?: string | null;
      identificationBackPictureTimestamp?: string | null;
      ipLookupId?: string | null;
      orderId?: string | null;
      accountingEntryId?: string | null;
      paymentGatewayId?: string | null;
      bankAccountId?: string | null;
      enrolmentId?: string | null;
      bankId?: string | null;
      paymentTokenId?: string | null;
    };
    PaymentDtoListEnvelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
      result?: components["schemas"]["PaymentDto"][] | null;
    };
    TenantDto: {
      id?: string | null;
      /** Format: date-time */
      timestamp?: string | null;
      qualifiedName?: string | null;
      taxId?: string | null;
      about?: string | null;
      walletId?: string | null;
      socialFeedId?: string | null;
      businessIndustryId?: string | null;
      businessSegmentId?: string | null;
      socialProfileId?: string | null;
      languageId?: string | null;
      name?: string | null;
      duns?: string | null;
      slogan?: string | null;
      legalName?: string | null;
      coverUrl?: string | null;
      avatarUrl?: string | null;
      cartId?: string | null;
      currencyId?: string | null;
      timezoneId?: string | null;
      countryId?: string | null;
      stateId?: string | null;
      cityId?: string | null;
      email?: string | null;
      phone?: string | null;
      webUrl?: string | null;
      facebookUrl?: string | null;
      twitterUrl?: string | null;
      gitHubUrl?: string | null;
      linkedInUrl?: string | null;
      instagramUrl?: string | null;
      youTubeUrl?: string | null;
      whatsAppNumber?: string | null;
      supportPhoneNumber?: string | null;
      verified?: boolean;
      businessName?: string | null;
      businessLegalName?: string | null;
      twitterUsername?: string | null;
    };
    TenantEnrolmentDto: {
      id?: string | null;
      /** Format: date-time */
      timestamp?: string | null;
      tenantId?: string | null;
      userId?: string | null;
      isRoot?: boolean;
      isOwner?: boolean;
      isAdmin?: boolean;
      isDisabled?: boolean;
    };
    UserDto: {
      id?: string | null;
      /** Format: date-time */
      timestamp?: string | null;
      fullName?: string | null;
      qualifiedName?: string | null;
      publicName?: string | null;
      lastName?: string | null;
      firstName?: string | null;
      coverUrl?: string | null;
      avatarUrl?: string | null;
      gitHubUrl?: string | null;
      countryId?: string | null;
      timezoneId?: string | null;
      websiteUrl?: string | null;
      twitterUrl?: string | null;
      youTubeUrl?: string | null;
      linkedInUrl?: string | null;
      facebookUrl?: string | null;
      instagramUrl?: string | null;
      socialProfileId?: string | null;
      /** Format: date-time */
      birthday?: string | null;
      idProvider?: string | null;
      languageId?: string | null;
      /**
       * Format: int32
       * @enum {integer|null}
       */
      gender?: 0 | 1 | 2 | null;
      cityId?: string | null;
      stateId?: string | null;
      email?: string | null;
      about?: string | null;
      jobTitle?: string | null;
      socialFeedId?: string | null;
      currentTenantId?: string | null;
      currentEnrollmentId?: string | null;
      status?: string | null;
      cartId?: string | null;
      walletId?: string | null;
      userName?: string | null;
      currencyId?: string | null;
      phoneNumber?: string | null;
      publicIdentifier?: string | null;
      identityProvider?: string | null;
      phoneNumberConfirmed?: boolean;
      emailConfirmed?: boolean;
      /**
       * Format: int32
       * @enum {integer|null}
       */
      availability?: 0 | 1 | 2 | 3 | 4 | null;
      lockoutEnabled?: boolean;
      /** Format: date-time */
      lockoutEnd?: string | null;
      /** Format: int32 */
      enrollmentsCount?: number | null;
      /**
       * Format: int32
       * @enum {integer|null}
       */
      siteTheme?: 0 | 1 | 2 | null;
    };
    WalletDto: {
      id?: string | null;
      /** Format: date-time */
      timestamp?: string;
      /** Format: double */
      balance?: number;
      /** Format: double */
      cryptoBalance?: number;
      testMode?: boolean;
      verified?: boolean;
      type?: string | null;
      currencyId?: string | null;
      /** Format: double */
      forexRate?: number;
      /** Format: double */
      balanceInUsd?: number;
      /** Format: double */
      mainNetEtherBalance?: number;
      ethereumAddress?: string | null;
      ethereumPublicKey?: string | null;
      ethereumPrivateKey?: string | null;
      /** Format: double */
      rollingReservePercent?: number;
    };
    WalletDtoEnvelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
      result?: components["schemas"]["WalletDto"];
    };
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}

export type $defs = Record<string, never>;

export type external = Record<string, never>;

export interface operations {

  /**
   * Get Wallet Details
   * @description Get details of a specific wallet by ID.
   */
  GetWalletDetailsAsync: {
    parameters: {
      query?: {
        "api-version"?: string;
      };
      header?: {
        "x-api-version"?: string;
      };
      path: {
        walletId: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["WalletDtoEnvelope"];
          "application/xml": components["schemas"]["WalletDtoEnvelope"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json": components["schemas"]["ErrorEnvelope"];
          "application/xml": components["schemas"]["ErrorEnvelope"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json": components["schemas"]["ErrorEnvelope"];
          "application/xml": components["schemas"]["ErrorEnvelope"];
        };
      };
    };
  };
  /**
   * Get Wallet Orders
   * @description Get orders of a specific wallet by ID.
   */
  GetWalletOrdersAsync: {
    parameters: {
      query?: {
        "api-version"?: string;
      };
      header?: {
        "x-api-version"?: string;
      };
      path: {
        walletId: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["OrderDtoListEnvelope"];
          "application/xml": components["schemas"]["OrderDtoListEnvelope"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json": components["schemas"]["ErrorEnvelope"];
          "application/xml": components["schemas"]["ErrorEnvelope"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json": components["schemas"]["ErrorEnvelope"];
          "application/xml": components["schemas"]["ErrorEnvelope"];
        };
      };
    };
  };
  /**
   * Get Wallet Extended Orders
   * @description Get extended orders of a specific wallet by ID.
   */
  GetWalletExtendedOrdersAsync: {
    parameters: {
      query?: {
        "api-version"?: string;
      };
      header?: {
        "x-api-version"?: string;
      };
      path: {
        walletId: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["ExtendedOrderDtoListEnvelope"];
          "application/xml": components["schemas"]["ExtendedOrderDtoListEnvelope"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json": components["schemas"]["ErrorEnvelope"];
          "application/xml": components["schemas"]["ErrorEnvelope"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json": components["schemas"]["ErrorEnvelope"];
          "application/xml": components["schemas"]["ErrorEnvelope"];
        };
      };
    };
  };
  /**
   * Get Wallet Orders Count
   * @description Get orders count of a specific wallet by ID.
   */
  GetWalletOrdersCountAsync: {
    parameters: {
      query?: {
        "api-version"?: string;
      };
      header?: {
        "x-api-version"?: string;
      };
      path: {
        walletId: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["Int32Envelope"];
          "application/xml": components["schemas"]["Int32Envelope"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json": components["schemas"]["ErrorEnvelope"];
          "application/xml": components["schemas"]["ErrorEnvelope"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json": components["schemas"]["ErrorEnvelope"];
          "application/xml": components["schemas"]["ErrorEnvelope"];
        };
      };
    };
  };
  /**
   * Get Wallet Invoices
   * @description Get invoices of a specific wallet by ID.
   */
  GetWalletInvoicesAsync: {
    parameters: {
      query?: {
        "api-version"?: string;
      };
      header?: {
        "x-api-version"?: string;
      };
      path: {
        walletId: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["InvoiceDtoListEnvelope"];
          "application/xml": components["schemas"]["InvoiceDtoListEnvelope"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json": components["schemas"]["ErrorEnvelope"];
          "application/xml": components["schemas"]["ErrorEnvelope"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json": components["schemas"]["ErrorEnvelope"];
          "application/xml": components["schemas"]["ErrorEnvelope"];
        };
      };
    };
  };
  /**
   * Get Wallet Invoices Count
   * @description Get invoices count of a specific wallet by ID.
   */
  GetWalletInvoicesCountAsync: {
    parameters: {
      query?: {
        "api-version"?: string;
      };
      header?: {
        "x-api-version"?: string;
      };
      path: {
        walletId: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["Int32Envelope"];
          "application/xml": components["schemas"]["Int32Envelope"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json": components["schemas"]["ErrorEnvelope"];
          "application/xml": components["schemas"]["ErrorEnvelope"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json": components["schemas"]["ErrorEnvelope"];
          "application/xml": components["schemas"]["ErrorEnvelope"];
        };
      };
    };
  };
  /**
   * Get Wallet Payments
   * @description Get payments of a specific wallet by ID.
   */
  GetWalletPaymentsAsync: {
    parameters: {
      query?: {
        "api-version"?: string;
      };
      header?: {
        "x-api-version"?: string;
      };
      path: {
        walletId: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["PaymentDtoListEnvelope"];
          "application/xml": components["schemas"]["PaymentDtoListEnvelope"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json": components["schemas"]["ErrorEnvelope"];
          "application/xml": components["schemas"]["ErrorEnvelope"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json": components["schemas"]["ErrorEnvelope"];
          "application/xml": components["schemas"]["ErrorEnvelope"];
        };
      };
    };
  };
  /**
   * Get Wallet Payments Count
   * @description Get payments count of a specific wallet by ID.
   */
  GetWalletPaymentsCountAsync: {
    parameters: {
      query?: {
        "api-version"?: string;
      };
      header?: {
        "x-api-version"?: string;
      };
      path: {
        walletId: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["Int32Envelope"];
          "application/xml": components["schemas"]["Int32Envelope"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json": components["schemas"]["ErrorEnvelope"];
          "application/xml": components["schemas"]["ErrorEnvelope"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json": components["schemas"]["ErrorEnvelope"];
          "application/xml": components["schemas"]["ErrorEnvelope"];
        };
      };
    };
  };
  /**
   * Get Wallet Locations
   * @description Get locations of a specific wallet by ID.
   */
  GetWalletLocationsAsync: {
    parameters: {
      query?: {
        "api-version"?: string;
      };
      header?: {
        "x-api-version"?: string;
      };
      path: {
        walletId: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["LocationDtoListEnvelope"];
          "application/xml": components["schemas"]["LocationDtoListEnvelope"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json": components["schemas"]["ErrorEnvelope"];
          "application/xml": components["schemas"]["ErrorEnvelope"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json": components["schemas"]["ErrorEnvelope"];
          "application/xml": components["schemas"]["ErrorEnvelope"];
        };
      };
    };
  };
  /**
   * Create Wallet Location
   * @description Create a new location for a specific wallet by ID.
   */
  CreateWalletLocationAsync: {
    parameters: {
      query?: {
        "api-version"?: string;
      };
      header?: {
        "x-api-version"?: string;
      };
      path: {
        walletId: string;
      };
    };
    requestBody?: {
      content: {
        "application/json": components["schemas"]["LocationCreateDto"];
        "application/xml": components["schemas"]["LocationCreateDto"];
      };
    };
    responses: {
      /** @description Created */
      201: {
        content: {
          "application/json": components["schemas"]["EmptyEnvelope"];
          "application/xml": components["schemas"]["EmptyEnvelope"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json": components["schemas"]["ErrorEnvelope"];
          "application/xml": components["schemas"]["ErrorEnvelope"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json": components["schemas"]["ErrorEnvelope"];
          "application/xml": components["schemas"]["ErrorEnvelope"];
        };
      };
    };
  };
  /**
   * Get Wallet Locations Count
   * @description Get locations count of a specific wallet by ID.
   */
  GetWalletLocationsCountAsync: {
    parameters: {
      query?: {
        "api-version"?: string;
      };
      header?: {
        "x-api-version"?: string;
      };
      path: {
        walletId: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["Int32Envelope"];
          "application/xml": components["schemas"]["Int32Envelope"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json": components["schemas"]["ErrorEnvelope"];
          "application/xml": components["schemas"]["ErrorEnvelope"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json": components["schemas"]["ErrorEnvelope"];
          "application/xml": components["schemas"]["ErrorEnvelope"];
        };
      };
    };
  };
  /**
   * Get Wallet Location
   * @description Get a specific location of a specific wallet by ID.
   */
  GetWalletLocationAsync: {
    parameters: {
      query?: {
        "api-version"?: string;
      };
      header?: {
        "x-api-version"?: string;
      };
      path: {
        walletId: string;
        locationId: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["LocationDtoEnvelope"];
          "application/xml": components["schemas"]["LocationDtoEnvelope"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json": components["schemas"]["ErrorEnvelope"];
          "application/xml": components["schemas"]["ErrorEnvelope"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json": components["schemas"]["ErrorEnvelope"];
          "application/xml": components["schemas"]["ErrorEnvelope"];
        };
      };
    };
  };
  /**
   * Update Wallet Location
   * @description Update a specific location of a specific wallet by ID.
   */
  UpdateWalletLocationAsync: {
    parameters: {
      query?: {
        "api-version"?: string;
      };
      header?: {
        "x-api-version"?: string;
      };
      path: {
        walletId: string;
        locationId: string;
      };
    };
    requestBody?: {
      content: {
        "application/json": components["schemas"]["LocationUpdateDto"];
        "application/xml": components["schemas"]["LocationUpdateDto"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["EmptyEnvelope"];
          "application/xml": components["schemas"]["EmptyEnvelope"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json": components["schemas"]["ErrorEnvelope"];
          "application/xml": components["schemas"]["ErrorEnvelope"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json": components["schemas"]["ErrorEnvelope"];
          "application/xml": components["schemas"]["ErrorEnvelope"];
        };
      };
    };
  };
  /**
   * Delete Wallet Location
   * @description Delete a specific location of a specific wallet by ID.
   */
  DeleteWalletLocationAsync: {
    parameters: {
      query?: {
        "api-version"?: string;
      };
      header?: {
        "x-api-version"?: string;
      };
      path: {
        walletId: string;
        locationId: string;
      };
    };
    responses: {
      /** @description No Content */
      204: {
        content: {
          "application/json": components["schemas"]["EmptyEnvelope"];
          "application/xml": components["schemas"]["EmptyEnvelope"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json": components["schemas"]["ErrorEnvelope"];
          "application/xml": components["schemas"]["ErrorEnvelope"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json": components["schemas"]["ErrorEnvelope"];
          "application/xml": components["schemas"]["ErrorEnvelope"];
        };
      };
    };
  };
  /**
   * Get Incoming Wallet Invoices
   * @description Get incoming invoices of a specific wallet by ID.
   */
  GetIncomingWalletInvoicesAsync: {
    parameters: {
      query?: {
        "api-version"?: string;
      };
      header?: {
        "x-api-version"?: string;
      };
      path: {
        walletId: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["InvoiceDtoListEnvelope"];
          "application/xml": components["schemas"]["InvoiceDtoListEnvelope"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json": components["schemas"]["ErrorEnvelope"];
          "application/xml": components["schemas"]["ErrorEnvelope"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json": components["schemas"]["ErrorEnvelope"];
          "application/xml": components["schemas"]["ErrorEnvelope"];
        };
      };
    };
  };
  /**
   * Get Incoming Wallet Invoices Count
   * @description Get incoming invoices count of a specific wallet by ID.
   */
  GetIncomingWalletInvoicesCountAsync: {
    parameters: {
      query?: {
        "api-version"?: string;
      };
      header?: {
        "x-api-version"?: string;
      };
      path: {
        walletId: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["Int32Envelope"];
          "application/xml": components["schemas"]["Int32Envelope"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json": components["schemas"]["ErrorEnvelope"];
          "application/xml": components["schemas"]["ErrorEnvelope"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json": components["schemas"]["ErrorEnvelope"];
          "application/xml": components["schemas"]["ErrorEnvelope"];
        };
      };
    };
  };
  /**
   * Get Outgoing Wallet Invoices
   * @description Get outgoing invoices of a specific wallet by ID.
   */
  GetOutgoingWalletInvoicesAsync: {
    parameters: {
      query?: {
        "api-version"?: string;
      };
      header?: {
        "x-api-version"?: string;
      };
      path: {
        walletId: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["InvoiceDtoListEnvelope"];
          "application/xml": components["schemas"]["InvoiceDtoListEnvelope"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json": components["schemas"]["ErrorEnvelope"];
          "application/xml": components["schemas"]["ErrorEnvelope"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json": components["schemas"]["ErrorEnvelope"];
          "application/xml": components["schemas"]["ErrorEnvelope"];
        };
      };
    };
  };
  /**
   * Get Outgoing Wallet Invoices Count
   * @description Get outgoing invoices count of a specific wallet by ID.
   */
  GetOutgoingWalletInvoicesCountAsync: {
    parameters: {
      query?: {
        "api-version"?: string;
      };
      header?: {
        "x-api-version"?: string;
      };
      path: {
        walletId: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["Int32Envelope"];
          "application/xml": components["schemas"]["Int32Envelope"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json": components["schemas"]["ErrorEnvelope"];
          "application/xml": components["schemas"]["ErrorEnvelope"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json": components["schemas"]["ErrorEnvelope"];
          "application/xml": components["schemas"]["ErrorEnvelope"];
        };
      };
    };
  };
  /**
   * Get Incoming Payments
   * @description Get incoming payments of a specific wallet by ID.
   */
  GetIncomingPaymentsAsync: {
    parameters: {
      query?: {
        "api-version"?: string;
      };
      header?: {
        "x-api-version"?: string;
      };
      path: {
        walletId: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["PaymentDtoListEnvelope"];
          "application/xml": components["schemas"]["PaymentDtoListEnvelope"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json": components["schemas"]["ErrorEnvelope"];
          "application/xml": components["schemas"]["ErrorEnvelope"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json": components["schemas"]["ErrorEnvelope"];
          "application/xml": components["schemas"]["ErrorEnvelope"];
        };
      };
    };
  };
  /**
   * Get Incoming Payments Count
   * @description Get incoming payments count of a specific wallet by ID.
   */
  GetIncomingPaymentsCountAsync: {
    parameters: {
      query?: {
        "api-version"?: string;
      };
      header?: {
        "x-api-version"?: string;
      };
      path: {
        walletId: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["Int32Envelope"];
          "application/xml": components["schemas"]["Int32Envelope"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json": components["schemas"]["ErrorEnvelope"];
          "application/xml": components["schemas"]["ErrorEnvelope"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json": components["schemas"]["ErrorEnvelope"];
          "application/xml": components["schemas"]["ErrorEnvelope"];
        };
      };
    };
  };
  /**
   * Get Outgoing Payments
   * @description Get outgoing payments of a specific wallet by ID.
   */
  GetOutgoingPaymentsAsync: {
    parameters: {
      query?: {
        "api-version"?: string;
      };
      header?: {
        "x-api-version"?: string;
      };
      path: {
        walletId: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["PaymentDtoListEnvelope"];
          "application/xml": components["schemas"]["PaymentDtoListEnvelope"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json": components["schemas"]["ErrorEnvelope"];
          "application/xml": components["schemas"]["ErrorEnvelope"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json": components["schemas"]["ErrorEnvelope"];
          "application/xml": components["schemas"]["ErrorEnvelope"];
        };
      };
    };
  };
  /**
   * Get Outgoing Payments Count
   * @description Get outgoing payments count of a specific wallet by ID.
   */
  GetOutgoingPaymentsCountAsync: {
    parameters: {
      query?: {
        "api-version"?: string;
      };
      header?: {
        "x-api-version"?: string;
      };
      path: {
        walletId: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["Int32Envelope"];
          "application/xml": components["schemas"]["Int32Envelope"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json": components["schemas"]["ErrorEnvelope"];
          "application/xml": components["schemas"]["ErrorEnvelope"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json": components["schemas"]["ErrorEnvelope"];
          "application/xml": components["schemas"]["ErrorEnvelope"];
        };
      };
    };
  };
}
