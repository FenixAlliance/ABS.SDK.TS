/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */


export interface paths {
  "/api/v2/CatalogService/ItemAttachments": {
    get: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["ItemAttachmentDtoListEnvelope"];
            "application/xml": components["schemas"]["ItemAttachmentDtoListEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    post: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["ItemAttachmentCreateDto"];
          "application/xml": components["schemas"]["ItemAttachmentCreateDto"];
        };
      };
      responses: {
        /** @description Created */
        201: {
          content: {
            "application/json": components["schemas"]["ItemAttachmentDtoEnvelope"];
            "application/xml": components["schemas"]["ItemAttachmentDtoEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/CatalogService/ItemAttachments/{itemAttachmentId}": {
    get: {
      parameters: {
        query?: {
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          itemAttachmentId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["ItemAttachmentDtoEnvelope"];
            "application/xml": components["schemas"]["ItemAttachmentDtoEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    put: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          itemAttachmentId: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["ItemAttachmentUpdateDto"];
          "application/xml": components["schemas"]["ItemAttachmentUpdateDto"];
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["EmptyEnvelope"];
            "application/xml": components["schemas"]["EmptyEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    delete: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          itemAttachmentId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["EmptyEnvelope"];
            "application/xml": components["schemas"]["EmptyEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/CatalogService/ItemAttributes": {
    get: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["ItemAttributeDtoListEnvelope"];
            "application/xml": components["schemas"]["ItemAttributeDtoListEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    post: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["ItemAttributeCreateDto"];
          "application/xml": components["schemas"]["ItemAttributeCreateDto"];
        };
      };
      responses: {
        /** @description Created */
        201: {
          content: {
            "application/json": components["schemas"]["ItemAttributeDtoEnvelope"];
            "application/xml": components["schemas"]["ItemAttributeDtoEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/CatalogService/ItemAttributes/{itemAttributeId}": {
    get: {
      parameters: {
        query?: {
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          itemAttributeId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["ItemAttributeDtoEnvelope"];
            "application/xml": components["schemas"]["ItemAttributeDtoEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    put: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          itemAttributeId: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["ItemAttributeUpdateDto"];
          "application/xml": components["schemas"]["ItemAttributeUpdateDto"];
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: never;
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    delete: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          itemAttributeId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: never;
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/CatalogService/ItemBrands": {
    get: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["ItemBrandDtoListEnvelope"];
            "application/xml": components["schemas"]["ItemBrandDtoListEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    post: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["ItemBrandCreateDto"];
          "application/xml": components["schemas"]["ItemBrandCreateDto"];
        };
      };
      responses: {
        /** @description Created */
        201: {
          content: {
            "application/json": components["schemas"]["ItemBrandDtoEnvelope"];
            "application/xml": components["schemas"]["ItemBrandDtoEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/CatalogService/ItemBrands/{itemBrandId}": {
    get: {
      parameters: {
        query?: {
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          itemBrandId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["ItemBrandDtoEnvelope"];
            "application/xml": components["schemas"]["ItemBrandDtoEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    put: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          itemBrandId: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["ItemBrandUpdateDto"];
          "application/xml": components["schemas"]["ItemBrandUpdateDto"];
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["ItemBrandDtoEnvelope"];
            "application/xml": components["schemas"]["ItemBrandDtoEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    delete: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          itemBrandId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: never;
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/CatalogService/ItemCategories/{itemCategoryId}": {
    get: {
      parameters: {
        query?: {
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          itemCategoryId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["ItemCategoryDtoEnvelope"];
            "application/xml": components["schemas"]["ItemCategoryDtoEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    put: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          itemCategoryId: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["ItemCategoryUpdateDto"];
          "application/xml": components["schemas"]["ItemCategoryUpdateDto"];
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: never;
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    delete: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          itemCategoryId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: never;
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/CatalogService/ItemCategories": {
    get: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["ItemCategoryDtoListEnvelope"];
            "application/xml": components["schemas"]["ItemCategoryDtoListEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    post: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["ItemCategoryCreateDto"];
          "application/xml": components["schemas"]["ItemCategoryCreateDto"];
        };
      };
      responses: {
        /** @description Created */
        201: {
          content: {
            "application/json": components["schemas"]["ItemCategoryDtoEnvelope"];
            "application/xml": components["schemas"]["ItemCategoryDtoEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/CatalogService/ItemGoogleCategories": {
    get: {
      parameters: {
        query?: {
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["ItemGoogleCategoryDtoListEnvelope"];
            "application/xml": components["schemas"]["ItemGoogleCategoryDtoListEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/CatalogService/ItemGoogleCategories/Count": {
    get: {
      parameters: {
        query?: {
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["Int32Envelope"];
            "application/xml": components["schemas"]["Int32Envelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/CatalogService/ItemGoogleCategories/All": {
    get: {
      parameters: {
        query?: {
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["ItemGoogleCategoryDtoListEnvelope"];
            "application/xml": components["schemas"]["ItemGoogleCategoryDtoListEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/CatalogService/ItemGoogleCategories/Primary": {
    get: {
      parameters: {
        query?: {
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["ItemGoogleCategoryDtoListEnvelope"];
            "application/xml": components["schemas"]["ItemGoogleCategoryDtoListEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/CatalogService/ItemGoogleCategories/{itemCategoryId}": {
    get: {
      parameters: {
        query?: {
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          itemCategoryId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["ItemGoogleCategoryDtoEnvelope"];
            "application/xml": components["schemas"]["ItemGoogleCategoryDtoEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/CatalogService/ItemGoogleCategories/{itemCategoryId}/Children": {
    get: {
      parameters: {
        query?: {
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          itemCategoryId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["ItemGoogleCategoryDtoListEnvelope"];
            "application/xml": components["schemas"]["ItemGoogleCategoryDtoListEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/CatalogService/ItemGoogleCategories/tree": {
    get: {
      parameters: {
        query?: {
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["ItemGoogleCategoryDtoListEnvelope"];
            "application/xml": components["schemas"]["ItemGoogleCategoryDtoListEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    post: {
      parameters: {
        query?: {
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["ItemGoogleCategoryDtoListEnvelope"];
            "application/xml": components["schemas"]["ItemGoogleCategoryDtoListEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/CatalogService/ItemImages": {
    get: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["ItemImageDtoListEnvelope"];
            "application/xml": components["schemas"]["ItemImageDtoListEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    post: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["ItemImageCreateDto"];
          "application/xml": components["schemas"]["ItemImageCreateDto"];
        };
      };
      responses: {
        /** @description Created */
        201: {
          content: {
            "application/json": components["schemas"]["ItemImageDtoEnvelope"];
            "application/xml": components["schemas"]["ItemImageDtoEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/CatalogService/ItemImages/{itemImageId}": {
    get: {
      parameters: {
        query?: {
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          itemImageId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["ItemImageDtoEnvelope"];
            "application/xml": components["schemas"]["ItemImageDtoEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    put: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          itemImageId: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["ItemImageUpdateDto"];
          "application/xml": components["schemas"]["ItemImageUpdateDto"];
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: never;
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    delete: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          itemImageId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: never;
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/CatalogService/ItemQuestions": {
    get: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["ItemQuestionDtoListEnvelope"];
            "application/xml": components["schemas"]["ItemQuestionDtoListEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    post: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["ItemQuestionCreateDto"];
          "application/xml": components["schemas"]["ItemQuestionCreateDto"];
        };
      };
      responses: {
        /** @description Created */
        201: {
          content: {
            "application/json": components["schemas"]["ItemQuestionDtoEnvelope"];
            "application/xml": components["schemas"]["ItemQuestionDtoEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/CatalogService/ItemQuestions/{itemQuestionId}": {
    get: {
      parameters: {
        query?: {
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          itemQuestionId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["ItemQuestionDtoEnvelope"];
            "application/xml": components["schemas"]["ItemQuestionDtoEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    put: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          itemQuestionId: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["ItemQuestionUpdateDto"];
          "application/xml": components["schemas"]["ItemQuestionUpdateDto"];
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: never;
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    delete: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          itemQuestionId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: never;
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/CatalogService/ItemReviews": {
    get: {
      parameters: {
        query: {
          itemId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["ItemReviewDtoListEnvelope"];
            "application/xml": components["schemas"]["ItemReviewDtoListEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    post: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["ItemReviewCreateDto"];
          "application/xml": components["schemas"]["ItemReviewCreateDto"];
        };
      };
      responses: {
        /** @description Created */
        201: {
          content: {
            "application/json": components["schemas"]["ItemReviewDtoEnvelope"];
            "application/xml": components["schemas"]["ItemReviewDtoEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/CatalogService/ItemReviews/{itemReviewId}": {
    get: {
      parameters: {
        query?: {
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          itemReviewId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["ItemReviewDtoEnvelope"];
            "application/xml": components["schemas"]["ItemReviewDtoEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    put: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          itemReviewId: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["ItemReviewUpdateDto"];
          "application/xml": components["schemas"]["ItemReviewUpdateDto"];
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: never;
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    delete: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          itemReviewId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: never;
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/CatalogService/Items": {
    get: {
      parameters: {
        query?: {
          tenantId?: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["CatalogItemDtoListEnvelope"];
            "application/xml": components["schemas"]["CatalogItemDtoListEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    post: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["CatalogItemCreateDto"];
          "application/xml": components["schemas"]["CatalogItemCreateDto"];
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: never;
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/CatalogService/Items/MaxPrice": {
    get: {
      parameters: {
        query?: {
          tenantId?: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["MoneyEnvelope"];
            "application/xml": components["schemas"]["MoneyEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/CatalogService/Items/MinPrice": {
    get: {
      parameters: {
        query?: {
          tenantId?: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["MoneyEnvelope"];
            "application/xml": components["schemas"]["MoneyEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/CatalogService/Items/Count": {
    get: {
      parameters: {
        query?: {
          tenantId?: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["Int32Envelope"];
            "application/xml": components["schemas"]["Int32Envelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/CatalogService/Items/{itemId}": {
    get: operations["GetStockItemByIdAsync"];
    put: operations["UpdateStockItemAsync"];
    delete: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          itemId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: never;
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/CatalogService/Items/{itemId}/Extended": {
    get: {
      parameters: {
        query?: {
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          itemId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["CatalogItemDtoEnvelope"];
            "application/xml": components["schemas"]["CatalogItemDtoEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/CatalogService/Items/{itemId}/Tags": {
    get: {
      parameters: {
        query?: {
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          itemId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["ItemTagDtoListEnvelope"];
            "application/xml": components["schemas"]["ItemTagDtoListEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/CatalogService/Items/{itemId}/Tags/Count": {
    get: {
      parameters: {
        query?: {
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          itemId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["Int32Envelope"];
            "application/xml": components["schemas"]["Int32Envelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/CatalogService/Items/{itemId}/Tags/{itemTagId}": {
    get: {
      parameters: {
        query?: {
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          itemId: string;
          itemTagId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["ItemTagDtoEnvelope"];
            "application/xml": components["schemas"]["ItemTagDtoEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    post: {
      parameters: {
        query?: {
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          itemId: string;
          itemTagId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["ItemTagDtoEnvelope"];
            "application/xml": components["schemas"]["ItemTagDtoEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    delete: {
      parameters: {
        query?: {
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          itemId: string;
          itemTagId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["ItemTagDtoEnvelope"];
            "application/xml": components["schemas"]["ItemTagDtoEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/CatalogService/Items/{itemId}/Types": {
    get: {
      parameters: {
        query?: {
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          itemId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["ItemTypeDtoListEnvelope"];
            "application/xml": components["schemas"]["ItemTypeDtoListEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/CatalogService/Items/{itemId}/Types/{itemTypeId}": {
    get: {
      parameters: {
        query?: {
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          itemId: string;
          itemTypeId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["ItemTypeDtoEnvelope"];
            "application/xml": components["schemas"]["ItemTypeDtoEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    post: {
      parameters: {
        query?: {
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          itemId: string;
          itemTypeId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["ItemTypeDtoEnvelope"];
            "application/xml": components["schemas"]["ItemTypeDtoEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    delete: {
      parameters: {
        query?: {
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          itemId: string;
          itemTypeId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["ItemTypeDtoEnvelope"];
            "application/xml": components["schemas"]["ItemTypeDtoEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/CatalogService/Items/{itemId}/Images/Primary": {
    get: {
      parameters: {
        query?: {
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          itemId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["EmptyEnvelope"];
            "application/xml": components["schemas"]["EmptyEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    post: {
      parameters: {
        query?: {
          tenantId?: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          itemId: string;
        };
      };
      requestBody?: {
        content: {
          "multipart/form-data": {
            /** Format: binary */
            data?: string;
          };
          "application/json": {
            /** Format: binary */
            data?: string;
          };
          "application/xml": {
            /** Format: binary */
            data?: string;
          };
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["EmptyEnvelope"];
            "application/xml": components["schemas"]["EmptyEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/CatalogService/Items/{itemId}/Images": {
    get: {
      parameters: {
        query?: {
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          itemId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["ItemImageDtoListEnvelope"];
            "application/xml": components["schemas"]["ItemImageDtoListEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/CatalogService/Items/{itemId}/Images/{itemImageId}": {
    get: {
      parameters: {
        query?: {
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          itemId: string;
          itemImageId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["ItemImageDtoEnvelope"];
            "application/xml": components["schemas"]["ItemImageDtoEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    post: {
      parameters: {
        query?: {
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          itemId: string;
          itemImageId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["ItemImageDtoEnvelope"];
            "application/xml": components["schemas"]["ItemImageDtoEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    delete: {
      parameters: {
        query?: {
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          itemId: string;
          itemImageId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["ItemImageDtoEnvelope"];
            "application/xml": components["schemas"]["ItemImageDtoEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/CatalogService/Items/{itemId}/Brands": {
    get: {
      parameters: {
        query?: {
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          itemId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["ItemBrandDtoListEnvelope"];
            "application/xml": components["schemas"]["ItemBrandDtoListEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/CatalogService/Items/{itemId}/Brands/{itemBrandId}": {
    get: {
      parameters: {
        query?: {
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          itemId: string;
          itemBrandId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["ItemBrandDtoEnvelope"];
            "application/xml": components["schemas"]["ItemBrandDtoEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    post: {
      parameters: {
        query?: {
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          itemId: string;
          itemBrandId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["ItemBrandDtoEnvelope"];
            "application/xml": components["schemas"]["ItemBrandDtoEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    delete: {
      parameters: {
        query?: {
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          itemId: string;
          itemBrandId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["ItemBrandDtoEnvelope"];
            "application/xml": components["schemas"]["ItemBrandDtoEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/CatalogService/Items/{itemId}/Reviews": {
    get: {
      parameters: {
        query?: {
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          itemId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["ItemReviewDtoListEnvelope"];
            "application/xml": components["schemas"]["ItemReviewDtoListEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    post: {
      parameters: {
        query?: {
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          itemId: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["ItemReviewRecordCreateDto"];
          "application/xml": components["schemas"]["ItemReviewRecordCreateDto"];
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["ItemReviewDtoEnvelope"];
            "application/xml": components["schemas"]["ItemReviewDtoEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/CatalogService/Items/{itemId}/Reviews/{itemReviewId}": {
    get: {
      parameters: {
        query?: {
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          itemId: string;
          itemReviewId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["ItemReviewDtoEnvelope"];
            "application/xml": components["schemas"]["ItemReviewDtoEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    delete: {
      parameters: {
        query?: {
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          itemId: string;
          itemReviewId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["ItemReviewDtoEnvelope"];
            "application/xml": components["schemas"]["ItemReviewDtoEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/CatalogService/Items/{itemId}/Questions": {
    get: {
      parameters: {
        query?: {
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          itemId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["ItemQuestionDtoListEnvelope"];
            "application/xml": components["schemas"]["ItemQuestionDtoListEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    post: {
      parameters: {
        query?: {
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          itemId: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["ItemQuestionRecordCreateDto"];
          "application/xml": components["schemas"]["ItemQuestionRecordCreateDto"];
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["ItemQuestionDtoEnvelope"];
            "application/xml": components["schemas"]["ItemQuestionDtoEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/CatalogService/Items/{itemId}/Questions/{itemQuestionId}": {
    get: {
      parameters: {
        query?: {
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          itemId: string;
          itemQuestionId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["ItemQuestionDtoEnvelope"];
            "application/xml": components["schemas"]["ItemQuestionDtoEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    delete: {
      parameters: {
        query?: {
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          itemId: string;
          itemQuestionId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["ItemQuestionDtoEnvelope"];
            "application/xml": components["schemas"]["ItemQuestionDtoEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/CatalogService/Items/{itemId}/Categories": {
    get: {
      parameters: {
        query?: {
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          itemId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["ItemCategoryDtoListEnvelope"];
            "application/xml": components["schemas"]["ItemCategoryDtoListEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/CatalogService/Items/{itemId}/Categories/{itemCategoryId}": {
    get: {
      parameters: {
        query?: {
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          itemId: string;
          itemCategoryId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["ItemCategoryDtoEnvelope"];
            "application/xml": components["schemas"]["ItemCategoryDtoEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    post: {
      parameters: {
        query?: {
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          itemId: string;
          itemCategoryId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["ItemCategoryDtoEnvelope"];
            "application/xml": components["schemas"]["ItemCategoryDtoEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    delete: {
      parameters: {
        query?: {
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          itemId: string;
          itemCategoryId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["ItemCategoryDtoEnvelope"];
            "application/xml": components["schemas"]["ItemCategoryDtoEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/CatalogService/Items/{itemId}/Attachments": {
    get: {
      parameters: {
        query?: {
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          itemId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["ItemAttachmentDtoListEnvelope"];
            "application/xml": components["schemas"]["ItemAttachmentDtoListEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/CatalogService/Items/{itemId}/Attachments/{itemAttachmentId}": {
    get: {
      parameters: {
        query?: {
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          itemId: string;
          itemAttachmentId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["ItemAttachmentDtoEnvelope"];
            "application/xml": components["schemas"]["ItemAttachmentDtoEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    post: {
      parameters: {
        query?: {
          notes?: string;
          title?: string;
          author?: string;
          isFolder?: boolean;
          fileName?: string;
          abstract?: string;
          keyWords?: string;
          validResponse?: boolean;
          parentFileUploadId?: string;
          filePath?: string;
          iD?: string;
          timestamp?: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          itemID: string;
          itemAttachmentId: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": {
            /** Format: binary */
            file?: string;
          };
          "application/xml": {
            /** Format: binary */
            file?: string;
          };
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["ItemAttachmentDtoEnvelope"];
            "application/xml": components["schemas"]["ItemAttachmentDtoEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    delete: {
      parameters: {
        query?: {
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          itemId: string;
          itemAttachmentId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["ItemAttachmentDtoEnvelope"];
            "application/xml": components["schemas"]["ItemAttachmentDtoEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/CatalogService/Items/{itemId}/TaxPolicies": {
    get: {
      parameters: {
        query?: {
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          itemId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["ItemTaxPolicyDtoListEnvelope"];
            "application/xml": components["schemas"]["ItemTaxPolicyDtoListEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/CatalogService/Items/{itemId}/TaxPolicies/{itemTaxPolicyId}": {
    get: {
      parameters: {
        query?: {
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          itemId: string;
          itemTaxPolicyId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["ItemTaxPolicyDtoEnvelope"];
            "application/xml": components["schemas"]["ItemTaxPolicyDtoEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    post: {
      parameters: {
        query?: {
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          itemId: string;
          itemTaxPolicyId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["ItemTaxPolicyDtoEnvelope"];
            "application/xml": components["schemas"]["ItemTaxPolicyDtoEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    delete: {
      parameters: {
        query?: {
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          itemId: string;
          itemTaxPolicyId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["ItemTaxPolicyDtoEnvelope"];
            "application/xml": components["schemas"]["ItemTaxPolicyDtoEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/CatalogService/Items/{itemId}/PriceRules": {
    get: {
      parameters: {
        query?: {
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          itemId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["PricingRuleDtoListEnvelope"];
            "application/xml": components["schemas"]["PricingRuleDtoListEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/CatalogService/Items/{itemId}/PriceRules/{itemPriceRuleId}": {
    get: {
      parameters: {
        query?: {
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          itemId: string;
          itemPriceRuleId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["PricingRuleDtoEnvelope"];
            "application/xml": components["schemas"]["PricingRuleDtoEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    post: {
      parameters: {
        query?: {
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          itemId: string;
          itemPriceRuleId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["PricingRuleDtoEnvelope"];
            "application/xml": components["schemas"]["PricingRuleDtoEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    delete: {
      parameters: {
        query?: {
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          itemId: string;
          itemPriceRuleId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["PricingRuleDtoEnvelope"];
            "application/xml": components["schemas"]["PricingRuleDtoEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/CatalogService/Items/{itemId}/ReturnPolicies": {
    get: {
      parameters: {
        query?: {
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          itemId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["ItemReturnPolicyDtoListEnvelope"];
            "application/xml": components["schemas"]["ItemReturnPolicyDtoListEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/CatalogService/Items/{itemId}/ReturnPolicies/{itemReturnPolicyId}": {
    get: {
      parameters: {
        query?: {
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          itemId: string;
          itemReturnPolicyId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["ItemReturnPolicyDtoEnvelope"];
            "application/xml": components["schemas"]["ItemReturnPolicyDtoEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    post: {
      parameters: {
        query?: {
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          itemId: string;
          itemReturnPolicyId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["ItemReturnPolicyDtoEnvelope"];
            "application/xml": components["schemas"]["ItemReturnPolicyDtoEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    delete: {
      parameters: {
        query?: {
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          itemId: string;
          itemReturnPolicyId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["ItemReturnPolicyDtoEnvelope"];
            "application/xml": components["schemas"]["ItemReturnPolicyDtoEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/CatalogService/Items/{itemId}/RefundPolicies": {
    get: {
      parameters: {
        query?: {
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          itemId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["ItemRefundPolicyDtoListEnvelope"];
            "application/xml": components["schemas"]["ItemRefundPolicyDtoListEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/CatalogService/Items/{itemId}/RefundPolicies/{itemRefundPolicyId}": {
    get: {
      parameters: {
        query?: {
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          itemId: string;
          itemRefundPolicyId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["ItemRefundPolicyDtoEnvelope"];
            "application/xml": components["schemas"]["ItemRefundPolicyDtoEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    post: {
      parameters: {
        query?: {
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          itemId: string;
          itemRefundPolicyId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["ItemRefundPolicyDtoEnvelope"];
            "application/xml": components["schemas"]["ItemRefundPolicyDtoEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    delete: {
      parameters: {
        query?: {
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          itemId: string;
          itemRefundPolicyId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["ItemRefundPolicyDtoEnvelope"];
            "application/xml": components["schemas"]["ItemRefundPolicyDtoEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/CatalogService/Items/{itemId}/ShippingPolicies": {
    get: {
      parameters: {
        query?: {
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          itemId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["ItemShippingPolicyDtoListEnvelope"];
            "application/xml": components["schemas"]["ItemShippingPolicyDtoListEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/CatalogService/Items/{itemId}/ShippingPolicies/{itemShippingPolicyId}": {
    get: {
      parameters: {
        query?: {
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          itemId: string;
          itemShippingPolicyId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["ItemShippingPolicyDtoEnvelope"];
            "application/xml": components["schemas"]["ItemShippingPolicyDtoEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    post: {
      parameters: {
        query?: {
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          itemId: string;
          itemShippingPolicyId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["ItemShippingPolicyDtoEnvelope"];
            "application/xml": components["schemas"]["ItemShippingPolicyDtoEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    delete: {
      parameters: {
        query?: {
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          itemId: string;
          itemShippingPolicyId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["ItemShippingPolicyDtoEnvelope"];
            "application/xml": components["schemas"]["ItemShippingPolicyDtoEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/CatalogService/Items/{itemId}/WarrantyPolicies": {
    get: {
      parameters: {
        query?: {
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          itemId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["ItemWarrantyPolicyDtoListEnvelope"];
            "application/xml": components["schemas"]["ItemWarrantyPolicyDtoListEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/CatalogService/Items/{itemId}/WarrantyPolicies/{itemWarrantyPolicyId}": {
    get: {
      parameters: {
        query?: {
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          itemId: string;
          itemWarrantyPolicyId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["ItemWarrantyPolicyDtoEnvelope"];
            "application/xml": components["schemas"]["ItemWarrantyPolicyDtoEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    post: {
      parameters: {
        query?: {
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          itemId: string;
          itemWarrantyPolicyId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["ItemWarrantyPolicyDtoEnvelope"];
            "application/xml": components["schemas"]["ItemWarrantyPolicyDtoEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    delete: {
      parameters: {
        query?: {
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          itemId: string;
          itemWarrantyPolicyId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["ItemWarrantyPolicyDtoEnvelope"];
            "application/xml": components["schemas"]["ItemWarrantyPolicyDtoEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/CatalogService/Items/{itemId}/AttributeOptions": {
    get: {
      parameters: {
        query?: {
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          itemId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["ItemAttributeOptionDtoListEnvelope"];
            "application/xml": components["schemas"]["ItemAttributeOptionDtoListEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/CatalogService/Items/{itemId}/AttributeOptions/{itemAttributeOptionId}": {
    get: {
      parameters: {
        query?: {
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          itemId: string;
          itemAttributeOptionId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["ItemAttributeOptionDtoEnvelope"];
            "application/xml": components["schemas"]["ItemAttributeOptionDtoEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    post: {
      parameters: {
        query?: {
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          itemId: string;
          itemAttributeOptionId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["ItemAttributeOptionDtoEnvelope"];
            "application/xml": components["schemas"]["ItemAttributeOptionDtoEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    delete: {
      parameters: {
        query?: {
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          itemId: string;
          itemAttributeOptionId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["ItemAttributeOptionDtoEnvelope"];
            "application/xml": components["schemas"]["ItemAttributeOptionDtoEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/CatalogService/Items/{itemId}/GoogleCategories": {
    get: {
      parameters: {
        query?: {
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          itemId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["ItemGoogleCategoryDtoListEnvelope"];
            "application/xml": components["schemas"]["ItemGoogleCategoryDtoListEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/CatalogService/Items/{itemId}/GoogleCategories/{itemGoogleCategoryId}": {
    get: {
      parameters: {
        query?: {
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          itemId: string;
          itemGoogleCategoryId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["ItemGoogleCategoryDtoEnvelope"];
            "application/xml": components["schemas"]["ItemGoogleCategoryDtoEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    post: {
      parameters: {
        query?: {
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          itemId: string;
          itemGoogleCategoryId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["ItemGoogleCategoryDtoEnvelope"];
            "application/xml": components["schemas"]["ItemGoogleCategoryDtoEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    delete: {
      parameters: {
        query?: {
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          itemId: string;
          itemGoogleCategoryId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["ItemGoogleCategoryDtoEnvelope"];
            "application/xml": components["schemas"]["ItemGoogleCategoryDtoEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/CatalogService/ItemTags": {
    get: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["ItemTagDtoListEnvelope"];
            "application/xml": components["schemas"]["ItemTagDtoListEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    post: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["ItemTagCreateDto"];
          "application/xml": components["schemas"]["ItemTagCreateDto"];
        };
      };
      responses: {
        /** @description Created */
        201: {
          content: {
            "application/json": components["schemas"]["ItemTagDtoEnvelope"];
            "application/xml": components["schemas"]["ItemTagDtoEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/CatalogService/ItemTags/{itemTagId}": {
    get: {
      parameters: {
        query?: {
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          itemTagId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["ItemTagDtoEnvelope"];
            "application/xml": components["schemas"]["ItemTagDtoEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    put: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          itemTagId: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["ItemTagUpdateDto"];
          "application/xml": components["schemas"]["ItemTagUpdateDto"];
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: never;
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    delete: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          itemTagId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: never;
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/CatalogService/ItemTypes": {
    get: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["ItemTypeDtoListEnvelope"];
            "application/xml": components["schemas"]["ItemTypeDtoListEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    post: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["ItemTypeCreateDto"];
          "application/xml": components["schemas"]["ItemTypeCreateDto"];
        };
      };
      responses: {
        /** @description Created */
        201: {
          content: {
            "application/json": components["schemas"]["ItemTypeDtoEnvelope"];
            "application/xml": components["schemas"]["ItemTypeDtoEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/CatalogService/ItemTypes/{itemTypeID}": {
    get: {
      parameters: {
        query?: {
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          itemTypeID: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["ItemTypeDtoEnvelope"];
            "application/xml": components["schemas"]["ItemTypeDtoEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    put: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          itemTypeID: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["ItemTypeUpdateDto"];
          "application/xml": components["schemas"]["ItemTypeUpdateDto"];
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: never;
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    delete: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          itemTypeID: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["ItemTypeDtoEnvelope"];
            "application/xml": components["schemas"]["ItemTypeDtoEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/CatalogService/Merchants": {
    get: {
      parameters: {
        query?: {
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["MerchantDtoListEnvelope"];
            "application/xml": components["schemas"]["MerchantDtoListEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/CatalogService/Merchants/Count": {
    get: {
      parameters: {
        query?: {
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["Int32Envelope"];
            "application/xml": components["schemas"]["Int32Envelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/CatalogService/Merchants/{merchantId}": {
    get: {
      parameters: {
        query?: {
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          merchantId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["MerchantDtoEnvelope"];
            "application/xml": components["schemas"]["MerchantDtoEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/CatalogService/Policies/ItemReturnPolicies": {
    get: {
      parameters: {
        query?: {
          itemId?: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["ItemReturnPolicyDtoListEnvelope"];
            "application/xml": components["schemas"]["ItemReturnPolicyDtoListEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/CatalogService/Policies/ItemTaxPolicies": {
    get: {
      parameters: {
        query?: {
          itemId?: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["ItemTaxPolicyDtoListEnvelope"];
            "application/xml": components["schemas"]["ItemTaxPolicyDtoListEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/CatalogService/Policies/ItemWarrantyPolicies": {
    get: {
      parameters: {
        query?: {
          itemId?: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["ItemWarrantyPolicyDtoListEnvelope"];
            "application/xml": components["schemas"]["ItemWarrantyPolicyDtoListEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/CatalogService/Policies/ItemShippingPolicies": {
    get: {
      parameters: {
        query?: {
          itemId?: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["ItemShippingPolicyDtoListEnvelope"];
            "application/xml": components["schemas"]["ItemShippingPolicyDtoListEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/CatalogService/PricingRules": {
    get: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["PricingRuleDtoListEnvelope"];
            "application/xml": components["schemas"]["PricingRuleDtoListEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    post: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["PricingRuleCreateDto"];
          "application/xml": components["schemas"]["PricingRuleCreateDto"];
        };
      };
      responses: {
        /** @description Created */
        201: {
          content: {
            "application/json": components["schemas"]["PricingRuleDtoEnvelope"];
            "application/xml": components["schemas"]["PricingRuleDtoEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/CatalogService/PricingRules/{pricingRuleId}": {
    get: {
      parameters: {
        query?: {
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          pricingRuleId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["PricingRuleDtoEnvelope"];
            "application/xml": components["schemas"]["PricingRuleDtoEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    delete: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          pricingRuleId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: never;
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/CatalogService/PricingRules/Update": {
    put: {
      parameters: {
        query: {
          tenantId: string;
          pricingRuleId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["PricingRuleUpdateDto"];
          "application/xml": components["schemas"]["PricingRuleUpdateDto"];
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: never;
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: {
    CatalogItemCreateDto: {
      /** Format: uuid */
      id?: string;
      /** Format: date-time */
      timestamp?: string;
      sku?: string | null;
      upc?: string | null;
      ean?: string | null;
      mpn?: string | null;
      isbn?: string | null;
      asin?: string | null;
      gtin?: string | null;
      skUs?: string | null;
      upCs?: string | null;
      eaNs?: string | null;
      part?: string | null;
      name?: string | null;
      type?: string | null;
      mpNs?: string | null;
      isbNs?: string | null;
      asiNs?: string | null;
      gtiNs?: string | null;
      model?: string | null;
      title?: string | null;
      color?: string | null;
      unspsc?: string | null;
      unitId?: string | null;
      series?: string | null;
      barcode?: string | null;
      unspsCs?: string | null;
      summary?: string | null;
      brandId?: string | null;
      pattern?: string | null;
      features?: string | null;
      material?: string | null;
      tenantId?: string | null;
      permalink?: string | null;
      brandName?: string | null;
      variations?: string | null;
      categories?: string | null;
      languageId?: string | null;
      itemTypeId?: string | null;
      categoryId?: string | null;
      currencyId?: string | null;
      unitGroupId?: string | null;
      description?: string | null;
      ingredients?: string | null;
      supplierCode?: string | null;
      shipsToRules?: string | null;
      parentItemId?: string | null;
      purchaseNote?: string | null;
      tariffHeading?: string | null;
      mozaicCoverURL?: string | null;
      youtubeVideoId?: string | null;
      nutritionFacts?: string | null;
      packageContent?: string | null;
      primaryImageUrl?: string | null;
      googleCategories?: string | null;
      shortDescription?: string | null;
      supplierProfileId?: string | null;
      shippingCountryId?: string | null;
      systemRequirements?: string | null;
      customTaxDescription?: string | null;
      pageCoverBackgroundUrl?: string | null;
      officialDescriptionUrl?: string | null;
      recentlyViewedRecordId?: string | null;
      primaryGoogleCategoryId?: string | null;
      supportedOperatingSystem?: string | null;
      primaryGoogleCategoryName?: string | null;
      hot?: boolean;
      onSale?: boolean;
      auction?: boolean;
      deleted?: boolean;
      digital?: boolean;
      preSale?: boolean;
      taxable?: boolean;
      inStock?: boolean;
      trending?: boolean;
      featured?: boolean;
      lowStock?: boolean;
      published?: boolean;
      byRequest?: boolean;
      onDiscount?: boolean;
      isDailyDeal?: boolean;
      isNewArrival?: boolean;
      isWeeklyDeal?: boolean;
      isBestSeller?: boolean;
      isMonthlyDeal?: boolean;
      hasVariations?: boolean;
      isFixedDiscount?: boolean;
      manageInventory?: boolean;
      isDealersChoice?: boolean;
      isOfficialChoice?: boolean;
      validPrimaryImage?: boolean;
      isDeadlineDiscount?: boolean;
      taxIncludedInPrice?: boolean;
      displayShowcaseTab?: boolean;
      isProductOfTheWeek?: boolean;
      isProductOfTheMonth?: boolean;
      isPercentageDiscount?: boolean;
      displayOnGlobalMozaic?: boolean;
      displayOnBrandsMozaic?: boolean;
      disableDefaultPolicies?: boolean;
      displayOnCategoryMozaic?: boolean;
      displayDescriptionEditor?: boolean;
      displayShortDescriptionEditor?: boolean;
      displayOnBannerMarketingRotation?: boolean;
      /** Format: int32 */
      viewsCount?: number;
      /** Format: int32 */
      reviewsCount?: number;
      /** Format: int32 */
      packagedQuantity?: number;
      /** Format: double */
      recurrency?: number;
      /** Format: double */
      currentStock?: number;
      /** Format: double */
      customTaxValue?: number;
      /** Format: double */
      width?: number;
      /** Format: double */
      weight?: number;
      /** Format: double */
      length?: number;
      /** Format: double */
      height?: number;
      /** Format: double */
      totalTax?: number;
      /** Format: double */
      finalPrice?: number;
      /** Format: double */
      reviewsAvg?: number;
      /** Format: double */
      paymentCost?: number;
      /** Format: double */
      regularPrice?: number;
      /** Format: double */
      discountPrice?: number;
      /** Format: double */
      discountAmount?: number;
      /** Format: double */
      discountPercentage?: number;
      /** Format: double */
      estimatedTaxesInUsd?: number;
      /** Format: double */
      customTaxPercentage?: number;
      /** Format: double */
      estimatedProfitInUsd?: number;
      /** Format: double */
      estimatedBasePriceInUsd?: number;
      /** Format: double */
      estimatedDiscountsInUsd?: number;
      /** Format: double */
      estimatedSurchargesInUsd?: number;
      /** Format: double */
      estimatedPaymentTaxInUsd?: number;
      /** Format: double */
      estimatedTotalPriceInUsd?: number;
      /** Format: double */
      estimatedPaymentCostInUsd?: number;
      /** Format: double */
      estimatedDealSavingsInUsd?: number;
      /** Format: double */
      estimatedRegularPriceInUsd?: number;
      /** Format: double */
      estimatedTaxBasePriceInUsd?: number;
      /** Format: double */
      estimatedWitholdingTaxesInUsd?: number;
      /** Format: double */
      estimatedWithholdingTaxesInUsd?: number;
      /** Format: double */
      estimatedDefaultShippingTaxInUsd?: number;
      /** Format: double */
      estimatedDefaultShippingCostInUsd?: number;
      /** Format: date-time */
      auctionEnd?: string | null;
      /** Format: date-time */
      releaseDate?: string | null;
      /** Format: date-time */
      auctionStart?: string | null;
      /** Format: date-time */
      publishedDate?: string | null;
      /** Format: date-time */
      discountDeadLine?: string | null;
      /** Format: date-time */
      deadlineDiscountDueDate?: string | null;
      /** Format: date-time */
      deadlineDiscountFromDate?: string | null;
      /** Format: date-time */
      lastFixedPricesUpdateDateTime?: string | null;
      selectedTags?: string[] | null;
      selectedTypes?: string[] | null;
      selectedBrands?: string[] | null;
      selectedCategories?: string[] | null;
      selectedTaxPolicies?: string[] | null;
      selectedPricingRules?: string[] | null;
      selectedRefundPolicies?: string[] | null;
      selectedReturnPolicies?: string[] | null;
      selectedPricingPolicies?: string[] | null;
      selectedWarrantyPolicies?: string[] | null;
      selectedShipmentPolicies?: string[] | null;
      selectedGoogleCategories?: string[] | null;
      selectedAttributesOptions?: string[] | null;
      selectedSellingMarginPolicies?: string[] | null;
    };
    CatalogItemDto: {
      id?: string | null;
      /** Format: date-time */
      timestamp?: string | null;
      sku?: string | null;
      upc?: string | null;
      ean?: string | null;
      mpn?: string | null;
      skUs?: string | null;
      isbn?: string | null;
      upCs?: string | null;
      eaNs?: string | null;
      asin?: string | null;
      gtin?: string | null;
      mpNs?: string | null;
      part?: string | null;
      name?: string | null;
      isbNs?: string | null;
      asiNs?: string | null;
      gtiNs?: string | null;
      model?: string | null;
      title?: string | null;
      color?: string | null;
      isbN13?: string | null;
      unspsc?: string | null;
      unitId?: string | null;
      series?: string | null;
      barcode?: string | null;
      unspsCs?: string | null;
      pattern?: string | null;
      summary?: string | null;
      brandId?: string | null;
      features?: string | null;
      material?: string | null;
      tenantId?: string | null;
      permalink?: string | null;
      brandName?: string | null;
      languageId?: string | null;
      itemTypeId?: string | null;
      categoryId?: string | null;
      currencyId?: string | null;
      unitGroupId?: string | null;
      description?: string | null;
      ingredients?: string | null;
      releaseDate?: string | null;
      enrollmentId?: string | null;
      supplierCode?: string | null;
      shipsToRules?: string | null;
      purchaseNote?: string | null;
      parentItemId?: string | null;
      itemTypeName?: string | null;
      discriminator?: string | null;
      tariffHeading?: string | null;
      nutritionFacts?: string | null;
      mozaicCoverUrl?: string | null;
      packageContent?: string | null;
      youtubeVideoId?: string | null;
      primaryImageUrl?: string | null;
      longDescription?: string | null;
      measurementUnit?: string | null;
      shortDescription?: string | null;
      googleCategories?: string | null;
      supplierProfileId?: string | null;
      shippingCountryId?: string | null;
      systemRequirements?: string | null;
      customTaxDescription?: string | null;
      officialDescriptionUrl?: string | null;
      energyEfficiencyRating?: string | null;
      pageCoverBackgroundUrl?: string | null;
      primaryGoogleCategoryId?: string | null;
      operatingSystemSupported?: string | null;
      supportedOperatingSystem?: string | null;
      primaryGoogleCategoryName?: string | null;
      hot?: boolean;
      onSale?: boolean;
      auction?: boolean;
      deleted?: boolean;
      digital?: boolean;
      preSale?: boolean;
      taxable?: boolean;
      inStock?: boolean;
      featured?: boolean;
      trending?: boolean;
      lowStock?: boolean;
      published?: boolean;
      byRequest?: boolean;
      onDiscount?: boolean;
      isDailyDeal?: boolean;
      isNewArrival?: boolean;
      isWeeklyDeal?: boolean;
      isBestSeller?: boolean;
      isMonthlyDeal?: boolean;
      hasVariations?: boolean;
      isFixedDiscount?: boolean;
      isDealersChoice?: boolean;
      manageInventory?: boolean;
      isOfficialChoice?: boolean;
      validPrimaryImage?: boolean;
      isDeadlineDiscount?: boolean;
      displayShowcaseTab?: boolean;
      taxIncludedInPrice?: boolean;
      isProductOfTheWeek?: boolean;
      isProductOfTheMonth?: boolean;
      isPercentageDiscount?: boolean;
      displayOnGlobalMozaic?: boolean;
      displayOnBrandsMozaic?: boolean;
      disableDefaultPolicies?: boolean;
      displayOnCategoryMozaic?: boolean;
      displayDescriptionEditor?: boolean;
      displayShortDescriptionEditor?: boolean;
      displayOnBannerMarketingRotation?: boolean;
      /** Format: date-time */
      auctionEnd?: string | null;
      /** Format: date-time */
      auctionStart?: string | null;
      /** Format: date-time */
      publishedDate?: string | null;
      /** Format: date-time */
      deadlineDiscountFromDate?: string | null;
      /** Format: date-time */
      deadlineDiscountDueDate?: string | null;
      /** Format: date-time */
      lastFixedPricesUpdateDateTime?: string | null;
      images?: string[] | null;
      /** Format: int32 */
      viewsCount?: number;
      /** Format: int32 */
      reviewsCount?: number;
      /** Format: int32 */
      questionsCount?: number;
      /** Format: int32 */
      packagedQuantity?: number;
      /** Format: double */
      reviewsAvg?: number | null;
      /** Format: double */
      recurrency?: number;
      /** Format: double */
      currentStock?: number;
      /** Format: double */
      width?: number | null;
      /** Format: double */
      weight?: number | null;
      /** Format: double */
      length?: number | null;
      /** Format: double */
      height?: number | null;
      /** Format: double */
      regularPrice?: number | null;
      /** Format: double */
      discountPrice?: number | null;
      /** Format: double */
      customTaxValue?: number | null;
      /** Format: double */
      discountAmount?: number | null;
      /** Format: double */
      inCartQuantity?: number | null;
      /** Format: double */
      customTaxAmount?: number | null;
      /** Format: double */
      discountPercentage?: number | null;
      /** Format: double */
      customTaxPercentage?: number | null;
      /** Format: double */
      estimatedTaxesInUsd?: number | null;
      /** Format: double */
      estimatedProfitInUsd?: number | null;
      /** Format: double */
      estimatedBasePriceInUsd?: number | null;
      /** Format: double */
      estimatedDiscountsInUsd?: number | null;
      /** Format: double */
      estimatedSurchargesInUsd?: number | null;
      /** Format: double */
      estimatedPaymentTaxInUsd?: number | null;
      /** Format: double */
      estimatedTotalPriceInUsd?: number | null;
      /** Format: double */
      estimatedPaymentCostInUsd?: number | null;
      /** Format: double */
      estimatedDealSavingsInUsd?: number | null;
      /** Format: double */
      estimatedRegularPriceInUsd?: number | null;
      /** Format: double */
      estimatedTaxBasePriceInUsd?: number | null;
      /** Format: double */
      estimatedWithholdingTaxesInUsd?: number | null;
      /** Format: double */
      estimatedDefaultShippingTaxInUsd?: number | null;
      /** Format: double */
      estimatedDefaultShippingCostInUsd?: number | null;
      selectedTags?: string[] | null;
      selectedTypes?: string[] | null;
      selectedBrands?: string[] | null;
      selectedCategories?: string[] | null;
      selectedTaxPolicies?: string[] | null;
      selectedPricingRules?: string[] | null;
      selectedRefundPolicies?: string[] | null;
      selectedReturnPolicies?: string[] | null;
      selectedPricingPolicies?: string[] | null;
      selectedGoogleCategories?: string[] | null;
      selectedWarrantyPolicies?: string[] | null;
      selectedShipmentPolicies?: string[] | null;
      selectedAttributesOptions?: string[] | null;
      selectedSellingMarginPolicies?: string[] | null;
    };
    CatalogItemDtoEnvelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
      result?: components["schemas"]["CatalogItemDto"];
    };
    CatalogItemDtoListEnvelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
      result?: components["schemas"]["CatalogItemDto"][] | null;
    };
    CatalogItemUpdateDto: {
      hot?: boolean;
      sku?: string | null;
      upc?: string | null;
      ean?: string | null;
      mpn?: string | null;
      skUs?: string | null;
      isbn?: string | null;
      upCs?: string | null;
      eaNs?: string | null;
      asin?: string | null;
      gtin?: string | null;
      mpNs?: string | null;
      part?: string | null;
      name?: string | null;
      onSale?: boolean;
      isbNs?: string | null;
      asiNs?: string | null;
      gtiNs?: string | null;
      /** Format: double */
      width?: number;
      model?: string | null;
      auction?: boolean;
      title?: string | null;
      color?: string | null;
      deleted?: boolean;
      digital?: boolean;
      preSale?: boolean;
      taxable?: boolean;
      inStock?: boolean;
      isbN13?: string | null;
      unspsc?: string | null;
      /** Format: double */
      weight?: number;
      /** Format: double */
      length?: number;
      /** Format: double */
      height?: number;
      unitId?: string | null;
      series?: string | null;
      featured?: boolean;
      brands?: string | null;
      trending?: boolean;
      lowStock?: boolean;
      barcode?: string | null;
      unspsCs?: string | null;
      pattern?: string | null;
      published?: boolean;
      byRequest?: boolean;
      summary?: string | null;
      brandId?: string | null;
      /** Format: int32 */
      viewsCount?: number;
      features?: string | null;
      material?: string | null;
      onDiscount?: boolean;
      /** Format: double */
      totalTax?: number;
      tenantId?: string | null;
      permalink?: string | null;
      brandName?: string | null;
      /** Format: int32 */
      reviewsCount?: number;
      isDailyDeal?: boolean;
      languageId?: string | null;
      categories?: string | null;
      /** Format: double */
      finalPrice?: number;
      itemTypeId?: string | null;
      categoryId?: string | null;
      currencyId?: string | null;
      /** Format: double */
      reviewsAvg?: number;
      isNewArrival?: boolean;
      isWeeklyDeal?: boolean;
      isBestSeller?: boolean;
      unitGroupId?: string | null;
      description?: string | null;
      ingredients?: string | null;
      releaseDate?: string | null;
      isMonthlyDeal?: boolean;
      /** Format: double */
      recurrency?: number;
      /** Format: double */
      paymentCost?: number;
      /** Format: double */
      customTaxValue?: number;
      hasVariations?: boolean;
      /** Format: int32 */
      questionsCount?: number;
      enrollmentId?: string | null;
      supplierCode?: string | null;
      /** Format: date-time */
      auctionEnd?: string;
      purchaseNote?: string | null;
      shipsToRules?: string | null;
      /** Format: double */
      regularPrice?: number;
      images?: string[] | null;
      /** Format: double */
      shippingCost?: number;
      parentItemId?: string | null;
      itemTypeName?: string | null;
      cartRecordId?: string | null;
      variations?: string[] | null;
      tariffHeading?: string | null;
      /** Format: int32 */
      packagedQuantity?: number;
      isFixedDiscount?: boolean;
      /** Format: double */
      discountPrice?: number;
      isDealersChoice?: boolean;
      /** Format: double */
      currentStock?: number;
      manageInventory?: boolean;
      /** Format: date-time */
      auctionStart?: string;
      nutritionFacts?: string | null;
      mozaicCoverUrl?: string | null;
      packageContent?: string | null;
      /** Format: double */
      discountAmount?: number;
      youtubeVideoId?: string | null;
      /** Format: double */
      inCartQuantity?: number;
      isOfficialChoice?: boolean;
      /** Format: date-time */
      publishedDate?: string;
      primaryImageUrl?: string | null;
      validPrimaryImage?: boolean;
      /** Format: double */
      customTaxAmount?: number;
      longDescription?: string | null;
      compareRecordId?: string | null;
      measurementUnit?: string | null;
      shortDescription?: string | null;
      googleCategories?: string | null;
      isDeadlineDiscount?: boolean;
      displayShowcaseTab?: boolean;
      taxIncludedInPrice?: boolean;
      isProductOfTheWeek?: boolean;
      supplierProfileId?: string | null;
      shippingCountryId?: string | null;
      isProductOfTheMonth?: boolean;
      systemRequirements?: string | null;
      isPorcentualDiscount?: boolean;
      /** Format: double */
      discountPercentage?: number;
      /** Format: date-time */
      discountDeadLine?: string;
      displayOnGlobalMozaic?: boolean;
      displayOnBrandsMozaic?: boolean;
      /** Format: double */
      customTaxPercentage?: number;
      /** Format: double */
      estimatedTaxesInUsd?: number;
      customTaxDescription?: string | null;
      disableDefaultPolicies?: boolean;
      /** Format: double */
      estimatedProfitInUsd?: number;
      displayOnCategoryMozaic?: boolean;
      officialDescriptionUrl?: string | null;
      energyEfficiencyRating?: string | null;
      pageCoverBackgroundUrl?: string | null;
      /** Format: double */
      estimatedBasePriceInUsd?: number;
      /** Format: double */
      estimatedDiscountsInUsd?: number;
      operatingSystemSupported?: string | null;
      /** Format: double */
      estimatedSurchargesInUsd?: number;
      /** Format: date-time */
      deadlineDiscountDueDate?: string | null;
      /** Format: date-time */
      deadlineDiscountFromDate?: string | null;
      /** Format: double */
      estimatedRegularPriceInUsd?: number;
      /** Format: double */
      estimatedTaxBasePriceInUsd?: number;
      displayOnBannerMarketingRotation?: boolean;
      /** Format: date-time */
      lastFixedPricesUpdateDateTime?: string | null;
      /** Format: double */
      estimatedWitholdingTaxesInUsd?: number;
      /** Format: double */
      estimatedPaymentCostInUsd?: number;
      /** Format: double */
      estimatedPaymentTaxInUsd?: number;
      /** Format: double */
      estimatedDefaultShippingCostInUsd?: number;
      /** Format: double */
      estimatedDefaultShippingTaxInUsd?: number;
      /** Format: double */
      estimatedTotalPriceInUsd?: number;
      recentlyViewedRecordId?: string | null;
      displayDescriptionEditor?: boolean;
      primaryGoogleCategoryId?: string | null;
      supportedOperatingSystem?: string | null;
      /** Format: double */
      estimatedDealSavingsInUsd?: number;
      primaryGoogleCategoryName?: string | null;
      displayShortDescriptionEditor?: boolean;
      /** Format: double */
      estimatedWithholdingTaxesInUsd?: number;
      selectedTags?: string[] | null;
      selectedTypes?: string[] | null;
      selectedBrands?: string[] | null;
      selectedCategories?: string[] | null;
      selectedTaxPolicies?: string[] | null;
      selectedPricingRules?: string[] | null;
      selectedRefundPolicies?: string[] | null;
      selectedReturnPolicies?: string[] | null;
      selectedPricingPolicies?: string[] | null;
      selectedGoogleCategories?: string[] | null;
      selectedWarrantyPolicies?: string[] | null;
      selectedShipmentPolicies?: string[] | null;
      selectedAttributesOptions?: string[] | null;
      selectedSellingMarginPolicies?: string[] | null;
    };
    Currency: {
      code?: string | null;
      country?: string | null;
    };
    EmptyEnvelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
    };
    ErrorEnvelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
    };
    Int32Envelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
      /** Format: int32 */
      result?: number;
    };
    ItemAttachmentCreateDto: {
      /** Format: uuid */
      id?: string;
      /** Format: date-time */
      timestamp?: string;
      notes?: string | null;
      title?: string | null;
      author?: string | null;
      isFolder?: boolean;
      fileName?: string | null;
      abstract?: string | null;
      keyWords?: string | null;
      validResponse?: boolean;
      parentFileUploadId?: string | null;
      filePath?: string | null;
      /** Format: binary */
      file?: string | null;
      itemID?: string | null;
    };
    ItemAttachmentDto: {
      id?: string | null;
      /** Format: date-time */
      timestamp?: string | null;
      notes?: string | null;
      title?: string | null;
      author?: string | null;
      isFolder?: boolean;
      hash?: string | null;
      fileUrl?: string | null;
      filePath?: string | null;
      fileName?: string | null;
      abstract?: string | null;
      keyWords?: string | null;
      metadata?: string | null;
      /** Format: int64 */
      fileLength?: number;
      contentType?: string | null;
      parentFileId?: string | null;
      validResponse?: boolean;
      userId?: string | null;
      tenantId?: string | null;
      enrollmentId?: string | null;
      socialProfileId?: string | null;
      folderPath?: string | null;
      itemID?: string | null;
    };
    ItemAttachmentDtoEnvelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
      result?: components["schemas"]["ItemAttachmentDto"];
    };
    ItemAttachmentDtoListEnvelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
      result?: components["schemas"]["ItemAttachmentDto"][] | null;
    };
    ItemAttachmentUpdateDto: {
      notes?: string | null;
      metadata?: string | null;
      title?: string | null;
      author?: string | null;
      isFolder?: boolean;
      fileName?: string | null;
      abstract?: string | null;
      keyWords?: string | null;
      validResponse?: boolean;
      parentFileUploadID?: string | null;
      filePath?: string | null;
      /** Format: binary */
      file?: string | null;
    };
    ItemAttributeCreateDto: {
      /** Format: uuid */
      id?: string;
      /** Format: date-time */
      timestamp?: string;
      name: string;
      description?: string | null;
      businessID: string;
    };
    ItemAttributeDto: {
      id?: string | null;
      /** Format: date-time */
      timestamp?: string | null;
      name?: string | null;
      description?: string | null;
      businessID?: string | null;
    };
    ItemAttributeDtoEnvelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
      result?: components["schemas"]["ItemAttributeDto"];
    };
    ItemAttributeDtoListEnvelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
      result?: components["schemas"]["ItemAttributeDto"][] | null;
    };
    ItemAttributeOptionDto: {
      id?: string | null;
      /** Format: date-time */
      timestamp?: string | null;
      name?: string | null;
      description?: string | null;
      businessID?: string | null;
    };
    ItemAttributeOptionDtoEnvelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
      result?: components["schemas"]["ItemAttributeOptionDto"];
    };
    ItemAttributeOptionDtoListEnvelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
      result?: components["schemas"]["ItemAttributeOptionDto"][] | null;
    };
    ItemAttributeUpdateDto: {
      name: string;
      description?: string | null;
    };
    ItemBrandCreateDto: {
      /** Format: uuid */
      id?: string;
      /** Format: date-time */
      timestamp?: string;
      code?: string | null;
      name: string;
      description?: string | null;
      /** Format: uri */
      websiteURL?: string | null;
      /** Format: binary */
      imageFile?: string | null;
      featured?: boolean;
      trending?: boolean;
      businessID: string;
    };
    ItemBrandDto: {
      id?: string | null;
      /** Format: date-time */
      timestamp?: string | null;
      code?: string | null;
      name?: string | null;
      description?: string | null;
      websiteURL?: string | null;
      logoURL?: string | null;
      featured?: boolean;
      trending?: boolean;
      businessID?: string | null;
    };
    ItemBrandDtoEnvelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
      result?: components["schemas"]["ItemBrandDto"];
    };
    ItemBrandDtoListEnvelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
      result?: components["schemas"]["ItemBrandDto"][] | null;
    };
    ItemBrandUpdateDto: {
      name: string;
      description?: string | null;
      /** Format: uri */
      websiteURL?: string | null;
      /** Format: uri */
      logoURL?: string | null;
      featured?: boolean;
      trending?: boolean;
    };
    ItemCategoryCreateDto: {
      /** Format: uuid */
      id?: string;
      /** Format: date-time */
      timestamp?: string;
      title: string;
      description?: string | null;
      /** Format: uri */
      imageURL?: string | null;
      businessID: string;
      businessProfileRecordID?: string | null;
      parentItemCategoryID?: string | null;
    };
    ItemCategoryDto: {
      id?: string | null;
      /** Format: date-time */
      timestamp?: string | null;
      title?: string | null;
      description?: string | null;
      imageURL?: string | null;
      isFeatured?: boolean;
      enableForCourses?: boolean;
      enableForProducts?: boolean;
      enableForLicenses?: boolean;
      enableForServices?: boolean;
      enableForSubscriptions?: boolean;
      businessID?: string | null;
      businessProfileRecordID?: string | null;
      parentItemCategoryID?: string | null;
    };
    ItemCategoryDtoEnvelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
      result?: components["schemas"]["ItemCategoryDto"];
    };
    ItemCategoryDtoListEnvelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
      result?: components["schemas"]["ItemCategoryDto"][] | null;
    };
    ItemCategoryUpdateDto: {
      title: string;
      description?: string | null;
      /** Format: uri */
      imageURL?: string | null;
      isFeatured?: boolean;
      enableForCourses?: boolean;
      enableForProducts?: boolean;
      enableForLicenses?: boolean;
      enableForServices?: boolean;
      enableForSubscriptions?: boolean;
    };
    ItemGoogleCategoryDto: {
      id?: string | null;
      /** Format: date-time */
      timestamp?: string | null;
      path: string;
      /** Format: uri */
      icon?: string | null;
      name: string;
      disabled?: boolean;
      featured?: boolean;
      displayOnMenu?: boolean;
      hasChildren?: boolean;
      /** Format: uri */
      menuImage?: string | null;
      bannerCode?: string | null;
      /** Format: uri */
      bannerImage?: string | null;
      /** Format: uri */
      primaryImage?: string | null;
      parentCategoryId?: string | null;
      /** Format: double */
      startingAtAmountInUsd?: number | null;
    };
    ItemGoogleCategoryDtoEnvelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
      result?: components["schemas"]["ItemGoogleCategoryDto"];
    };
    ItemGoogleCategoryDtoListEnvelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
      result?: components["schemas"]["ItemGoogleCategoryDto"][] | null;
    };
    ItemImageCreateDto: {
      /** Format: uuid */
      id?: string;
      /** Format: date-time */
      timestamp?: string;
      businessID: string;
      businessProfileRecordID?: string | null;
      itemID?: string | null;
      isItemMozaicBG?: boolean;
      mD5Hash?: string | null;
      metadata?: string | null;
      /** Format: uri */
      fileUploadURL?: string | null;
      fileName: string;
      title?: string | null;
      abstract?: string | null;
      author?: string | null;
      keyWords?: string | null;
      notes?: string | null;
      contentType?: string | null;
      /** Format: int64 */
      fileLength?: number;
      validResponse?: boolean;
      socialProfileID?: string | null;
      parentFileUploadID?: string | null;
      accountHolderID?: string | null;
    };
    ItemImageDto: {
      id?: string | null;
      /** Format: date-time */
      timestamp?: string | null;
      businessID?: string | null;
      businessProfileRecordID?: string | null;
      itemID?: string | null;
      isItemMozaicBG?: boolean;
      mD5Hash?: string | null;
      metadata?: string | null;
      fileUploadURL?: string | null;
      fileName?: string | null;
      title?: string | null;
      abstract?: string | null;
      author?: string | null;
      keyWords?: string | null;
      notes?: string | null;
      contentType?: string | null;
      /** Format: int64 */
      fileLength?: number;
      validResponse?: boolean;
      socialProfileID?: string | null;
      parentFileUploadID?: string | null;
      accountHolderID?: string | null;
    };
    ItemImageDtoEnvelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
      result?: components["schemas"]["ItemImageDto"];
    };
    ItemImageDtoListEnvelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
      result?: components["schemas"]["ItemImageDto"][] | null;
    };
    ItemImageUpdateDto: {
      itemID: string;
      isItemMozaicBG?: boolean;
      mD5Hash: string;
      metadata?: string | null;
      /** Format: uri */
      fileUploadURL: string;
      fileName: string;
      title?: string | null;
      abstract?: string | null;
      author?: string | null;
      keyWords?: string | null;
      notes?: string | null;
      contentType: string;
      /** Format: int64 */
      fileLength?: number;
      validResponse?: boolean;
      parentFileUploadID?: string | null;
    };
    ItemQuestionCreateDto: {
      /** Format: uuid */
      id?: string;
      /** Format: date-time */
      timestamp?: string;
      title: string;
      needsRevision: boolean;
      question: string;
      socialProfileID?: string | null;
      businessID: string;
      itemID: string;
    };
    ItemQuestionDto: {
      id?: string | null;
      /** Format: date-time */
      timestamp?: string | null;
      title?: string | null;
      needsRevision?: boolean;
      question?: string | null;
      socialProfileID?: string | null;
      businessID?: string | null;
      itemID?: string | null;
    };
    ItemQuestionDtoEnvelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
      result?: components["schemas"]["ItemQuestionDto"];
    };
    ItemQuestionDtoListEnvelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
      result?: components["schemas"]["ItemQuestionDto"][] | null;
    };
    ItemQuestionRecordCreateDto: {
      /** Format: uuid */
      id?: string;
      /** Format: date-time */
      timestamp?: string;
      title: string;
      needsRevision: boolean;
      question: string;
      socialProfileID?: string | null;
      businessID: string;
    };
    ItemQuestionUpdateDto: {
      title?: string | null;
      needsRevision: boolean;
      question?: string | null;
    };
    ItemRefundPolicyDto: {
      id?: string | null;
      /** Format: date-time */
      timestamp?: string | null;
      shippingCourierID?: string | null;
      type?: string | null;
      code?: string | null;
      title?: string | null;
      description?: string | null;
      isFree?: boolean;
      reduce?: boolean;
      isEnabled?: boolean;
      isDefault?: boolean;
      allowInternational?: boolean;
      /** Format: int32 */
      hours?: number;
      /** Format: int32 */
      days?: number;
      /** Format: int32 */
      weeks?: number;
      /** Format: int32 */
      months?: number;
      /** Format: int32 */
      years?: number;
      /** Format: double */
      value?: number;
      /** Format: double */
      percentage?: number;
      currencyID?: string | null;
      countryID?: string | null;
      countryStateID?: string | null;
      customState?: string | null;
      customCity?: string | null;
      cityID?: string | null;
      businessID?: string | null;
      businessProfileRecordID?: string | null;
    };
    ItemRefundPolicyDtoEnvelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
      result?: components["schemas"]["ItemRefundPolicyDto"];
    };
    ItemRefundPolicyDtoListEnvelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
      result?: components["schemas"]["ItemRefundPolicyDto"][] | null;
    };
    ItemReturnPolicyDto: {
      id?: string | null;
      /** Format: date-time */
      timestamp?: string | null;
      shippingCourierID?: string | null;
      type?: string | null;
      code?: string | null;
      title?: string | null;
      description?: string | null;
      isFree?: boolean;
      reduce?: boolean;
      isEnabled?: boolean;
      isDefault?: boolean;
      allowInternational?: boolean;
      /** Format: int32 */
      hours?: number;
      /** Format: int32 */
      days?: number;
      /** Format: int32 */
      weeks?: number;
      /** Format: int32 */
      months?: number;
      /** Format: int32 */
      years?: number;
      /** Format: double */
      value?: number;
      /** Format: double */
      percentage?: number;
      currencyID?: string | null;
      countryID?: string | null;
      countryStateID?: string | null;
      customState?: string | null;
      customCity?: string | null;
      cityID?: string | null;
      businessID?: string | null;
      businessProfileRecordID?: string | null;
    };
    ItemReturnPolicyDtoEnvelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
      result?: components["schemas"]["ItemReturnPolicyDto"];
    };
    ItemReturnPolicyDtoListEnvelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
      result?: components["schemas"]["ItemReturnPolicyDto"][] | null;
    };
    ItemReviewCreateDto: {
      /** Format: uuid */
      id?: string;
      /** Format: date-time */
      timestamp?: string;
      itemID?: string | null;
      /** Format: double */
      reviewScore?: number;
      reviewMessage?: string | null;
      socialProfileID?: string | null;
    };
    ItemReviewDto: {
      id?: string | null;
      /** Format: date-time */
      timestamp?: string | null;
      itemID?: string | null;
      /** Format: double */
      reviewScore?: number;
      reviewMessage?: string | null;
      socialProfileID?: string | null;
    };
    ItemReviewDtoEnvelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
      result?: components["schemas"]["ItemReviewDto"];
    };
    ItemReviewDtoListEnvelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
      result?: components["schemas"]["ItemReviewDto"][] | null;
    };
    ItemReviewRecordCreateDto: {
      /** Format: uuid */
      id?: string;
      /** Format: date-time */
      timestamp?: string;
      /** Format: double */
      reviewScore?: number;
      reviewMessage?: string | null;
      socialProfileID?: string | null;
    };
    ItemReviewUpdateDto: {
      /** Format: double */
      reviewScore?: number;
      reviewMessage?: string | null;
    };
    ItemShippingPolicyDto: {
      id?: string | null;
      /** Format: date-time */
      timestamp?: string | null;
      isExpressShipmentPolicy?: boolean;
      shippingCourierID: string;
      type: string;
      code: string;
      title: string;
      description?: string | null;
      isFree?: boolean;
      reduce?: boolean;
      isEnabled?: boolean;
      isDefault?: boolean;
      allowInternational?: boolean;
      /** Format: int32 */
      hours?: number;
      /** Format: int32 */
      days?: number;
      /** Format: int32 */
      weeks?: number;
      /** Format: int32 */
      months?: number;
      /** Format: int32 */
      years?: number;
      /** Format: double */
      value?: number;
      /** Format: double */
      percentage?: number;
      currencyID: string;
      countryID?: string | null;
      countryStateID?: string | null;
      customState?: string | null;
      customCity?: string | null;
      cityID?: string | null;
      businessID: string;
      businessProfileRecordID?: string | null;
    };
    ItemShippingPolicyDtoEnvelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
      result?: components["schemas"]["ItemShippingPolicyDto"];
    };
    ItemShippingPolicyDtoListEnvelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
      result?: components["schemas"]["ItemShippingPolicyDto"][] | null;
    };
    ItemTagCreateDto: {
      /** Format: uuid */
      id?: string;
      /** Format: date-time */
      timestamp?: string;
      title: string;
      description?: string | null;
      businessID: string;
    };
    ItemTagDto: {
      id?: string | null;
      /** Format: date-time */
      timestamp?: string | null;
      title?: string | null;
      description?: string | null;
      businessID?: string | null;
    };
    ItemTagDtoEnvelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
      result?: components["schemas"]["ItemTagDto"];
    };
    ItemTagDtoListEnvelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
      result?: components["schemas"]["ItemTagDto"][] | null;
    };
    ItemTagUpdateDto: {
      title: string;
      description?: string | null;
    };
    ItemTaxPolicyDto: {
      id?: string | null;
      /** Format: date-time */
      timestamp?: string | null;
      zero?: boolean;
      reduced?: boolean;
      withholding?: boolean;
      fiscalAuthorityID?: string | null;
      type?: string | null;
      code?: string | null;
      title?: string | null;
      description?: string | null;
      isFree?: boolean;
      reduce?: boolean;
      isEnabled?: boolean;
      isDefault?: boolean;
      allowInternational?: boolean;
      /** Format: int32 */
      hours?: number;
      /** Format: int32 */
      days?: number;
      /** Format: int32 */
      weeks?: number;
      /** Format: int32 */
      months?: number;
      /** Format: int32 */
      years?: number;
      /** Format: double */
      value?: number;
      /** Format: double */
      percentage?: number;
      currencyID?: string | null;
      countryID?: string | null;
      countryStateID?: string | null;
      customState?: string | null;
      customCity?: string | null;
      cityID?: string | null;
      businessID?: string | null;
      businessProfileRecordID?: string | null;
    };
    ItemTaxPolicyDtoEnvelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
      result?: components["schemas"]["ItemTaxPolicyDto"];
    };
    ItemTaxPolicyDtoListEnvelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
      result?: components["schemas"]["ItemTaxPolicyDto"][] | null;
    };
    ItemTypeCreateDto: {
      /** Format: uuid */
      id?: string;
      /** Format: date-time */
      timestamp?: string;
      pluralTitle?: string | null;
      singularTitle?: string | null;
      description?: string | null;
      /** Format: uri */
      imageURL?: string | null;
      googleCategoryTaxonomy?: string | null;
      businessID: string;
      itemCategoryID: string;
      itemGoogleCategoryID?: string | null;
    };
    ItemTypeDto: {
      id?: string | null;
      /** Format: date-time */
      timestamp?: string | null;
      pluralTitle: string;
      singularTitle: string;
      description?: string | null;
      /** Format: uri */
      imageURL?: string | null;
      googleCategoryTaxonomy?: string | null;
      businessID: string;
      itemCategoryID: string;
      itemGoogleCategoryID?: string | null;
    };
    ItemTypeDtoEnvelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
      result?: components["schemas"]["ItemTypeDto"];
    };
    ItemTypeDtoListEnvelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
      result?: components["schemas"]["ItemTypeDto"][] | null;
    };
    ItemTypeUpdateDto: {
      pluralTitle?: string | null;
      singularTitle: string;
      /** Format: multiline */
      description?: string | null;
      /** Format: uri */
      imageURL?: string | null;
      googleCategoryTaxonomy?: string | null;
    };
    ItemWarrantyPolicyDto: {
      id?: string | null;
      /** Format: date-time */
      timestamp?: string | null;
      isExtendedWarranty?: boolean;
      code: string;
      title: string;
      description?: string | null;
      isFree?: boolean;
      reduce?: boolean;
      isEnabled?: boolean;
      isDefault?: boolean;
      allowInternational?: boolean;
      /** Format: int32 */
      hours?: number;
      /** Format: int32 */
      days?: number;
      /** Format: int32 */
      weeks?: number;
      /** Format: int32 */
      months?: number;
      /** Format: int32 */
      years?: number;
      /** Format: double */
      value?: number;
      /** Format: double */
      percentage?: number;
      currencyID?: string | null;
      countryID?: string | null;
      countryStateID?: string | null;
      customState?: string | null;
      customCity?: string | null;
      cityID?: string | null;
      businessID: string;
      businessProfileRecordID?: string | null;
    };
    ItemWarrantyPolicyDtoEnvelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
      result?: components["schemas"]["ItemWarrantyPolicyDto"];
    };
    ItemWarrantyPolicyDtoListEnvelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
      result?: components["schemas"]["ItemWarrantyPolicyDto"][] | null;
    };
    MerchantDto: {
      id?: string | null;
      /** Format: date-time */
      timestamp?: string | null;
      qualifiedName?: string | null;
      taxId?: string | null;
      about?: string | null;
      walletId?: string | null;
      socialFeedId?: string | null;
      businessIndustryId?: string | null;
      businessSegmentId?: string | null;
      socialProfileId?: string | null;
      languageId?: string | null;
      name?: string | null;
      duns?: string | null;
      slogan?: string | null;
      legalName?: string | null;
      coverUrl?: string | null;
      avatarUrl?: string | null;
      cartId?: string | null;
      currencyId?: string | null;
      timezoneId?: string | null;
      countryId?: string | null;
      stateId?: string | null;
      cityId?: string | null;
      email?: string | null;
      phone?: string | null;
      webUrl?: string | null;
      facebookUrl?: string | null;
      twitterUrl?: string | null;
      gitHubUrl?: string | null;
      linkedInUrl?: string | null;
      instagramUrl?: string | null;
      youTubeUrl?: string | null;
      whatsAppNumber?: string | null;
      supportPhoneNumber?: string | null;
      verified?: boolean;
      businessName?: string | null;
      businessLegalName?: string | null;
      twitterUsername?: string | null;
      /** Format: int32 */
      productsCount?: number;
      /** Format: double */
      merchantRating?: number | null;
    };
    MerchantDtoEnvelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
      result?: components["schemas"]["MerchantDto"];
    };
    MerchantDtoListEnvelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
      result?: components["schemas"]["MerchantDto"][] | null;
    };
    Money: {
      /** Format: double */
      amount?: number;
      currency?: components["schemas"]["Currency"];
    };
    MoneyEnvelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
      result?: components["schemas"]["Money"];
    };
    PricingRuleCreateDto: {
      /** Format: uuid */
      id?: string;
      /** Format: date-time */
      timestamp?: string;
      code?: string | null;
      title?: string | null;
      description?: string | null;
      isFree?: boolean;
      reduce?: boolean;
      isEnabled?: boolean;
      isDefault?: boolean;
      allowInternational?: boolean;
      /** Format: int32 */
      hours?: number;
      /** Format: int32 */
      days?: number;
      /** Format: int32 */
      weeks?: number;
      /** Format: int32 */
      months?: number;
      /** Format: int32 */
      years?: number;
      /** Format: double */
      value?: number;
      /** Format: double */
      percentage?: number;
      currencyID?: string | null;
      countryID?: string | null;
      countryStateID?: string | null;
      customState?: string | null;
      customCity?: string | null;
      cityID?: string | null;
      businessID?: string | null;
      businessProfileRecordID?: string | null;
    };
    PricingRuleDto: {
      id?: string | null;
      /** Format: date-time */
      timestamp?: string | null;
      businessID?: string | null;
      code?: string | null;
      title?: string | null;
      description?: string | null;
      isFree?: boolean;
      reduce?: boolean;
      isEnabled?: boolean;
      isDefault?: boolean;
      allowInternational?: boolean;
      /** Format: int32 */
      hours?: number;
      /** Format: int32 */
      days?: number;
      /** Format: int32 */
      weeks?: number;
      /** Format: int32 */
      months?: number;
      /** Format: int32 */
      years?: number;
      /** Format: double */
      value?: number;
      /** Format: double */
      percentage?: number;
      currencyID?: string | null;
      countryID?: string | null;
      countryStateID?: string | null;
      customState?: string | null;
      customCity?: string | null;
      cityID?: string | null;
    };
    PricingRuleDtoEnvelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
      result?: components["schemas"]["PricingRuleDto"];
    };
    PricingRuleDtoListEnvelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
      result?: components["schemas"]["PricingRuleDto"][] | null;
    };
    PricingRuleUpdateDto: {
      title?: string | null;
      description?: string | null;
      isFree?: boolean;
      reduce?: boolean;
      isEnabled?: boolean;
      isDefault?: boolean;
      allowInternational?: boolean;
      /** Format: int32 */
      hours?: number;
      /** Format: int32 */
      days?: number;
      /** Format: int32 */
      weeks?: number;
      /** Format: int32 */
      months?: number;
      /** Format: int32 */
      years?: number;
      /** Format: double */
      value?: number;
      /** Format: double */
      percentage?: number;
      currencyID?: string | null;
      countryID?: string | null;
      countryStateID?: string | null;
      customState?: string | null;
      customCity?: string | null;
      cityID?: string | null;
    };
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}

export type $defs = Record<string, never>;

export type external = Record<string, never>;

export interface operations {

  GetStockItemByIdAsync: {
    parameters: {
      query?: {
        "api-version"?: string;
      };
      header?: {
        "x-api-version"?: string;
      };
      path: {
        itemId: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["CatalogItemDtoEnvelope"];
          "application/xml": components["schemas"]["CatalogItemDtoEnvelope"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json": components["schemas"]["ErrorEnvelope"];
          "application/xml": components["schemas"]["ErrorEnvelope"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json": components["schemas"]["ErrorEnvelope"];
          "application/xml": components["schemas"]["ErrorEnvelope"];
        };
      };
    };
  };
  UpdateStockItemAsync: {
    parameters: {
      query: {
        tenantId: string;
        "api-version"?: string;
      };
      header?: {
        "x-api-version"?: string;
      };
      path: {
        itemId: string;
      };
    };
    requestBody?: {
      content: {
        "application/json": components["schemas"]["CatalogItemUpdateDto"];
        "application/xml": components["schemas"]["CatalogItemUpdateDto"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: never;
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json": components["schemas"]["ErrorEnvelope"];
          "application/xml": components["schemas"]["ErrorEnvelope"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json": components["schemas"]["ErrorEnvelope"];
          "application/xml": components["schemas"]["ErrorEnvelope"];
        };
      };
    };
  };
}
