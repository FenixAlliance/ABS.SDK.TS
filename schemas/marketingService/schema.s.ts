/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */


export interface paths {
  "/api/v2/MarketingService/EmailGroups": {
    get: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["EmailGroupDtoListEnvelope"];
            "application/xml": components["schemas"]["EmailGroupDtoListEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    post: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["EmailGroupCreateDto"];
          "application/xml": components["schemas"]["EmailGroupCreateDto"];
        };
      };
      responses: {
        /** @description Created */
        201: {
          content: {
            "application/json": components["schemas"]["EmptyEnvelope"];
            "application/xml": components["schemas"]["EmptyEnvelope"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/MarketingService/EmailGroups/Count": {
    get: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["Int32Envelope"];
            "application/xml": components["schemas"]["Int32Envelope"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/MarketingService/EmailGroups/{emailgroupId}": {
    get: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          emailgroupId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["EmailGroupDtoEnvelope"];
            "application/xml": components["schemas"]["EmailGroupDtoEnvelope"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    put: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          emailgroupId: string;
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["EmailGroupUpdateDto"];
          "application/xml": components["schemas"]["EmailGroupUpdateDto"];
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["EmptyEnvelope"];
            "application/xml": components["schemas"]["EmptyEnvelope"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    delete: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          emailgroupId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["EmptyEnvelope"];
            "application/xml": components["schemas"]["EmptyEnvelope"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/MarketingService/EmailSignatures": {
    get: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["EmailSignatureDtoListEnvelope"];
            "application/xml": components["schemas"]["EmailSignatureDtoListEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    post: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["EmailSignatureCreateDto"];
          "application/xml": components["schemas"]["EmailSignatureCreateDto"];
        };
      };
      responses: {
        /** @description Created */
        201: {
          content: {
            "application/json": components["schemas"]["EmptyEnvelope"];
            "application/xml": components["schemas"]["EmptyEnvelope"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/MarketingService/EmailSignatures/Count": {
    get: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["Int32Envelope"];
            "application/xml": components["schemas"]["Int32Envelope"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/MarketingService/EmailSignatures/{emailsignatureId}": {
    get: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          emailsignatureId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["EmailSignatureDtoEnvelope"];
            "application/xml": components["schemas"]["EmailSignatureDtoEnvelope"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    put: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          emailsignatureId: string;
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["EmailSignatureUpdateDto"];
          "application/xml": components["schemas"]["EmailSignatureUpdateDto"];
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["EmptyEnvelope"];
            "application/xml": components["schemas"]["EmptyEnvelope"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    delete: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          emailsignatureId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["EmptyEnvelope"];
            "application/xml": components["schemas"]["EmptyEnvelope"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/MarketingService/EmailTemplates": {
    get: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["EmailTemplateDtoListEnvelope"];
            "application/xml": components["schemas"]["EmailTemplateDtoListEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    post: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["EmailTemplateCreateDto"];
          "application/xml": components["schemas"]["EmailTemplateCreateDto"];
        };
      };
      responses: {
        /** @description Created */
        201: {
          content: {
            "application/json": components["schemas"]["EmptyEnvelope"];
            "application/xml": components["schemas"]["EmptyEnvelope"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/MarketingService/EmailTemplates/Count": {
    get: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["Int32Envelope"];
            "application/xml": components["schemas"]["Int32Envelope"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/MarketingService/EmailTemplates/{emailTemplateId}": {
    get: {
      parameters: {
        query: {
          tenantId: string;
          emailTemplatesId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          emailTemplateId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["EmailTemplateDtoEnvelope"];
            "application/xml": components["schemas"]["EmailTemplateDtoEnvelope"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    put: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          emailTemplateId: string;
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["EmailTemplateUpdateDto"];
          "application/xml": components["schemas"]["EmailTemplateUpdateDto"];
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["EmptyEnvelope"];
            "application/xml": components["schemas"]["EmptyEnvelope"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    delete: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          emailTemplateId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["EmptyEnvelope"];
            "application/xml": components["schemas"]["EmptyEnvelope"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/MarketingService/MarketingCampaigns": {
    get: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
      };
      responses: {
        /** @description Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    post: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["MarketingCampaignCreateDto"];
          "application/xml": components["schemas"]["MarketingCampaignCreateDto"];
        };
      };
      responses: {
        /** @description Created */
        201: {
          content: {
            "application/json": components["schemas"]["EmptyEnvelope"];
            "application/xml": components["schemas"]["EmptyEnvelope"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/MarketingService/MarketingCampaigns/Count": {
    get: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["Int32Envelope"];
            "application/xml": components["schemas"]["Int32Envelope"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/MarketingService/MarketingCampaigns/{marketingcampaignId}": {
    get: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          marketingcampaignId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["MarketingCampaignDtoEnvelope"];
            "application/xml": components["schemas"]["MarketingCampaignDtoEnvelope"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    put: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          marketingcampaignId: string;
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["MarketingCampaignUpdateDto"];
          "application/xml": components["schemas"]["MarketingCampaignUpdateDto"];
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["EmptyEnvelope"];
            "application/xml": components["schemas"]["EmptyEnvelope"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    delete: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          marketingcampaignId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["EmptyEnvelope"];
            "application/xml": components["schemas"]["EmptyEnvelope"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/MarketingService/MarketingLists": {
    get: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["MarketingListDtoListEnvelope"];
            "application/xml": components["schemas"]["MarketingListDtoListEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    post: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["MarketingListCreateDto"];
          "application/xml": components["schemas"]["MarketingListCreateDto"];
        };
      };
      responses: {
        /** @description Created */
        201: {
          content: {
            "application/json": components["schemas"]["EmptyEnvelope"];
            "application/xml": components["schemas"]["EmptyEnvelope"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/MarketingService/MarketingLists/Count": {
    get: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["Int32Envelope"];
            "application/xml": components["schemas"]["Int32Envelope"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/MarketingService/MarketingLists/{marketinglistId}": {
    get: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          marketinglistId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["MarketingListDtoEnvelope"];
            "application/xml": components["schemas"]["MarketingListDtoEnvelope"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    put: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          marketinglistId: string;
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["MarketingListUpdateDto"];
          "application/xml": components["schemas"]["MarketingListUpdateDto"];
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["EmptyEnvelope"];
            "application/xml": components["schemas"]["EmptyEnvelope"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    delete: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          marketinglistId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["EmptyEnvelope"];
            "application/xml": components["schemas"]["EmptyEnvelope"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/MarketingService/Newsletters": {
    get: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
      };
      responses: {
        /** @description Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    post: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["NewsletterCreateDto"];
          "application/xml": components["schemas"]["NewsletterCreateDto"];
        };
      };
      responses: {
        /** @description Created */
        201: {
          content: {
            "application/json": components["schemas"]["EmptyEnvelope"];
            "application/xml": components["schemas"]["EmptyEnvelope"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/MarketingService/Newsletters/Count": {
    get: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["Int32Envelope"];
            "application/xml": components["schemas"]["Int32Envelope"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/MarketingService/Newsletters/{newsletterId}": {
    get: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          newsletterId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["NewsletterDtoEnvelope"];
            "application/xml": components["schemas"]["NewsletterDtoEnvelope"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    put: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          newsletterId: string;
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["NewsletterUpdateDto"];
          "application/xml": components["schemas"]["NewsletterUpdateDto"];
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["EmptyEnvelope"];
            "application/xml": components["schemas"]["EmptyEnvelope"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    delete: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          newsletterId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["EmptyEnvelope"];
            "application/xml": components["schemas"]["EmptyEnvelope"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/MarketingService/SocialMediaPosts": {
    get: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["SocialMediaPostDtoListEnvelope"];
            "application/xml": components["schemas"]["SocialMediaPostDtoListEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    post: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["SocialMediaPostCreateDto"];
          "application/xml": components["schemas"]["SocialMediaPostCreateDto"];
        };
      };
      responses: {
        /** @description Created */
        201: {
          content: {
            "application/json": components["schemas"]["EmptyEnvelope"];
            "application/xml": components["schemas"]["EmptyEnvelope"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/MarketingService/SocialMediaPosts/Count": {
    get: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["Int32Envelope"];
            "application/xml": components["schemas"]["Int32Envelope"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/MarketingService/SocialMediaPosts/{socialmediapostId}": {
    get: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          socialmediapostId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["SocialMediaPostDtoEnvelope"];
            "application/xml": components["schemas"]["SocialMediaPostDtoEnvelope"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    put: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          socialmediapostId: string;
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["SocialMediaPostUpdateDto"];
          "application/xml": components["schemas"]["SocialMediaPostUpdateDto"];
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["EmptyEnvelope"];
            "application/xml": components["schemas"]["EmptyEnvelope"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    delete: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          socialmediapostId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["EmptyEnvelope"];
            "application/xml": components["schemas"]["EmptyEnvelope"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/MarketingService/SocialPostBuckets": {
    get: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["SocialPostBucketDtoListEnvelope"];
            "application/xml": components["schemas"]["SocialPostBucketDtoListEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    post: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["SocialPostBucketCreateDto"];
          "application/xml": components["schemas"]["SocialPostBucketCreateDto"];
        };
      };
      responses: {
        /** @description Created */
        201: {
          content: {
            "application/json": components["schemas"]["EmptyEnvelope"];
            "application/xml": components["schemas"]["EmptyEnvelope"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/MarketingService/SocialPostBuckets/Count": {
    get: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["Int32Envelope"];
            "application/xml": components["schemas"]["Int32Envelope"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/MarketingService/SocialPostBuckets/{socialpostbucketId}": {
    get: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          socialpostbucketId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["SocialPostBucketDtoEnvelope"];
            "application/xml": components["schemas"]["SocialPostBucketDtoEnvelope"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    put: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          socialpostbucketId: string;
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["SocialPostBucketUpdateDto"];
          "application/xml": components["schemas"]["SocialPostBucketUpdateDto"];
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["EmptyEnvelope"];
            "application/xml": components["schemas"]["EmptyEnvelope"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    delete: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          socialpostbucketId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["EmptyEnvelope"];
            "application/xml": components["schemas"]["EmptyEnvelope"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/MarketingService/TrackingPixels/{pixelId}": {
    get: {
      parameters: {
        query?: {
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          pixelId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["OrderDtoEnvelope"];
            "application/xml": components["schemas"]["OrderDtoEnvelope"];
          };
        };
      };
    };
  };
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: {
    Currency: {
      code?: string | null;
      country?: string | null;
    };
    EmailGroupCreateDto: {
      /** Format: uuid */
      id?: string;
      /** Format: date-time */
      timestamp?: string;
      name?: string | null;
      description?: string | null;
      enabled?: boolean;
      tenantId?: string | null;
      enrolmentId?: string | null;
    };
    EmailGroupDto: {
      id?: string | null;
      /** Format: date-time */
      timestamp?: string | null;
      tenantId?: string | null;
      enrolmentId?: string | null;
      name?: string | null;
      description?: string | null;
      enabled?: boolean;
    };
    EmailGroupDtoEnvelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
      result?: components["schemas"]["EmailGroupDto"];
    };
    EmailGroupDtoListEnvelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
      result?: components["schemas"]["EmailGroupDto"][] | null;
    };
    EmailGroupUpdateDto: {
      name?: string | null;
      description?: string | null;
      enabled?: boolean;
      tenantId?: string | null;
      enrolmentId?: string | null;
    };
    EmailSignatureCreateDto: {
      /** Format: uuid */
      id?: string;
      /** Format: date-time */
      timestamp?: string;
      tenantId?: string | null;
      enrolmentId?: string | null;
      title?: string | null;
      authorId?: string | null;
      description?: string | null;
      htmlContent?: string | null;
      featuredImageUrl?: string | null;
    };
    EmailSignatureDto: {
      id?: string | null;
      /** Format: date-time */
      timestamp?: string | null;
      /** Format: int32 */
      order?: number;
      slug?: string | null;
      name?: string | null;
      title?: string | null;
      excerpt?: string | null;
      password?: string | null;
      description?: string | null;
      highlightImage?: string | null;
      canonicalUrl?: string | null;
      seoTitle?: string | null;
      seoKeyWords?: string | null;
      seoKeyPhrases?: string | null;
      metaDescription?: string | null;
      twitterImage?: string | null;
      twitterTitle?: string | null;
      twitterDescription?: string | null;
      facebookImage?: string | null;
      facebookTitle?: string | null;
      facebookDescription?: string | null;
      featuredImageUrl?: string | null;
      content?: string | null;
      code?: string | null;
      namespace?: string | null;
      typeName?: string | null;
      generatedCode?: string | null;
      compilationPath?: string | null;
      htmlContent?: string | null;
      cSharpContent?: string | null;
      razorContent?: string | null;
      cssContent?: string | null;
      jsContent?: string | null;
      cssFiles?: string | null;
      jsFiles?: string | null;
      razorGeneratedCode?: string | null;
      cSharpGeneratedCode?: string | null;
      template?: boolean;
      default?: boolean;
      enable?: boolean;
      enableComments?: boolean;
      displaySocialBox?: boolean;
      published?: boolean;
      inTrashCan?: boolean;
      systemLocked?: boolean;
      allowPingBacks?: boolean;
      allowTrackbacks?: boolean;
      cornerstoneContent?: boolean;
      isEssentialContent?: boolean;
      allowSearchEngineIndexing?: boolean;
      tenantId?: string | null;
      webPortalId?: string | null;
      websiteThemeId?: string | null;
      enrollmentId?: string | null;
      socialProfileId?: string | null;
      parentWebContentId?: string | null;
      parentWebContentVersionId?: string | null;
    };
    EmailSignatureDtoEnvelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
      result?: components["schemas"]["EmailSignatureDto"];
    };
    EmailSignatureDtoListEnvelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
      result?: components["schemas"]["EmailSignatureDto"][] | null;
    };
    EmailSignatureUpdateDto: {
      /** Format: int32 */
      order?: number;
      slug?: string | null;
      name?: string | null;
      title?: string | null;
      excerpt?: string | null;
      password?: string | null;
      description?: string | null;
      highlightImage?: string | null;
      canonicalUrl?: string | null;
      seoTitle?: string | null;
      seoKeyWords?: string | null;
      seoKeyPhrases?: string | null;
      metaDescription?: string | null;
      twitterImage?: string | null;
      twitterTitle?: string | null;
      twitterDescription?: string | null;
      facebookImage?: string | null;
      facebookTitle?: string | null;
      facebookDescription?: string | null;
      featuredImageURL?: string | null;
      content?: string | null;
      code?: string | null;
      namespace?: string | null;
      typeName?: string | null;
      generatedCode?: string | null;
      compilationPath?: string | null;
      htmlContent?: string | null;
      cSharpContent?: string | null;
      razorContent?: string | null;
      cssContent?: string | null;
      jsContent?: string | null;
      cssFiles?: string | null;
      jsFiles?: string | null;
      razorGeneratedCode?: string | null;
      cSharpGeneratedCode?: string | null;
      /** Format: int32 */
      precompiledLogicSize?: number;
      /** Format: int64 */
      precompiledLogicSizeLong?: number;
      /** Format: int32 */
      precompiledViewSize?: number;
      /** Format: int64 */
      precompiledViewSizeLong?: number;
      /** Format: int32 */
      precompiledLogicViewSize?: number;
      template?: boolean;
      default?: boolean;
      enable?: boolean;
      enableComments?: boolean;
      displaySocialBox?: boolean;
      published?: boolean;
      inTrashCan?: boolean;
      systemLocked?: boolean;
      allowPingbacks?: boolean;
      allowTrackbacks?: boolean;
      cornerstoneContent?: boolean;
      isEssentialContent?: boolean;
      allowSearchEngineIndexing?: boolean;
    };
    EmailTemplateCreateDto: {
      /** Format: uuid */
      id?: string;
      /** Format: date-time */
      timestamp?: string;
      tenantId?: string | null;
      enrolmentId?: string | null;
      title?: string | null;
      authorId?: string | null;
      description?: string | null;
      htmlContent?: string | null;
      featuredImageUrl?: string | null;
      marketingCampaignId?: string | null;
    };
    EmailTemplateDto: {
      id?: string | null;
      /** Format: date-time */
      timestamp?: string | null;
      /** Format: int32 */
      order?: number;
      slug?: string | null;
      name?: string | null;
      title?: string | null;
      excerpt?: string | null;
      password?: string | null;
      description?: string | null;
      highlightImage?: string | null;
      canonicalUrl?: string | null;
      seoTitle?: string | null;
      seoKeyWords?: string | null;
      seoKeyPhrases?: string | null;
      metaDescription?: string | null;
      twitterImage?: string | null;
      twitterTitle?: string | null;
      twitterDescription?: string | null;
      facebookImage?: string | null;
      facebookTitle?: string | null;
      facebookDescription?: string | null;
      featuredImageUrl?: string | null;
      content?: string | null;
      code?: string | null;
      namespace?: string | null;
      typeName?: string | null;
      generatedCode?: string | null;
      compilationPath?: string | null;
      htmlContent?: string | null;
      cSharpContent?: string | null;
      razorContent?: string | null;
      cssContent?: string | null;
      jsContent?: string | null;
      cssFiles?: string | null;
      jsFiles?: string | null;
      razorGeneratedCode?: string | null;
      cSharpGeneratedCode?: string | null;
      template?: boolean;
      default?: boolean;
      enable?: boolean;
      enableComments?: boolean;
      displaySocialBox?: boolean;
      published?: boolean;
      inTrashCan?: boolean;
      systemLocked?: boolean;
      allowPingBacks?: boolean;
      allowTrackbacks?: boolean;
      cornerstoneContent?: boolean;
      isEssentialContent?: boolean;
      allowSearchEngineIndexing?: boolean;
      tenantId?: string | null;
      webPortalId?: string | null;
      websiteThemeId?: string | null;
      enrollmentId?: string | null;
      socialProfileId?: string | null;
      parentWebContentId?: string | null;
      parentWebContentVersionId?: string | null;
      marketingCampaignId?: string | null;
      marketingCampaignName?: string | null;
    };
    EmailTemplateDtoEnvelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
      result?: components["schemas"]["EmailTemplateDto"];
    };
    EmailTemplateDtoListEnvelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
      result?: components["schemas"]["EmailTemplateDto"][] | null;
    };
    EmailTemplateUpdateDto: {
      /** Format: int32 */
      order?: number;
      slug?: string | null;
      name?: string | null;
      title?: string | null;
      excerpt?: string | null;
      password?: string | null;
      description?: string | null;
      highlightImage?: string | null;
      canonicalUrl?: string | null;
      seoTitle?: string | null;
      seoKeyWords?: string | null;
      seoKeyPhrases?: string | null;
      metaDescription?: string | null;
      twitterImage?: string | null;
      twitterTitle?: string | null;
      twitterDescription?: string | null;
      facebookImage?: string | null;
      facebookTitle?: string | null;
      facebookDescription?: string | null;
      featuredImageURL?: string | null;
      content?: string | null;
      code?: string | null;
      namespace?: string | null;
      typeName?: string | null;
      generatedCode?: string | null;
      compilationPath?: string | null;
      htmlContent?: string | null;
      cSharpContent?: string | null;
      razorContent?: string | null;
      cssContent?: string | null;
      jsContent?: string | null;
      cssFiles?: string | null;
      jsFiles?: string | null;
      razorGeneratedCode?: string | null;
      cSharpGeneratedCode?: string | null;
      /** Format: int32 */
      precompiledLogicSize?: number;
      /** Format: int64 */
      precompiledLogicSizeLong?: number;
      /** Format: int32 */
      precompiledViewSize?: number;
      /** Format: int64 */
      precompiledViewSizeLong?: number;
      /** Format: int32 */
      precompiledLogicViewSize?: number;
      template?: boolean;
      default?: boolean;
      enable?: boolean;
      enableComments?: boolean;
      displaySocialBox?: boolean;
      published?: boolean;
      inTrashCan?: boolean;
      systemLocked?: boolean;
      allowPingbacks?: boolean;
      allowTrackbacks?: boolean;
      cornerstoneContent?: boolean;
      isEssentialContent?: boolean;
      allowSearchEngineIndexing?: boolean;
      marketingCampaignId?: string | null;
    };
    EmptyEnvelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
    };
    ErrorEnvelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
    };
    Int32Envelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
      /** Format: int32 */
      result?: number;
    };
    MarketingCampaignCreateDto: {
      /** Format: uuid */
      id?: string;
      /** Format: date-time */
      timestamp?: string;
      name?: string | null;
      offer?: string | null;
      active?: boolean;
      /** Format: date-time */
      proposedStart?: string;
      /** Format: date-time */
      proposedEnd?: string;
      /** Format: date-time */
      actualStart?: string;
      /** Format: date-time */
      actualEnd?: string;
      code?: string | null;
      /** Format: double */
      allocatedBudget?: number;
      /** Format: double */
      activityCost?: number;
      /** Format: double */
      miscCost?: number;
      /** Format: double */
      expectedResponsePercent?: number;
      marketingAreaId?: string | null;
      currencyId?: string | null;
      tenantId?: string | null;
      enrolmentId?: string | null;
    };
    MarketingCampaignDto: {
      id?: string | null;
      /** Format: date-time */
      timestamp?: string | null;
      name?: string | null;
      offer?: string | null;
      active?: boolean;
      /** Format: date-time */
      proposedStart?: string;
      /** Format: date-time */
      proposedEnd?: string;
      /** Format: date-time */
      actualStart?: string;
      /** Format: date-time */
      actualEnd?: string;
      code?: string | null;
      /** Format: double */
      allocatedBudget?: number;
      /** Format: double */
      activityCost?: number;
      /** Format: double */
      miscCost?: number;
      /** Format: double */
      expectedResponsePercent?: number;
      marketingAreaId?: string | null;
      currencyId?: string | null;
      tenantId?: string | null;
      enrolmentId?: string | null;
    };
    MarketingCampaignDtoEnvelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
      result?: components["schemas"]["MarketingCampaignDto"];
    };
    MarketingCampaignUpdateDto: {
      name?: string | null;
      offer?: string | null;
      active?: boolean;
      /** Format: date-time */
      proposedStart?: string;
      /** Format: date-time */
      proposedEnd?: string;
      /** Format: date-time */
      actualStart?: string;
      /** Format: date-time */
      actualEnd?: string;
      code?: string | null;
      /** Format: double */
      allocatedBudget?: number;
      /** Format: double */
      activityCost?: number;
      /** Format: double */
      miscCost?: number;
      /** Format: double */
      expectedResponsePercent?: number;
      marketingAreaId?: string | null;
      currencyId?: string | null;
      tenantId?: string | null;
      enrolmentId?: string | null;
    };
    MarketingListCreateDto: {
      /** Format: uuid */
      id?: string;
      /** Format: date-time */
      timestamp?: string;
      locked?: boolean;
      name?: string | null;
      purpose?: string | null;
      description?: string | null;
      source?: string | null;
      /** Format: double */
      cost?: number;
      /** Format: date-time */
      modifiedOn?: string;
      /** Format: date-time */
      lastUsedOn?: string;
      currencyId?: string | null;
      tenantId?: string | null;
      enrolmentId?: string | null;
      /**
       * Format: int32
       * @enum {integer}
       */
      marketingListType?: 0 | 1;
      /**
       * Format: int32
       * @enum {integer}
       */
      marketingListTarget?: 0 | 1 | 2;
    };
    MarketingListDto: {
      id?: string | null;
      /** Format: date-time */
      timestamp?: string | null;
      locked?: boolean;
      name?: string | null;
      purpose?: string | null;
      description?: string | null;
      source?: string | null;
      /** Format: double */
      cost?: number;
      /** Format: date-time */
      modifiedOn?: string;
      /** Format: date-time */
      lastUsedOn?: string;
      currencyId?: string | null;
      tenantId?: string | null;
      enrolmentId?: string | null;
      /**
       * Format: int32
       * @enum {integer}
       */
      marketingListType?: 0 | 1;
      /**
       * Format: int32
       * @enum {integer}
       */
      marketingListTarget?: 0 | 1 | 2;
    };
    MarketingListDtoEnvelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
      result?: components["schemas"]["MarketingListDto"];
    };
    MarketingListDtoListEnvelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
      result?: components["schemas"]["MarketingListDto"][] | null;
    };
    MarketingListUpdateDto: {
      locked?: boolean;
      name?: string | null;
      purpose?: string | null;
      description?: string | null;
      source?: string | null;
      /** Format: double */
      cost?: number;
      /** Format: date-time */
      modifiedOn?: string;
      /** Format: date-time */
      lastUsedOn?: string;
      currencyId?: string | null;
      tenantId?: string | null;
      enrolmentId?: string | null;
      /**
       * Format: int32
       * @enum {integer}
       */
      marketingListType?: 0 | 1;
      /**
       * Format: int32
       * @enum {integer}
       */
      marketingListTarget?: 0 | 1 | 2;
    };
    Money: {
      /** Format: double */
      amount?: number;
      currency?: components["schemas"]["Currency"];
    };
    NewsletterCreateDto: {
      /** Format: uuid */
      id?: string;
      /** Format: date-time */
      timestamp?: string;
      name?: string | null;
      code?: string | null;
      title?: string | null;
      tenantId?: string | null;
      enrolmentId?: string | null;
    };
    NewsletterDto: {
      /** Format: date-time */
      timestamp?: string | null;
      id?: string | null;
      name?: string | null;
      code?: string | null;
      title?: string | null;
      tenantId?: string | null;
      enrolmentId?: string | null;
    };
    NewsletterDtoEnvelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
      result?: components["schemas"]["NewsletterDto"];
    };
    NewsletterUpdateDto: {
      code?: string | null;
      title?: string | null;
      tenantId?: string | null;
      enrolmentId?: string | null;
      name?: string | null;
    };
    OrderDto: {
      id?: string | null;
      /** Format: date-time */
      timestamp?: string | null;
      closed?: boolean;
      type?: string | null;
      title?: string | null;
      userId?: string | null;
      tenantId?: string | null;
      currencyId?: string | null;
      description?: string | null;
      priceListId?: string | null;
      enrollmentId?: string | null;
      individualId?: string | null;
      organizationId?: string | null;
      receiverTenantId?: string | null;
      firstName?: string | null;
      lastName?: string | null;
      companyName?: string | null;
      billingEmail?: string | null;
      addressLine1?: string | null;
      addressLine2?: string | null;
      postalCode?: string | null;
      countryId?: string | null;
      stateId?: string | null;
      cityId?: string | null;
      customerNotes?: string | null;
      /** Format: double */
      forexRate?: number;
      /** Format: double */
      total?: number;
      /** Format: double */
      totalTaxes?: number;
      /** Format: double */
      totalTaxBase?: number;
      /** Format: double */
      totalDiscounts?: number;
      /** Format: double */
      totalSurcharges?: number;
      /** Format: double */
      totalGlobalDiscounts?: number;
      /** Format: double */
      totalGlobalSurcharges?: number;
      /** Format: double */
      totalTaxesInUsd?: number;
      /** Format: double */
      totalAmountInUsd?: number;
      /** Format: double */
      totalProfitInUsd?: number;
      /** Format: double */
      totalTaxBaseInUsd?: number;
      /** Format: double */
      totalDiscountsInUsd?: number;
      /** Format: double */
      totalSurchargesInUsd?: number;
      /** Format: double */
      totalDetailAmountInUsd?: number;
      /** Format: double */
      totalGlobalDiscountsInUsd?: number;
      /** Format: double */
      totalGlobalSurchargesInUsd?: number;
      /** Format: double */
      totalWithholdingTaxesInUsd?: number;
      /** Format: double */
      totalShippingCostInUsd?: number;
      /** Format: double */
      totalShippingTaxesInUsd?: number;
      currency?: components["schemas"]["Currency"];
      totalInUsd?: components["schemas"]["Money"];
      totalTaxAmountInUsd?: components["schemas"]["Money"];
      totalTaxBaseAmountInUsd?: components["schemas"]["Money"];
      totalDiscountsAmountInUsd?: components["schemas"]["Money"];
      totalSurchargesAmountInUsd?: components["schemas"]["Money"];
      totalGlobalDiscountsAmountInUsd?: components["schemas"]["Money"];
      totalGlobalSurchargesAmountInUsd?: components["schemas"]["Money"];
      totalAmount?: components["schemas"]["Money"];
      totalTaxAmount?: components["schemas"]["Money"];
      totalTaxBaseAmount?: components["schemas"]["Money"];
      totalDiscountsAmount?: components["schemas"]["Money"];
      totalSurchargesAmount?: components["schemas"]["Money"];
      totalGlobalDiscountsAmount?: components["schemas"]["Money"];
      totalGlobalSurchargesAmount?: components["schemas"]["Money"];
      /** Format: int32 */
      orderLinesCount?: number;
      quoteId?: string | null;
      walletId?: string | null;
      paymentTermId?: string | null;
      parentOrderId?: string | null;
      shippingMethodId?: string | null;
      billingLocationId?: string | null;
      shippingLocationId?: string | null;
      qualifiedIdentifier?: string | null;
      /**
       * Format: int32
       * @enum {integer}
       */
      costCalculationMethod?: 0 | 1;
      /**
       * Format: int32
       * @enum {integer}
       */
      freightTerms?: 0 | 1;
      /**
       * Format: int32
       * @enum {integer}
       */
      orderStatus?: 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10;
      /** Format: date-time */
      requestedDeliveryDate?: string;
      /** Format: double */
      customTaxAmount?: number;
      /** Format: double */
      customTotalAmount?: number;
      /** Format: double */
      customDetailAmount?: number;
      /** Format: double */
      customProfitAmount?: number;
      /** Format: double */
      customDiscountsAmount?: number;
      /** Format: double */
      customSurchargesAmount?: number;
      /** Format: double */
      customShippingTaxAmount?: number;
      /** Format: double */
      customShippingCostAmount?: number;
      /** Format: double */
      customWithholdingTaxAmount?: number;
    };
    OrderDtoEnvelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
      result?: components["schemas"]["OrderDto"];
    };
    SocialMediaPostCreateDto: {
      title?: string | null;
      content?: string | null;
      /** Format: uri */
      featuredImageUrl?: string | null;
      tenantId?: string | null;
      socialPostBucketId?: string | null;
      enrolmentId?: string | null;
    };
    SocialMediaPostDto: {
      id?: string | null;
      /** Format: date-time */
      timestamp?: string | null;
      title?: string | null;
      content?: string | null;
      featuredImageUrl?: string | null;
      tenantId?: string | null;
      socialPostBucketId?: string | null;
      enrolmentId?: string | null;
    };
    SocialMediaPostDtoEnvelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
      result?: components["schemas"]["SocialMediaPostDto"];
    };
    SocialMediaPostDtoListEnvelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
      result?: components["schemas"]["SocialMediaPostDto"][] | null;
    };
    SocialMediaPostUpdateDto: {
      title?: string | null;
      content?: string | null;
      /** Format: uri */
      featuredImageUrl?: string | null;
      tenantId?: string | null;
      socialPostBucketId?: string | null;
      enrolmentId?: string | null;
    };
    SocialPostBucketCreateDto: {
      /** Format: uuid */
      id?: string;
      /** Format: date-time */
      timestamp?: string;
      name?: string | null;
      tenantId?: string | null;
      enrolmentId?: string | null;
    };
    SocialPostBucketDto: {
      id?: string | null;
      /** Format: date-time */
      timestamp?: string | null;
      name?: string | null;
      tenantId?: string | null;
      enrolmentId?: string | null;
    };
    SocialPostBucketDtoEnvelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
      result?: components["schemas"]["SocialPostBucketDto"];
    };
    SocialPostBucketDtoListEnvelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
      result?: components["schemas"]["SocialPostBucketDto"][] | null;
    };
    SocialPostBucketUpdateDto: {
      name?: string | null;
      tenantId?: string | null;
      enrolmentId?: string | null;
    };
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}

export type $defs = Record<string, never>;

export type external = Record<string, never>;

export type operations = Record<string, never>;
