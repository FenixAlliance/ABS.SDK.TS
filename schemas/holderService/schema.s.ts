/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */


export interface paths {
  "/api/v2/Me": {
    /**
     * Gets the current user
     * @description Get the currently acting user.
     */
    get: operations["GetCurrentUserAsync"];
    /**
     * Update the current user's profile
     * @description Update the current user's profile
     */
    put: operations["UpdateCurrentUserAsync"];
    /**
     * Partially update the current user's profile
     * @description Partially update the current user's profile
     */
    patch: operations["PatchCurrentUserAsync"];
  };
  "/api/v2/Me/Extended": {
    /**
     * Get the current user's extended profile
     * @description Get the current user's extended profile
     */
    get: operations["GetExtendedCurrentUserAsync"];
  };
  "/api/v2/Me/Avatar": {
    /**
     * Get the current user's avatar
     * @description Get the current user's avatar
     */
    get: operations["GetCurrentUserAvatarAsync"];
    /**
     * Update the current user's avatar
     * @description Update the current user's avatar
     */
    post: operations["UpdateAvatarAsync"];
  };
  "/api/v2/Me/Follows": {
    /**
     * Get the social profiles that the current user follows
     * @description Get the social profiles that the current user follows
     */
    get: operations["GetCurrentUserFollowsAsync"];
  };
  "/api/v2/Me/Follows/Count": {
    /**
     * Count the social profiles that the current user follows
     * @description Count the social profiles that the current user follows
     */
    get: operations["CountCurrentUserFollowsAsync"];
  };
  "/api/v2/Me/Followers": {
    /**
     * Get the social profiles that follow the current user
     * @description Get the social profiles that follow the current user
     */
    get: operations["GetCurrentUserFollowersAsync"];
  };
  "/api/v2/Me/Followers/Count": {
    /**
     * Count the social profiles that follow the current user
     * @description Count the social profiles that follow the current user
     */
    get: operations["CountCurrentUserFollowersAsync"];
  };
  "/api/v2/Me/Businesses": {
    /**
     * Get the tenants that the current user is enrolled in
     * @description Get the tenants that the current user is enrolled in
     */
    get: operations["GetCurrentUserTenantsAsync"];
  };
  "/api/v2/Me/Businesses/Count": {
    /**
     * Count the tenants that the current user is enrolled in
     * @description Count the tenants that the current user is enrolled in
     */
    get: operations["CountCurrentUserTenantsAsync"];
  };
  "/api/v2/Me/Businesses/Extended": {
    /**
     * Get the tenants that the current user is enrolled in
     * @description Get the tenants that the current user is enrolled in
     */
    get: operations["GetCurrentUserTenantsExtendedAsync"];
  };
  "/api/v2/Me/Enrollments": {
    /**
     * Get the list of enrollments for the current user
     * @description Get the list of enrollments for the current user
     */
    get: operations["GetCurrentUserEnrollmentsAsync"];
  };
  "/api/v2/Me/Enrollments/Extended": {
    /**
     * Get the list of enrollments for the current user
     * @description Get the list of enrollments for the current user
     */
    get: operations["GetCurrentUserEnrollmentsExtendedAsync"];
  };
  "/api/v2/Me/Enrollments/{enrollmentId}": {
    /**
     * Get a single TenantEnrollment by its ID
     * @description Get a single TenantEnrollment by its ID
     */
    get: operations["GetTenantEnrollmentAsync"];
  };
  "/api/v2/Me/SocialProfile": {
    /**
     * Get the current user's social profile
     * @description Get the current user's social profile
     */
    get: operations["GetCurrentUserSocialProfileAsync"];
  };
  "/api/v2/Me/Cart": {
    /**
     * Get the current user's cart
     * @description Get the current user's cart
     */
    get: operations["GetCurrentUserCartAsync"];
  };
  "/api/v2/Me/Wallet": {
    /**
     * Get the current user's billing profile
     * @description Get the current user's billing profile
     */
    get: operations["GetCurrentUserWalletAsync"];
  };
  "/api/v2/Me/Notifications": {
    /**
     * Get the list of notifications for the current user
     * @description Get the list of notifications for the current user
     */
    get: operations["GetCurrentUserNotificationsAsync"];
  };
  "/api/v2/Me/Notifications/Count": {
    /**
     * Count the notifications for the current user
     * @description Count the notifications for the current user
     */
    get: operations["CountCurrentUserNotificationsAsync"];
  };
  "/api/v2/Me/Settings": {
    /**
     * Get the settings for the current user
     * @description Get the settings for the current user
     */
    get: operations["GetCurrentUserSettingsAsync"];
    /**
     * Update the settings for the current user
     * @description Update the settings for the current user
     */
    put: operations["UpdateCurrentUserSettingsAsync"];
  };
  "/api/v2/Me/Addresses": {
    /**
     * Get the list of addresses for the current user
     * @description Get the list of addresses for the current user
     */
    get: operations["GetCurrentUserAddressesAsync"];
  };
  "/api/v2/Me/Invitations": {
    /**
     * Get the list of tenant enrollment invitations for the current user
     * @description Get the list of tenant enrollment invitations for the current user
     */
    get: operations["GetCurrentUserInvitationAsync"];
  };
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: {
    AddressDto: {
      id?: string | null;
      /** Format: date-time */
      timestamp?: string | null;
      title?: string | null;
      business?: string | null;
      email?: string | null;
      phone?: string | null;
      fax?: string | null;
      address1?: string | null;
      address2?: string | null;
      address3?: string | null;
      unit?: string | null;
      cityId?: string | null;
      stateId?: string | null;
      postalCode?: string | null;
      countryId?: string | null;
      /** Format: double */
      longitude?: number;
      /** Format: double */
      latitude?: number;
      isRoutable?: boolean;
      isGlobalPrimary?: boolean;
      isCountryPrimary?: boolean;
      canGenerateLabels?: boolean;
      isDefaultSenderAddress?: boolean;
      isDefaultReturnAddress?: boolean;
      isDefaultSuppingLocation?: boolean;
    };
    AddressDtoListEnvelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
      result?: components["schemas"]["AddressDto"][] | null;
    };
    CartDto: {
      id?: string | null;
      ip?: string | null;
      type?: string | null;
      /** Format: double */
      total?: number;
      /** Format: double */
      taxes?: number;
      /** Format: double */
      freight?: number;
      /** Format: double */
      subTotal?: number;
      currencyId?: string | null;
      countryId?: string | null;
      /** Format: int32 */
      itemCartRecordsCount?: number | null;
      /** Format: int32 */
      itemToCompareRecordsCount?: number | null;
    };
    CartDtoEnvelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
      result?: components["schemas"]["CartDto"];
    };
    EmptyEnvelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
    };
    EnrollmentId: Record<string, never>;
    ErrorEnvelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
    };
    ExtendedTenantDto: {
      id?: string | null;
      /** Format: date-time */
      timestamp?: string | null;
      qualifiedName?: string | null;
      taxId?: string | null;
      about?: string | null;
      walletId?: string | null;
      socialFeedId?: string | null;
      businessIndustryId?: string | null;
      businessSegmentId?: string | null;
      socialProfileId?: string | null;
      languageId?: string | null;
      name?: string | null;
      duns?: string | null;
      slogan?: string | null;
      legalName?: string | null;
      coverUrl?: string | null;
      avatarUrl?: string | null;
      cartId?: string | null;
      currencyId?: string | null;
      timezoneId?: string | null;
      countryId?: string | null;
      stateId?: string | null;
      cityId?: string | null;
      email?: string | null;
      phone?: string | null;
      webUrl?: string | null;
      facebookUrl?: string | null;
      twitterUrl?: string | null;
      gitHubUrl?: string | null;
      linkedInUrl?: string | null;
      instagramUrl?: string | null;
      youTubeUrl?: string | null;
      whatsAppNumber?: string | null;
      supportPhoneNumber?: string | null;
      verified?: boolean;
      businessName?: string | null;
      businessLegalName?: string | null;
      twitterUsername?: string | null;
      cart?: components["schemas"]["CartDto"];
      wallet?: components["schemas"]["WalletDto"];
      socialProfile?: components["schemas"]["SocialProfileDto"];
    };
    ExtendedTenantDtoListEnvelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
      result?: components["schemas"]["ExtendedTenantDto"][] | null;
    };
    ExtendedTenantEnrolmentDto: {
      id?: string | null;
      /** Format: date-time */
      timestamp?: string | null;
      tenantId?: string | null;
      userId?: string | null;
      isRoot?: boolean;
      isOwner?: boolean;
      isAdmin?: boolean;
      isDisabled?: boolean;
      tenant?: components["schemas"]["TenantDto"];
      user?: components["schemas"]["UserDto"];
    };
    ExtendedTenantEnrolmentDtoListEnvelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
      result?: components["schemas"]["ExtendedTenantEnrolmentDto"][] | null;
    };
    ExtendedUserDto: {
      id?: string | null;
      /** Format: date-time */
      timestamp?: string | null;
      fullName?: string | null;
      qualifiedName?: string | null;
      publicName?: string | null;
      lastName?: string | null;
      firstName?: string | null;
      coverUrl?: string | null;
      avatarUrl?: string | null;
      gitHubUrl?: string | null;
      countryId?: string | null;
      timezoneId?: string | null;
      websiteUrl?: string | null;
      twitterUrl?: string | null;
      youTubeUrl?: string | null;
      linkedInUrl?: string | null;
      facebookUrl?: string | null;
      instagramUrl?: string | null;
      socialProfileId?: string | null;
      /** Format: date-time */
      birthday?: string | null;
      idProvider?: string | null;
      languageId?: string | null;
      /**
       * Format: int32
       * @enum {integer|null}
       */
      gender?: 0 | 1 | 2 | null;
      cityId?: string | null;
      stateId?: string | null;
      email?: string | null;
      about?: string | null;
      jobTitle?: string | null;
      socialFeedId?: string | null;
      currentTenantId?: string | null;
      currentEnrollmentId?: string | null;
      status?: string | null;
      cartId?: string | null;
      walletId?: string | null;
      userName?: string | null;
      currencyId?: string | null;
      phoneNumber?: string | null;
      publicIdentifier?: string | null;
      identityProvider?: string | null;
      phoneNumberConfirmed?: boolean;
      emailConfirmed?: boolean;
      /**
       * Format: int32
       * @enum {integer|null}
       */
      availability?: 0 | 1 | 2 | 3 | 4 | null;
      lockoutEnabled?: boolean;
      /** Format: date-time */
      lockoutEnd?: string | null;
      /** Format: int32 */
      enrollmentsCount?: number | null;
      /**
       * Format: int32
       * @enum {integer|null}
       */
      siteTheme?: 0 | 1 | 2 | null;
      cart?: components["schemas"]["CartDto"];
      wallet?: components["schemas"]["WalletDto"];
      socialProfile?: components["schemas"]["SocialProfileDto"];
      settings?: components["schemas"]["UserSettingsDto"];
    };
    ExtendedUserDtoEnvelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
      result?: components["schemas"]["ExtendedUserDto"];
    };
    FollowRecordDto: {
      id?: string | null;
      type?: string | null;
      followerID?: string | null;
      followedID?: string | null;
      alerts?: boolean;
    };
    FollowRecordDtoListEnvelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
      result?: components["schemas"]["FollowRecordDto"][] | null;
    };
    Int32Envelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
      /** Format: int32 */
      result?: number;
    };
    NotificationDto: {
      id?: string | null;
      /** Format: date-time */
      timestamp?: string | null;
      read?: boolean;
      icon?: string | null;
      message?: string | null;
      redirectUrl?: string | null;
      socialProfileID?: string | null;
      /** Format: date-time */
      readTimestamp?: string;
      /** Format: date-time */
      issuedTimestamp?: string;
    };
    NotificationDtoListEnvelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
      result?: components["schemas"]["NotificationDto"][] | null;
    };
    Operation: {
      /**
       * Format: int32
       * @enum {integer}
       */
      operationType?: 0 | 1 | 2 | 3 | 4 | 5 | 6;
      path?: string | null;
      op?: string | null;
      from?: string | null;
      value?: unknown;
    };
    SocialProfileDto: {
      id?: string | null;
      /** Format: date-time */
      timestamp?: string | null;
      name?: string | null;
      about?: string | null;
      cover?: string | null;
      avatar?: string | null;
      countryId?: string | null;
      countryName?: string | null;
      identityId?: string | null;
      /** Format: int32 */
      followsCount?: number | null;
      /** Format: int32 */
      messagesCount?: number | null;
      /** Format: int32 */
      followersCount?: number | null;
      /** Format: int32 */
      notificationsCount?: number | null;
      /** Format: int32 */
      unreadNotificationsCount?: number | null;
      /** Format: int32 */
      unreadMessagesCount?: number | null;
      /**
       * Format: int32
       * @enum {integer|null}
       */
      type?: 0 | 1 | 2 | null;
      socialFeedId?: string | null;
      twitterUrl?: string | null;
      facebookURL?: string | null;
      linkedInURL?: string | null;
      youtubeURL?: string | null;
      githubURL?: string | null;
      pinterestURL?: string | null;
      dribbleURL?: string | null;
      domain?: string | null;
      notes?: string | null;
    };
    SocialProfileDtoEnvelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
      result?: components["schemas"]["SocialProfileDto"];
    };
    TenantDto: {
      id?: string | null;
      /** Format: date-time */
      timestamp?: string | null;
      qualifiedName?: string | null;
      taxId?: string | null;
      about?: string | null;
      walletId?: string | null;
      socialFeedId?: string | null;
      businessIndustryId?: string | null;
      businessSegmentId?: string | null;
      socialProfileId?: string | null;
      languageId?: string | null;
      name?: string | null;
      duns?: string | null;
      slogan?: string | null;
      legalName?: string | null;
      coverUrl?: string | null;
      avatarUrl?: string | null;
      cartId?: string | null;
      currencyId?: string | null;
      timezoneId?: string | null;
      countryId?: string | null;
      stateId?: string | null;
      cityId?: string | null;
      email?: string | null;
      phone?: string | null;
      webUrl?: string | null;
      facebookUrl?: string | null;
      twitterUrl?: string | null;
      gitHubUrl?: string | null;
      linkedInUrl?: string | null;
      instagramUrl?: string | null;
      youTubeUrl?: string | null;
      whatsAppNumber?: string | null;
      supportPhoneNumber?: string | null;
      verified?: boolean;
      businessName?: string | null;
      businessLegalName?: string | null;
      twitterUsername?: string | null;
    };
    TenantDtoListEnvelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
      result?: components["schemas"]["TenantDto"][] | null;
    };
    TenantEnrolmentDto: {
      id?: string | null;
      /** Format: date-time */
      timestamp?: string | null;
      tenantId?: string | null;
      userId?: string | null;
      isRoot?: boolean;
      isOwner?: boolean;
      isAdmin?: boolean;
      isDisabled?: boolean;
    };
    TenantEnrolmentDtoEnvelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
      result?: components["schemas"]["TenantEnrolmentDto"];
    };
    TenantEnrolmentDtoListEnvelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
      result?: components["schemas"]["TenantEnrolmentDto"][] | null;
    };
    TenantInvitationDto: {
      id?: string | null;
      /** Format: date-time */
      timestamp?: string | null;
      tenantId?: string | null;
      revoked?: boolean;
      redeemed?: boolean;
      /** Format: date-time */
      redeemedTimestamp?: string | null;
      userEmail?: string | null;
      creatorEnrollmentId?: string | null;
      relatedEnrollmentId?: string | null;
    };
    TenantInvitationDtoListEnvelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
      result?: components["schemas"]["TenantInvitationDto"][] | null;
    };
    UserDto: {
      id?: string | null;
      /** Format: date-time */
      timestamp?: string | null;
      fullName?: string | null;
      qualifiedName?: string | null;
      publicName?: string | null;
      lastName?: string | null;
      firstName?: string | null;
      coverUrl?: string | null;
      avatarUrl?: string | null;
      gitHubUrl?: string | null;
      countryId?: string | null;
      timezoneId?: string | null;
      websiteUrl?: string | null;
      twitterUrl?: string | null;
      youTubeUrl?: string | null;
      linkedInUrl?: string | null;
      facebookUrl?: string | null;
      instagramUrl?: string | null;
      socialProfileId?: string | null;
      /** Format: date-time */
      birthday?: string | null;
      idProvider?: string | null;
      languageId?: string | null;
      /**
       * Format: int32
       * @enum {integer|null}
       */
      gender?: 0 | 1 | 2 | null;
      cityId?: string | null;
      stateId?: string | null;
      email?: string | null;
      about?: string | null;
      jobTitle?: string | null;
      socialFeedId?: string | null;
      currentTenantId?: string | null;
      currentEnrollmentId?: string | null;
      status?: string | null;
      cartId?: string | null;
      walletId?: string | null;
      userName?: string | null;
      currencyId?: string | null;
      phoneNumber?: string | null;
      publicIdentifier?: string | null;
      identityProvider?: string | null;
      phoneNumberConfirmed?: boolean;
      emailConfirmed?: boolean;
      /**
       * Format: int32
       * @enum {integer|null}
       */
      availability?: 0 | 1 | 2 | 3 | 4 | null;
      lockoutEnabled?: boolean;
      /** Format: date-time */
      lockoutEnd?: string | null;
      /** Format: int32 */
      enrollmentsCount?: number | null;
      /**
       * Format: int32
       * @enum {integer|null}
       */
      siteTheme?: 0 | 1 | 2 | null;
    };
    UserDtoEnvelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
      result?: components["schemas"]["UserDto"];
    };
    UserSettingsDto: {
      id?: string | null;
      /** Format: date-time */
      timestamp?: string | null;
      /** Format: int32 */
      pageSize?: number;
      dateFormat?: string | null;
      currencyFormat?: string | null;
      dateTimeFormat?: string | null;
      /**
       * Format: int32
       * @enum {integer}
       */
      siteTheme?: 0 | 1 | 2;
    };
    UserSettingsDtoEnvelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
      result?: components["schemas"]["UserSettingsDto"];
    };
    UserSettingsUpdateDto: {
      /** Format: int32 */
      pageSize?: number | null;
      dateFormat: string;
      currencyFormat: string;
      dateTimeFormat: string;
      /**
       * Format: int32
       * @enum {integer}
       */
      siteTheme: 0 | 1 | 2;
    };
    UserUpdateDto: {
      /** Format: date-time */
      birthday?: string | null;
      firstName?: string | null;
      lastName?: string | null;
      publicName?: string | null;
      idProvider?: string | null;
      languageId?: string | null;
      timezoneId?: string | null;
      gender?: string | null;
      cityId?: string | null;
      currencyId?: string | null;
      status?: string | null;
      stateId?: string | null;
      about?: string | null;
      webUrl?: string | null;
      jobTitle?: string | null;
      coverUrl?: string | null;
      avatarUrl?: string | null;
      gitHubUrl?: string | null;
      websiteUrl?: string | null;
      twitterUrl?: string | null;
      facebookUrl?: string | null;
      youTubeUrl?: string | null;
      linkedInUrl?: string | null;
      instagramUrl?: string | null;
      countryId?: string | null;
      githubUsername?: string | null;
      /**
       * Format: int32
       * @enum {integer}
       */
      availability?: 0 | 1 | 2 | 3 | 4;
    };
    WalletDto: {
      id?: string | null;
      /** Format: date-time */
      timestamp?: string;
      /** Format: double */
      balance?: number;
      /** Format: double */
      cryptoBalance?: number;
      testMode?: boolean;
      verified?: boolean;
      type?: string | null;
      currencyId?: string | null;
      /** Format: double */
      forexRate?: number;
      /** Format: double */
      balanceInUsd?: number;
      /** Format: double */
      mainNetEtherBalance?: number;
      ethereumAddress?: string | null;
      ethereumPublicKey?: string | null;
      ethereumPrivateKey?: string | null;
      /** Format: double */
      rollingReservePercent?: number;
    };
    WalletDtoEnvelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
      result?: components["schemas"]["WalletDto"];
    };
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}

export type $defs = Record<string, never>;

export type external = Record<string, never>;

export interface operations {

  /**
   * Gets the current user
   * @description Get the currently acting user.
   */
  GetCurrentUserAsync: {
    parameters: {
      query?: {
        "api-version"?: string;
      };
      header?: {
        "x-api-version"?: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["UserDtoEnvelope"];
          "application/xml": components["schemas"]["UserDtoEnvelope"];
          "multipart/form-data": components["schemas"]["UserDtoEnvelope"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json": components["schemas"]["ErrorEnvelope"];
          "application/xml": components["schemas"]["ErrorEnvelope"];
          "multipart/form-data": components["schemas"]["ErrorEnvelope"];
        };
      };
    };
  };
  /**
   * Update the current user's profile
   * @description Update the current user's profile
   */
  UpdateCurrentUserAsync: {
    parameters: {
      query?: {
        "api-version"?: string;
      };
      header?: {
        "x-api-version"?: string;
      };
    };
    requestBody?: {
      content: {
        "application/json": components["schemas"]["UserUpdateDto"];
        "application/xml": components["schemas"]["UserUpdateDto"];
        "multipart/form-data": components["schemas"]["UserUpdateDto"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["EmptyEnvelope"];
          "application/xml": components["schemas"]["EmptyEnvelope"];
          "multipart/form-data": components["schemas"]["EmptyEnvelope"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json": components["schemas"]["ErrorEnvelope"];
          "application/xml": components["schemas"]["ErrorEnvelope"];
          "multipart/form-data": components["schemas"]["ErrorEnvelope"];
        };
      };
    };
  };
  /**
   * Partially update the current user's profile
   * @description Partially update the current user's profile
   */
  PatchCurrentUserAsync: {
    parameters: {
      query?: {
        "api-version"?: string;
      };
      header?: {
        "x-api-version"?: string;
      };
    };
    requestBody?: {
      content: {
        "application/json": components["schemas"]["Operation"][];
        "application/xml": components["schemas"]["Operation"][];
        "multipart/form-data": components["schemas"]["Operation"][];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["EmptyEnvelope"];
          "application/xml": components["schemas"]["EmptyEnvelope"];
          "multipart/form-data": components["schemas"]["EmptyEnvelope"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json": components["schemas"]["ErrorEnvelope"];
          "application/xml": components["schemas"]["ErrorEnvelope"];
          "multipart/form-data": components["schemas"]["ErrorEnvelope"];
        };
      };
    };
  };
  /**
   * Get the current user's extended profile
   * @description Get the current user's extended profile
   */
  GetExtendedCurrentUserAsync: {
    parameters: {
      query?: {
        "api-version"?: string;
      };
      header?: {
        "x-api-version"?: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["ExtendedUserDtoEnvelope"];
          "application/xml": components["schemas"]["ExtendedUserDtoEnvelope"];
          "multipart/form-data": components["schemas"]["ExtendedUserDtoEnvelope"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json": components["schemas"]["ErrorEnvelope"];
          "application/xml": components["schemas"]["ErrorEnvelope"];
          "multipart/form-data": components["schemas"]["ErrorEnvelope"];
        };
      };
    };
  };
  /**
   * Get the current user's avatar
   * @description Get the current user's avatar
   */
  GetCurrentUserAvatarAsync: {
    parameters: {
      query?: {
        "api-version"?: string;
      };
      header?: {
        "x-api-version"?: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": string;
          "application/xml": string;
          "multipart/form-data": string;
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json": components["schemas"]["ErrorEnvelope"];
          "application/xml": components["schemas"]["ErrorEnvelope"];
          "multipart/form-data": components["schemas"]["ErrorEnvelope"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json": components["schemas"]["ErrorEnvelope"];
          "application/xml": components["schemas"]["ErrorEnvelope"];
          "multipart/form-data": components["schemas"]["ErrorEnvelope"];
        };
      };
    };
  };
  /**
   * Update the current user's avatar
   * @description Update the current user's avatar
   */
  UpdateAvatarAsync: {
    parameters: {
      query?: {
        "api-version"?: string;
      };
      header?: {
        "x-api-version"?: string;
      };
    };
    requestBody?: {
      content: {
        "multipart/form-data": {
          /** Format: binary */
          avatar?: string;
        };
        "application/json": {
          /** Format: binary */
          avatar?: string;
        };
        "application/xml": {
          /** Format: binary */
          avatar?: string;
        };
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["EmptyEnvelope"];
          "application/xml": components["schemas"]["EmptyEnvelope"];
          "multipart/form-data": components["schemas"]["EmptyEnvelope"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json": components["schemas"]["ErrorEnvelope"];
          "application/xml": components["schemas"]["ErrorEnvelope"];
          "multipart/form-data": components["schemas"]["ErrorEnvelope"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json": components["schemas"]["ErrorEnvelope"];
          "application/xml": components["schemas"]["ErrorEnvelope"];
          "multipart/form-data": components["schemas"]["ErrorEnvelope"];
        };
      };
    };
  };
  /**
   * Get the social profiles that the current user follows
   * @description Get the social profiles that the current user follows
   */
  GetCurrentUserFollowsAsync: {
    parameters: {
      query?: {
        "api-version"?: string;
      };
      header?: {
        "x-api-version"?: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["FollowRecordDtoListEnvelope"];
          "application/xml": components["schemas"]["FollowRecordDtoListEnvelope"];
          "multipart/form-data": components["schemas"]["FollowRecordDtoListEnvelope"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json": components["schemas"]["ErrorEnvelope"];
          "application/xml": components["schemas"]["ErrorEnvelope"];
          "multipart/form-data": components["schemas"]["ErrorEnvelope"];
        };
      };
    };
  };
  /**
   * Count the social profiles that the current user follows
   * @description Count the social profiles that the current user follows
   */
  CountCurrentUserFollowsAsync: {
    parameters: {
      query?: {
        "api-version"?: string;
      };
      header?: {
        "x-api-version"?: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["Int32Envelope"];
          "application/xml": components["schemas"]["Int32Envelope"];
          "multipart/form-data": components["schemas"]["Int32Envelope"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json": components["schemas"]["ErrorEnvelope"];
          "application/xml": components["schemas"]["ErrorEnvelope"];
          "multipart/form-data": components["schemas"]["ErrorEnvelope"];
        };
      };
    };
  };
  /**
   * Get the social profiles that follow the current user
   * @description Get the social profiles that follow the current user
   */
  GetCurrentUserFollowersAsync: {
    parameters: {
      query?: {
        "api-version"?: string;
      };
      header?: {
        "x-api-version"?: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["FollowRecordDtoListEnvelope"];
          "application/xml": components["schemas"]["FollowRecordDtoListEnvelope"];
          "multipart/form-data": components["schemas"]["FollowRecordDtoListEnvelope"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json": components["schemas"]["ErrorEnvelope"];
          "application/xml": components["schemas"]["ErrorEnvelope"];
          "multipart/form-data": components["schemas"]["ErrorEnvelope"];
        };
      };
    };
  };
  /**
   * Count the social profiles that follow the current user
   * @description Count the social profiles that follow the current user
   */
  CountCurrentUserFollowersAsync: {
    parameters: {
      query?: {
        "api-version"?: string;
      };
      header?: {
        "x-api-version"?: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["Int32Envelope"];
          "application/xml": components["schemas"]["Int32Envelope"];
          "multipart/form-data": components["schemas"]["Int32Envelope"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json": components["schemas"]["ErrorEnvelope"];
          "application/xml": components["schemas"]["ErrorEnvelope"];
          "multipart/form-data": components["schemas"]["ErrorEnvelope"];
        };
      };
    };
  };
  /**
   * Get the tenants that the current user is enrolled in
   * @description Get the tenants that the current user is enrolled in
   */
  GetCurrentUserTenantsAsync: {
    parameters: {
      query?: {
        "api-version"?: string;
      };
      header?: {
        "x-api-version"?: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["TenantDtoListEnvelope"];
          "application/xml": components["schemas"]["TenantDtoListEnvelope"];
          "multipart/form-data": components["schemas"]["TenantDtoListEnvelope"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json": components["schemas"]["ErrorEnvelope"];
          "application/xml": components["schemas"]["ErrorEnvelope"];
          "multipart/form-data": components["schemas"]["ErrorEnvelope"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json": components["schemas"]["ErrorEnvelope"];
          "application/xml": components["schemas"]["ErrorEnvelope"];
          "multipart/form-data": components["schemas"]["ErrorEnvelope"];
        };
      };
    };
  };
  /**
   * Count the tenants that the current user is enrolled in
   * @description Count the tenants that the current user is enrolled in
   */
  CountCurrentUserTenantsAsync: {
    parameters: {
      query?: {
        "api-version"?: string;
      };
      header?: {
        "x-api-version"?: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["Int32Envelope"];
          "application/xml": components["schemas"]["Int32Envelope"];
          "multipart/form-data": components["schemas"]["Int32Envelope"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json": components["schemas"]["ErrorEnvelope"];
          "application/xml": components["schemas"]["ErrorEnvelope"];
          "multipart/form-data": components["schemas"]["ErrorEnvelope"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json": components["schemas"]["ErrorEnvelope"];
          "application/xml": components["schemas"]["ErrorEnvelope"];
          "multipart/form-data": components["schemas"]["ErrorEnvelope"];
        };
      };
    };
  };
  /**
   * Get the tenants that the current user is enrolled in
   * @description Get the tenants that the current user is enrolled in
   */
  GetCurrentUserTenantsExtendedAsync: {
    parameters: {
      query?: {
        "api-version"?: string;
      };
      header?: {
        "x-api-version"?: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["ExtendedTenantDtoListEnvelope"];
          "application/xml": components["schemas"]["ExtendedTenantDtoListEnvelope"];
          "multipart/form-data": components["schemas"]["ExtendedTenantDtoListEnvelope"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json": components["schemas"]["ErrorEnvelope"];
          "application/xml": components["schemas"]["ErrorEnvelope"];
          "multipart/form-data": components["schemas"]["ErrorEnvelope"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json": components["schemas"]["ErrorEnvelope"];
          "application/xml": components["schemas"]["ErrorEnvelope"];
          "multipart/form-data": components["schemas"]["ErrorEnvelope"];
        };
      };
    };
  };
  /**
   * Get the list of enrollments for the current user
   * @description Get the list of enrollments for the current user
   */
  GetCurrentUserEnrollmentsAsync: {
    parameters: {
      query?: {
        "api-version"?: string;
      };
      header?: {
        "x-api-version"?: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["TenantEnrolmentDtoListEnvelope"];
          "application/xml": components["schemas"]["TenantEnrolmentDtoListEnvelope"];
          "multipart/form-data": components["schemas"]["TenantEnrolmentDtoListEnvelope"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json": components["schemas"]["ErrorEnvelope"];
          "application/xml": components["schemas"]["ErrorEnvelope"];
          "multipart/form-data": components["schemas"]["ErrorEnvelope"];
        };
      };
    };
  };
  /**
   * Get the list of enrollments for the current user
   * @description Get the list of enrollments for the current user
   */
  GetCurrentUserEnrollmentsExtendedAsync: {
    parameters: {
      query?: {
        "api-version"?: string;
      };
      header?: {
        "x-api-version"?: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["ExtendedTenantEnrolmentDtoListEnvelope"];
          "application/xml": components["schemas"]["ExtendedTenantEnrolmentDtoListEnvelope"];
          "multipart/form-data": components["schemas"]["ExtendedTenantEnrolmentDtoListEnvelope"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json": components["schemas"]["ErrorEnvelope"];
          "application/xml": components["schemas"]["ErrorEnvelope"];
          "multipart/form-data": components["schemas"]["ErrorEnvelope"];
        };
      };
    };
  };
  /**
   * Get a single TenantEnrollment by its ID
   * @description Get a single TenantEnrollment by its ID
   */
  GetTenantEnrollmentAsync: {
    parameters: {
      query?: {
        "api-version"?: string;
      };
      header?: {
        "x-api-version"?: string;
      };
      path: {
        enrollmentId: string;
      };
    };
    requestBody?: {
      content: {
        "application/json": components["schemas"]["EnrollmentId"];
        "application/xml": components["schemas"]["EnrollmentId"];
        "multipart/form-data": components["schemas"]["EnrollmentId"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["TenantEnrolmentDtoEnvelope"];
          "application/xml": components["schemas"]["TenantEnrolmentDtoEnvelope"];
          "multipart/form-data": components["schemas"]["TenantEnrolmentDtoEnvelope"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json": components["schemas"]["ErrorEnvelope"];
          "application/xml": components["schemas"]["ErrorEnvelope"];
          "multipart/form-data": components["schemas"]["ErrorEnvelope"];
        };
      };
    };
  };
  /**
   * Get the current user's social profile
   * @description Get the current user's social profile
   */
  GetCurrentUserSocialProfileAsync: {
    parameters: {
      query?: {
        "api-version"?: string;
      };
      header?: {
        "x-api-version"?: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["SocialProfileDtoEnvelope"];
          "application/xml": components["schemas"]["SocialProfileDtoEnvelope"];
          "multipart/form-data": components["schemas"]["SocialProfileDtoEnvelope"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json": components["schemas"]["ErrorEnvelope"];
          "application/xml": components["schemas"]["ErrorEnvelope"];
          "multipart/form-data": components["schemas"]["ErrorEnvelope"];
        };
      };
    };
  };
  /**
   * Get the current user's cart
   * @description Get the current user's cart
   */
  GetCurrentUserCartAsync: {
    parameters: {
      query?: {
        "api-version"?: string;
      };
      header?: {
        "x-api-version"?: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["CartDtoEnvelope"];
          "application/xml": components["schemas"]["CartDtoEnvelope"];
          "multipart/form-data": components["schemas"]["CartDtoEnvelope"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json": components["schemas"]["ErrorEnvelope"];
          "application/xml": components["schemas"]["ErrorEnvelope"];
          "multipart/form-data": components["schemas"]["ErrorEnvelope"];
        };
      };
    };
  };
  /**
   * Get the current user's billing profile
   * @description Get the current user's billing profile
   */
  GetCurrentUserWalletAsync: {
    parameters: {
      query?: {
        "api-version"?: string;
      };
      header?: {
        "x-api-version"?: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["WalletDtoEnvelope"];
          "application/xml": components["schemas"]["WalletDtoEnvelope"];
          "multipart/form-data": components["schemas"]["WalletDtoEnvelope"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json": components["schemas"]["ErrorEnvelope"];
          "application/xml": components["schemas"]["ErrorEnvelope"];
          "multipart/form-data": components["schemas"]["ErrorEnvelope"];
        };
      };
    };
  };
  /**
   * Get the list of notifications for the current user
   * @description Get the list of notifications for the current user
   */
  GetCurrentUserNotificationsAsync: {
    parameters: {
      query?: {
        "api-version"?: string;
      };
      header?: {
        "x-api-version"?: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["NotificationDtoListEnvelope"];
          "application/xml": components["schemas"]["NotificationDtoListEnvelope"];
          "multipart/form-data": components["schemas"]["NotificationDtoListEnvelope"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json": components["schemas"]["ErrorEnvelope"];
          "application/xml": components["schemas"]["ErrorEnvelope"];
          "multipart/form-data": components["schemas"]["ErrorEnvelope"];
        };
      };
    };
  };
  /**
   * Count the notifications for the current user
   * @description Count the notifications for the current user
   */
  CountCurrentUserNotificationsAsync: {
    parameters: {
      query?: {
        "api-version"?: string;
      };
      header?: {
        "x-api-version"?: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["Int32Envelope"];
          "application/xml": components["schemas"]["Int32Envelope"];
          "multipart/form-data": components["schemas"]["Int32Envelope"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json": components["schemas"]["ErrorEnvelope"];
          "application/xml": components["schemas"]["ErrorEnvelope"];
          "multipart/form-data": components["schemas"]["ErrorEnvelope"];
        };
      };
    };
  };
  /**
   * Get the settings for the current user
   * @description Get the settings for the current user
   */
  GetCurrentUserSettingsAsync: {
    parameters: {
      query?: {
        "api-version"?: string;
      };
      header?: {
        "x-api-version"?: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["UserSettingsDtoEnvelope"];
          "application/xml": components["schemas"]["UserSettingsDtoEnvelope"];
          "multipart/form-data": components["schemas"]["UserSettingsDtoEnvelope"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json": components["schemas"]["ErrorEnvelope"];
          "application/xml": components["schemas"]["ErrorEnvelope"];
          "multipart/form-data": components["schemas"]["ErrorEnvelope"];
        };
      };
    };
  };
  /**
   * Update the settings for the current user
   * @description Update the settings for the current user
   */
  UpdateCurrentUserSettingsAsync: {
    parameters: {
      query?: {
        "api-version"?: string;
      };
      header?: {
        "x-api-version"?: string;
      };
    };
    requestBody?: {
      content: {
        "application/json": components["schemas"]["UserSettingsUpdateDto"];
        "application/xml": components["schemas"]["UserSettingsUpdateDto"];
        "multipart/form-data": components["schemas"]["UserSettingsUpdateDto"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["UserSettingsDtoEnvelope"];
          "application/xml": components["schemas"]["UserSettingsDtoEnvelope"];
          "multipart/form-data": components["schemas"]["UserSettingsDtoEnvelope"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json": components["schemas"]["ErrorEnvelope"];
          "application/xml": components["schemas"]["ErrorEnvelope"];
          "multipart/form-data": components["schemas"]["ErrorEnvelope"];
        };
      };
    };
  };
  /**
   * Get the list of addresses for the current user
   * @description Get the list of addresses for the current user
   */
  GetCurrentUserAddressesAsync: {
    parameters: {
      query?: {
        "api-version"?: string;
      };
      header?: {
        "x-api-version"?: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["AddressDtoListEnvelope"];
          "application/xml": components["schemas"]["AddressDtoListEnvelope"];
          "multipart/form-data": components["schemas"]["AddressDtoListEnvelope"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json": components["schemas"]["ErrorEnvelope"];
          "application/xml": components["schemas"]["ErrorEnvelope"];
          "multipart/form-data": components["schemas"]["ErrorEnvelope"];
        };
      };
    };
  };
  /**
   * Get the list of tenant enrollment invitations for the current user
   * @description Get the list of tenant enrollment invitations for the current user
   */
  GetCurrentUserInvitationAsync: {
    parameters: {
      query?: {
        "api-version"?: string;
      };
      header?: {
        "x-api-version"?: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["TenantInvitationDtoListEnvelope"];
          "application/xml": components["schemas"]["TenantInvitationDtoListEnvelope"];
          "multipart/form-data": components["schemas"]["TenantInvitationDtoListEnvelope"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json": components["schemas"]["ErrorEnvelope"];
          "application/xml": components["schemas"]["ErrorEnvelope"];
          "multipart/form-data": components["schemas"]["ErrorEnvelope"];
        };
      };
    };
  };
}
