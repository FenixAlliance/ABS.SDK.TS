/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */


export interface paths {
  "/api/v2/ContentService/BlogPostAuthors": {
    get: {
      parameters: {
        query?: {
          tenantId?: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["BlogPostDtoListEnvelope"];
            "application/xml": components["schemas"]["BlogPostDtoListEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/ContentService/BlogPostAuthors/{authorId}": {
    get: {
      parameters: {
        query?: {
          tenantId?: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          authorId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["BlogPostDtoListEnvelope"];
            "application/xml": components["schemas"]["BlogPostDtoListEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/ContentService/BlogPostAuthors/{authorId}/BlogPosts": {
    get: {
      parameters: {
        query?: {
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          authorId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["BlogPostDtoListEnvelope"];
            "application/xml": components["schemas"]["BlogPostDtoListEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/ContentService/BlogPostAuthors/{authorId}/BlogPosts/Count": {
    get: {
      parameters: {
        query?: {
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          authorId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["Int32Envelope"];
            "application/xml": components["schemas"]["Int32Envelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/ContentService/BlogPostCategories/{tenantId}": {
    get: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["BlogPostCategoryDtoEnvelope"];
            "application/xml": components["schemas"]["BlogPostCategoryDtoEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    post: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["BlogPostCategoryCreateDto"];
          "application/xml": components["schemas"]["BlogPostCategoryCreateDto"];
        };
      };
      responses: {
        /** @description Created */
        201: {
          content: {
            "application/json": components["schemas"]["EmptyEnvelope"];
            "application/xml": components["schemas"]["EmptyEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/ContentService/BlogPostCategories/{tenantId}/{blogPostCategoryId}": {
    get: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          blogPostCategoryId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["BlogPostCategoryDtoEnvelope"][];
            "application/xml": components["schemas"]["BlogPostCategoryDtoEnvelope"][];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    put: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          blogPostCategoryId: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["BlogPostCategoryUpdateDto"];
          "application/xml": components["schemas"]["BlogPostCategoryUpdateDto"];
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["EmptyEnvelope"];
            "application/xml": components["schemas"]["EmptyEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    delete: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          blogPostCategoryId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["EmptyEnvelope"];
            "application/xml": components["schemas"]["EmptyEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    patch: {
      parameters: {
        query: {
          tenantId: string;
          blogPostId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          blogPostCategoryId: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["Operation"][];
          "application/xml": components["schemas"]["Operation"][];
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["EmptyEnvelope"];
            "application/xml": components["schemas"]["EmptyEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/ContentService/BlogPosts": {
    get: {
      parameters: {
        query?: {
          tenantId?: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["BlogPostDtoListEnvelope"];
            "application/xml": components["schemas"]["BlogPostDtoListEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    post: {
      parameters: {
        query: {
          tenantId: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["BlogPostCreateDto"];
          "application/xml": components["schemas"]["BlogPostCreateDto"];
        };
      };
      responses: {
        /** @description Created */
        201: {
          content: {
            "application/json": components["schemas"]["EmptyEnvelope"];
            "application/xml": components["schemas"]["EmptyEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/ContentService/BlogPosts/Count": {
    get: {
      parameters: {
        query?: {
          tenantId?: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["Int32Envelope"];
            "application/xml": components["schemas"]["Int32Envelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/ContentService/BlogPosts/{blogPostId}": {
    get: {
      parameters: {
        path: {
          blogPostId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["BlogPostDtoEnvelope"];
            "application/xml": components["schemas"]["BlogPostDtoEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    put: {
      parameters: {
        query: {
          tenantId: string;
        };
        path: {
          blogPostId: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["BlogPostUpdateDto"];
          "application/xml": components["schemas"]["BlogPostUpdateDto"];
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["EmptyEnvelope"];
            "application/xml": components["schemas"]["EmptyEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    delete: {
      parameters: {
        query: {
          tenantId: string;
        };
        path: {
          blogPostId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["EmptyEnvelope"];
            "application/xml": components["schemas"]["EmptyEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    patch: {
      parameters: {
        query: {
          tenantId: string;
        };
        path: {
          blogPostId: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["Operation"][];
          "application/xml": components["schemas"]["Operation"][];
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["EmptyEnvelope"];
            "application/xml": components["schemas"]["EmptyEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/ContentService/BlogPosts/{blogPostId}/Tags": {
    get: {
      parameters: {
        path: {
          blogPostId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["BlogPostTagDtoListEnvelope"];
            "application/xml": components["schemas"]["BlogPostTagDtoListEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    post: {
      parameters: {
        query: {
          tenantId: string;
        };
        path: {
          blogPostId: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["BlogPostTagCreateDto"];
          "application/xml": components["schemas"]["BlogPostTagCreateDto"];
        };
      };
      responses: {
        /** @description Created */
        201: {
          content: {
            "application/json": components["schemas"]["EmptyEnvelope"];
            "application/xml": components["schemas"]["EmptyEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/ContentService/BlogPosts/{blogPostId}/Tags/{tagId}": {
    post: {
      parameters: {
        query: {
          tenantId: string;
        };
        path: {
          blogPostId: string;
          tagId: string;
        };
      };
      responses: {
        /** @description Created */
        201: {
          content: {
            "application/json": components["schemas"]["EmptyEnvelope"];
            "application/xml": components["schemas"]["EmptyEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    delete: {
      parameters: {
        query: {
          tenantId: string;
        };
        path: {
          blogPostId: string;
          tagId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["EmptyEnvelope"];
            "application/xml": components["schemas"]["EmptyEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/ContentService/BlogPosts/{blogPostId}/Categories": {
    get: {
      parameters: {
        path: {
          blogPostId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["BlogPostCategoryDtoListEnvelope"];
            "application/xml": components["schemas"]["BlogPostCategoryDtoListEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    post: {
      parameters: {
        query: {
          tenantId: string;
        };
        path: {
          blogPostId: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["BlogPostCategoryCreateDto"];
          "application/xml": components["schemas"]["BlogPostCategoryCreateDto"];
        };
      };
      responses: {
        /** @description Created */
        201: {
          content: {
            "application/json": components["schemas"]["EmptyEnvelope"];
            "application/xml": components["schemas"]["EmptyEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/ContentService/BlogPosts/{blogPostId}/Categories/{categoryId}": {
    post: {
      parameters: {
        query: {
          tenantId: string;
        };
        path: {
          blogPostId: string;
          categoryId: string;
        };
      };
      responses: {
        /** @description Created */
        201: {
          content: {
            "application/json": components["schemas"]["EmptyEnvelope"];
            "application/xml": components["schemas"]["EmptyEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    delete: {
      parameters: {
        query: {
          tenantId: string;
        };
        path: {
          blogPostId: string;
          categoryId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["EmptyEnvelope"];
            "application/xml": components["schemas"]["EmptyEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/ContentService/BlogPosts/{blogPostId}/Comments": {
    get: {
      parameters: {
        path: {
          blogPostId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["BlogPostCommentDtoListEnvelope"];
            "application/xml": components["schemas"]["BlogPostCommentDtoListEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    post: {
      parameters: {
        query: {
          tenantId: string;
        };
        path: {
          blogPostId: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["BlogPostCommentCreateDto"];
          "application/xml": components["schemas"]["BlogPostCommentCreateDto"];
        };
      };
      responses: {
        /** @description Created */
        201: {
          content: {
            "application/json": components["schemas"]["EmptyEnvelope"];
            "application/xml": components["schemas"]["EmptyEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/ContentService/BlogPosts/{blogPostId}/Comments/{commentId}/Replies": {
    get: {
      parameters: {
        path: {
          commentId: string;
          blogPostId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["BlogPostCommentDtoListEnvelope"];
            "application/xml": components["schemas"]["BlogPostCommentDtoListEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/ContentService/BlogPosts/{blogPostId}/Comments/{commentId}/Reply": {
    post: {
      parameters: {
        query: {
          tenantId: string;
        };
        path: {
          blogPostId: string;
          commentId: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["BlogPostCommentCreateDto"];
          "application/xml": components["schemas"]["BlogPostCommentCreateDto"];
        };
      };
      responses: {
        /** @description Created */
        201: {
          content: {
            "application/json": components["schemas"]["EmptyEnvelope"];
            "application/xml": components["schemas"]["EmptyEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/ContentService/BlogPosts/{blogPostId}/Comments/{commentId}": {
    delete: {
      parameters: {
        query: {
          tenantId: string;
        };
        path: {
          blogPostId: string;
          commentId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["EmptyEnvelope"];
            "application/xml": components["schemas"]["EmptyEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/ContentService/BlogPostTags": {
    get: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["BlogPostTagDtoListEnvelope"];
            "application/xml": components["schemas"]["BlogPostTagDtoListEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    post: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["BlogPostTagCreateDto"];
          "application/xml": components["schemas"]["BlogPostTagCreateDto"];
        };
      };
      responses: {
        /** @description Created */
        201: {
          content: {
            "application/json": components["schemas"]["EmptyEnvelope"];
            "application/xml": components["schemas"]["EmptyEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/ContentService/BlogPostTags/{blogPostTagId}": {
    get: {
      parameters: {
        query?: {
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          blogPostTagId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["BlogPostTagDtoEnvelope"];
            "application/xml": components["schemas"]["BlogPostTagDtoEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    put: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          blogPostTagId: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["BlogPostTagUpdateDto"];
          "application/xml": components["schemas"]["BlogPostTagUpdateDto"];
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["EmptyEnvelope"];
            "application/xml": components["schemas"]["EmptyEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    delete: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          blogPostTagId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["EmptyEnvelope"];
            "application/xml": components["schemas"]["EmptyEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    patch: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          blogPostTagId: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["BlogPostTagUpdateDto"];
          "application/xml": components["schemas"]["BlogPostTagUpdateDto"];
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["EmptyEnvelope"];
            "application/xml": components["schemas"]["EmptyEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/ContentService/Portals/Root": {
    /**
     * Get the root portal
     * @description Get the root portal of the this server instance
     */
    get: operations["GetRootWebPortalAsync"];
  };
  "/api/v2/ContentService/Portals/Current": {
    /**
     * Get the current portal
     * @description Get the current portal of the this server instance
     */
    get: operations["GetCurrentWebPortalAsync"];
  };
  "/api/v2/ContentService/Portals/Initialize": {
    /**
     * Initialize the current portal
     * @description Initialize the current portal for the current user.
     */
    get: operations["InitializeCurrentWebPortalAsync"];
  };
  "/api/v2/ContentService/Portals/Current/Options": {
    /**
     * Get the current portal's options
     * @description Get the current portal's options for the current user.
     */
    get: operations["GetCurrentWebPortalOptionsAsync"];
  };
  "/api/v2/ContentService/Portals/Search": {
    /**
     * Search for a portal by its domain
     * @description Search for a portal by its domain
     */
    get: operations["SearchWebPortalAsync"];
  };
  "/api/v2/ContentService/Portals/{portalId}": {
    /**
     * Get a web portal by its ID
     * @description Get a web portal by its ID
     */
    get: operations["GetWebPortalByIdAsync"];
    /**
     * Update an existing web portal
     * @description Update an existing web portal
     */
    put: operations["UpdateWebPortalAsync"];
    /**
     * Delete a web portal
     * @description Delete a web portal
     */
    delete: operations["DeleteWebPortalAsync"];
    /**
     * Partially update a web portal
     * @description Partially update a web portal
     */
    patch: operations["PatchWebPortalAsync"];
  };
  "/api/v2/ContentService/Portals/{portalId}/Settings": {
    /**
     * Get a web portal's settings by its ID
     * @description Get a web portal's settings by its ID
     */
    get: operations["GetWebPortalSettingsAsync"];
  };
  "/api/v2/ContentService/Portals/{portalId}/Options": {
    /**
     * Get a web portal's options by its ID
     * @description Get a web portal's options by its ID
     */
    get: operations["GetWebPortalOptionsAsync"];
  };
  "/api/v2/ContentService/Portals": {
    /**
     * Create a new web portal
     * @description Create a new web portal
     */
    post: operations["CreateWebPortalAsync"];
  };
  "/api/v2/ContentService/Themes/Update": {
    get: {
      parameters: {
        query?: {
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
      };
      responses: {
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/ContentService/WebContents": {
    get: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["WebContentDtoListEnvelope"];
            "application/xml": components["schemas"]["WebContentDtoListEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    post: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["WebContentCreateDto"];
          "application/xml": components["schemas"]["WebContentCreateDto"];
        };
      };
      responses: {
        /** @description Created */
        201: {
          content: {
            "application/json": components["schemas"]["EmptyEnvelope"];
            "application/xml": components["schemas"]["EmptyEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/ContentService/WebContents/{webContentId}": {
    get: {
      parameters: {
        query?: {
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          webContentId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["WebContentDtoEnvelope"];
            "application/xml": components["schemas"]["WebContentDtoEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    put: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          webContentId: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["WebContentUpdateDto"];
          "application/xml": components["schemas"]["WebContentUpdateDto"];
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["EmptyEnvelope"];
            "application/xml": components["schemas"]["EmptyEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    delete: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          webContentId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["EmptyEnvelope"];
            "application/xml": components["schemas"]["EmptyEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    patch: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          webContentId: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["Operation"][];
          "application/xml": components["schemas"]["Operation"][];
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["EmptyEnvelope"];
            "application/xml": components["schemas"]["EmptyEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/ContentService/WebPageCategories": {
    get: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["WebPageCategoryDtoListEnvelope"];
            "application/xml": components["schemas"]["WebPageCategoryDtoListEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    post: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["WebPageCategoryCreateDto"];
          "application/xml": components["schemas"]["WebPageCategoryCreateDto"];
        };
      };
      responses: {
        /** @description Created */
        201: {
          content: {
            "application/json": components["schemas"]["EmptyEnvelope"];
            "application/xml": components["schemas"]["EmptyEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/ContentService/WebPageCategories/{webPageCategoryId}": {
    get: {
      parameters: {
        query?: {
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          webPageCategoryId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["WebPageCategoryDtoEnvelope"];
            "application/xml": components["schemas"]["WebPageCategoryDtoEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    put: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          webPageCategoryId: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["WebPageCategoryUpdateDto"];
          "application/xml": components["schemas"]["WebPageCategoryUpdateDto"];
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["EmptyEnvelope"];
            "application/xml": components["schemas"]["EmptyEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    delete: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          webPageCategoryId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["EmptyEnvelope"];
            "application/xml": components["schemas"]["EmptyEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    patch: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          webPageCategoryId: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["Operation"][];
          "application/xml": components["schemas"]["Operation"][];
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["EmptyEnvelope"];
            "application/xml": components["schemas"]["EmptyEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/ContentService/WebPages": {
    get: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["WebPageDtoListEnvelope"];
            "application/xml": components["schemas"]["WebPageDtoListEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    post: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["WebPageCreateDto"];
          "application/xml": components["schemas"]["WebPageCreateDto"];
        };
      };
      responses: {
        /** @description Created */
        201: {
          content: {
            "application/json": components["schemas"]["EmptyEnvelope"];
            "application/xml": components["schemas"]["EmptyEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/ContentService/WebPages/{webPageId}": {
    get: {
      parameters: {
        query?: {
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          webPageId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["WebPageDtoEnvelope"];
            "application/xml": components["schemas"]["WebPageDtoEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    put: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          webPageId: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["WebPageUpdateDto"];
          "application/xml": components["schemas"]["WebPageUpdateDto"];
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["EmptyEnvelope"];
            "application/xml": components["schemas"]["EmptyEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    delete: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          webPageId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["EmptyEnvelope"];
            "application/xml": components["schemas"]["EmptyEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    patch: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          webPageId: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["Operation"][];
          "application/xml": components["schemas"]["Operation"][];
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["EmptyEnvelope"];
            "application/xml": components["schemas"]["EmptyEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/ContentService/WebPages/{webPageId}/Tags": {
    get: {
      parameters: {
        query?: {
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          webPageId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["WebPageTagDtoListEnvelope"];
            "application/xml": components["schemas"]["WebPageTagDtoListEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    post: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          webPageId: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["WebPageTagCreateDto"];
          "application/xml": components["schemas"]["WebPageTagCreateDto"];
        };
      };
      responses: {
        /** @description Created */
        201: {
          content: {
            "application/json": components["schemas"]["EmptyEnvelope"];
            "application/xml": components["schemas"]["EmptyEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/ContentService/WebPages/{webPageId}/Tags/{tagId}": {
    post: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          webPageId: string;
          tagId: string;
        };
      };
      responses: {
        /** @description Created */
        201: {
          content: {
            "application/json": components["schemas"]["EmptyEnvelope"];
            "application/xml": components["schemas"]["EmptyEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    delete: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          webPageId: string;
          tagId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["EmptyEnvelope"];
            "application/xml": components["schemas"]["EmptyEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/ContentService/WebPages/{webPageId}/Categories": {
    get: {
      parameters: {
        query?: {
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          webPageId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["WebPageCategoryDtoListEnvelope"];
            "application/xml": components["schemas"]["WebPageCategoryDtoListEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    post: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          webPageId: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["WebPageCategoryCreateDto"];
          "application/xml": components["schemas"]["WebPageCategoryCreateDto"];
        };
      };
      responses: {
        /** @description Created */
        201: {
          content: {
            "application/json": components["schemas"]["EmptyEnvelope"];
            "application/xml": components["schemas"]["EmptyEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/ContentService/WebPages/{webPageId}/Categories/{categoryId}": {
    post: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          webPageId: string;
          categoryId: string;
        };
      };
      responses: {
        /** @description Created */
        201: {
          content: {
            "application/json": components["schemas"]["EmptyEnvelope"];
            "application/xml": components["schemas"]["EmptyEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    delete: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          webPageId: string;
          categoryId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["EmptyEnvelope"];
            "application/xml": components["schemas"]["EmptyEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/ContentService/WebPageTags": {
    get: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["WebPageTagDtoListEnvelope"];
            "application/xml": components["schemas"]["WebPageTagDtoListEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    post: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["WebPageTagCreateDto"];
          "application/xml": components["schemas"]["WebPageTagCreateDto"];
        };
      };
      responses: {
        /** @description Created */
        201: {
          content: {
            "application/json": components["schemas"]["EmptyEnvelope"];
            "application/xml": components["schemas"]["EmptyEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/ContentService/WebPageTags/{webPageTagId}": {
    get: {
      parameters: {
        query?: {
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          webPageTagId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["WebPageTagDtoEnvelope"];
            "application/xml": components["schemas"]["WebPageTagDtoEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    put: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          webPageTagId: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["WebPageTagUpdateDto"];
          "application/xml": components["schemas"]["WebPageTagUpdateDto"];
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["EmptyEnvelope"];
            "application/xml": components["schemas"]["EmptyEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    delete: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          webPageTagId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["EmptyEnvelope"];
            "application/xml": components["schemas"]["EmptyEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    patch: {
      parameters: {
        query: {
          tenantId: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          webPageTagId: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["Operation"][];
          "application/xml": components["schemas"]["Operation"][];
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["EmptyEnvelope"];
            "application/xml": components["schemas"]["EmptyEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: {
    AdvancedOptions: {
      homePageID?: string | null;
      cartPageID?: string | null;
      checkoutPageID?: string | null;
      privacyPolicyPageID?: string | null;
      customerAccountPageID?: string | null;
      termsAndConditionsPageID?: string | null;
    };
    AllianceBusinessSuiteIntegrationOptions: {
      enable?: boolean;
      appId?: string | null;
      tenantId?: string | null;
      publicKey?: string | null;
      privateKey?: string | null;
    };
    AppleIcons: {
      the57?: string | null;
      the60?: string | null;
      the72?: string | null;
      the76?: string | null;
      the114?: string | null;
      the120?: string | null;
      the128?: string | null;
      the144?: string | null;
      the152?: string | null;
      the167?: string | null;
      the180?: string | null;
    };
    AzureAppInsightIntegrationOptions: {
      enable?: boolean;
      enableDiagnosticsTelemetryModule?: boolean;
      enableAuthenticationTrackingJavaScript?: boolean;
      enableRequestTrackingTelemetryModule?: boolean;
      injectResponseHeaders?: boolean;
      trackExceptions?: boolean;
      /** @deprecated */
      enableW3CDistributedTracing?: boolean;
      addAutoCollectedMetricExtractor?: boolean;
      enableHeartbeat?: boolean;
      enableDebugLogger?: boolean;
      endpointAddress?: string | null;
      developerMode?: boolean | null;
      applicationVersion?: string | null;
      connectionString?: string | null;
      instrumentationKey?: string | null;
      enableAdaptiveSampling?: boolean;
      enableEventCounterCollectionModule?: boolean;
      enableDependencyTrackingTelemetryModule?: boolean;
      enableAzureInstanceMetadataTelemetryModule?: boolean;
      enableAppServicesHeartbeatTelemetryModule?: boolean;
      enablePerformanceCounterCollectionModule?: boolean;
      enableQuickPulseMetricStream?: boolean;
      enableLegacyCorrelationHeadersInjection?: boolean;
      enableActiveTelemetryConfigurationSetup?: boolean;
    };
    AzureStorageIntegrationOptions: {
      enable?: boolean;
      connectionString?: string | null;
    };
    Background: {
      /**
       * Format: int32
       * @enum {integer}
       */
      bgRepeat?: 0 | 1 | 2 | 3;
      /**
       * Format: int32
       * @enum {integer}
       */
      bgPosition?: 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8;
      backgroundColor?: string | null;
      backgroundImageUrl?: string | null;
      enableFullWidthBackgroundImage?: boolean;
    };
    BackgroundOptions: {
      /** Format: int32 */
      backgroundPatternID?: number;
      enableBackgroundPattern?: boolean;
      backgroundImageForPage?: string | null;
      backgroundColorForPage?: string | null;
      mainContentColor?: string | null;
      mainContentImageURL?: string | null;
    };
    BlogOptions: {
      /** Format: int32 */
      postsPerPage?: number;
      enableBlogPostComments?: boolean;
    };
    BlogPostCategoryCreateDto: {
      /** Format: uuid */
      id?: string;
      /** Format: date-time */
      timestamp?: string;
      slug?: string | null;
      type?: string | null;
      title?: string | null;
      description?: string | null;
      seoTitle?: string | null;
      metaDescription?: string | null;
      cornerstoneContent?: boolean;
      allowSerachEngines?: boolean;
      seoKeyPhrases?: string | null;
      canonicalUrl?: string | null;
      imageURL?: string | null;
      image?: string | null;
      webPortalID?: string | null;
      businessID?: string | null;
      businessProfileRecordID?: string | null;
    };
    BlogPostCategoryDto: {
      id?: string | null;
      /** Format: date-time */
      timestamp?: string | null;
      slug?: string | null;
      title?: string | null;
      description?: string | null;
      seoTitle?: string | null;
      metaDescription?: string | null;
      cornerstoneContent?: boolean;
      allowSerachEngines?: boolean;
      seoKeyPhrases?: string | null;
      canonicalUrl?: string | null;
      imageURL?: string | null;
      image?: string | null;
      webPortalID?: string | null;
      businessID?: string | null;
      businessProfileRecordID?: string | null;
    };
    BlogPostCategoryDtoEnvelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
      result?: components["schemas"]["BlogPostCategoryDto"];
    };
    BlogPostCategoryDtoListEnvelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
      result?: components["schemas"]["BlogPostCategoryDto"][] | null;
    };
    BlogPostCategoryUpdateDto: {
      slug?: string | null;
      type?: string | null;
      title?: string | null;
      description?: string | null;
      seoTitle?: string | null;
      metaDescription?: string | null;
      cornerstoneContent?: boolean;
      allowSerachEngines?: boolean;
      seoKeyPhrases?: string | null;
      canonicalUrl?: string | null;
      imageURL?: string | null;
      image?: string | null;
      webPortalID?: string | null;
    };
    BlogPostCommentCreateDto: {
      /** Format: uuid */
      id?: string;
      /** Format: date-time */
      timestamp?: string;
      message: string;
      ownerSocialProfileID?: string | null;
      socialPostID?: string | null;
      parentCommentID?: string | null;
    };
    BlogPostCommentDto: {
      id?: string | null;
      /** Format: date-time */
      timestamp?: string | null;
      blogPostID?: string | null;
      message?: string | null;
      ownerSocialProfileID?: string | null;
      socialPostID?: string | null;
      parentCommentID?: string | null;
    };
    BlogPostCommentDtoListEnvelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
      result?: components["schemas"]["BlogPostCommentDto"][] | null;
    };
    BlogPostCreateDto: {
      /** Format: uuid */
      id?: string;
      /** Format: date-time */
      timestamp?: string;
      tenantId?: string | null;
      enrolmentId?: string | null;
      title?: string | null;
      authorId?: string | null;
      description?: string | null;
      htmlContent?: string | null;
      featuredImageUrl?: string | null;
      blogPostCategoryID?: string | null;
      webTemplateID?: string | null;
    };
    BlogPostDto: {
      id?: string | null;
      /** Format: date-time */
      timestamp?: string | null;
      /** Format: int32 */
      order?: number;
      slug?: string | null;
      name?: string | null;
      title?: string | null;
      excerpt?: string | null;
      password?: string | null;
      description?: string | null;
      highlightImage?: string | null;
      canonicalUrl?: string | null;
      seoTitle?: string | null;
      seoKeyWords?: string | null;
      seoKeyPhrases?: string | null;
      metaDescription?: string | null;
      twitterImage?: string | null;
      twitterTitle?: string | null;
      twitterDescription?: string | null;
      facebookImage?: string | null;
      facebookTitle?: string | null;
      facebookDescription?: string | null;
      featuredImageUrl?: string | null;
      content?: string | null;
      code?: string | null;
      namespace?: string | null;
      typeName?: string | null;
      generatedCode?: string | null;
      compilationPath?: string | null;
      htmlContent?: string | null;
      cSharpContent?: string | null;
      razorContent?: string | null;
      cssContent?: string | null;
      jsContent?: string | null;
      cssFiles?: string | null;
      jsFiles?: string | null;
      razorGeneratedCode?: string | null;
      cSharpGeneratedCode?: string | null;
      template?: boolean;
      default?: boolean;
      enable?: boolean;
      enableComments?: boolean;
      displaySocialBox?: boolean;
      published?: boolean;
      inTrashCan?: boolean;
      systemLocked?: boolean;
      allowPingBacks?: boolean;
      allowTrackbacks?: boolean;
      cornerstoneContent?: boolean;
      isEssentialContent?: boolean;
      allowSearchEngineIndexing?: boolean;
      tenantId?: string | null;
      webPortalId?: string | null;
      websiteThemeId?: string | null;
      enrollmentId?: string | null;
      socialProfileId?: string | null;
      parentWebContentId?: string | null;
      parentWebContentVersionId?: string | null;
      blogPostCategoryID?: string | null;
      webTemplateID?: string | null;
    };
    BlogPostDtoEnvelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
      result?: components["schemas"]["BlogPostDto"];
    };
    BlogPostDtoListEnvelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
      result?: components["schemas"]["BlogPostDto"][] | null;
    };
    BlogPostTagCreateDto: {
      /** Format: uuid */
      id?: string;
      /** Format: date-time */
      timestamp?: string;
      slug?: string | null;
      type?: string | null;
      title?: string | null;
      description?: string | null;
      seoTitle?: string | null;
      metaDescription?: string | null;
      cornerstoneContent?: boolean;
      allowSerachEngines?: boolean;
      seoKeyPhrases?: string | null;
      canonicalUrl?: string | null;
      imageURL?: string | null;
      image?: string | null;
      webPortalID?: string | null;
      businessID?: string | null;
      businessProfileRecordID?: string | null;
    };
    BlogPostTagDto: {
      id?: string | null;
      /** Format: date-time */
      timestamp?: string | null;
      slug?: string | null;
      title?: string | null;
      description?: string | null;
      seoTitle?: string | null;
      metaDescription?: string | null;
      cornerstoneContent?: boolean;
      allowSerachEngines?: boolean;
      seoKeyPhrases?: string | null;
      canonicalUrl?: string | null;
      imageURL?: string | null;
      image?: string | null;
      webPortalID?: string | null;
      businessID?: string | null;
      businessProfileRecordID?: string | null;
    };
    BlogPostTagDtoEnvelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
      result?: components["schemas"]["BlogPostTagDto"];
    };
    BlogPostTagDtoListEnvelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
      result?: components["schemas"]["BlogPostTagDto"][] | null;
    };
    BlogPostTagUpdateDto: {
      slug?: string | null;
      type?: string | null;
      title?: string | null;
      description?: string | null;
      seoTitle?: string | null;
      metaDescription?: string | null;
      cornerstoneContent?: boolean;
      allowSerachEngines?: boolean;
      seoKeyPhrases?: string | null;
      canonicalUrl?: string | null;
      imageURL?: string | null;
      image?: string | null;
      webPortalID?: string | null;
    };
    BlogPostUpdateDto: {
      /** Format: int32 */
      order?: number;
      slug?: string | null;
      name?: string | null;
      title?: string | null;
      excerpt?: string | null;
      password?: string | null;
      description?: string | null;
      highlightImage?: string | null;
      canonicalUrl?: string | null;
      seoTitle?: string | null;
      seoKeyWords?: string | null;
      seoKeyPhrases?: string | null;
      metaDescription?: string | null;
      twitterImage?: string | null;
      twitterTitle?: string | null;
      twitterDescription?: string | null;
      facebookImage?: string | null;
      facebookTitle?: string | null;
      facebookDescription?: string | null;
      featuredImageURL?: string | null;
      content?: string | null;
      code?: string | null;
      namespace?: string | null;
      typeName?: string | null;
      generatedCode?: string | null;
      compilationPath?: string | null;
      htmlContent?: string | null;
      cSharpContent?: string | null;
      razorContent?: string | null;
      cssContent?: string | null;
      jsContent?: string | null;
      cssFiles?: string | null;
      jsFiles?: string | null;
      razorGeneratedCode?: string | null;
      cSharpGeneratedCode?: string | null;
      /** Format: int32 */
      precompiledLogicSize?: number;
      /** Format: int64 */
      precompiledLogicSizeLong?: number;
      /** Format: int32 */
      precompiledViewSize?: number;
      /** Format: int64 */
      precompiledViewSizeLong?: number;
      /** Format: int32 */
      precompiledLogicViewSize?: number;
      template?: boolean;
      default?: boolean;
      enable?: boolean;
      enableComments?: boolean;
      displaySocialBox?: boolean;
      published?: boolean;
      inTrashCan?: boolean;
      systemLocked?: boolean;
      allowPingbacks?: boolean;
      allowTrackbacks?: boolean;
      cornerstoneContent?: boolean;
      isEssentialContent?: boolean;
      allowSearchEngineIndexing?: boolean;
    };
    BrandingOptions: {
      defaultLang?: string | null;
      primaryColor?: string | null;
      secondaryColor?: string | null;
      headerLogo?: components["schemas"]["Logo"];
      footerLogo?: components["schemas"]["Logo"];
      favicons?: components["schemas"]["Favicons"];
      appleIcon?: components["schemas"]["AppleIcons"];
      msAppTile?: components["schemas"]["MSAppTile"];
      dashboard?: components["schemas"]["DashboardOptions"];
      studio?: components["schemas"]["StudioOptions"];
    };
    BreadcrumbsOptions: {
      enableBreadcrumbsOnMobileDevices?: boolean;
      enableCategoriesOnBreadcrumbs?: boolean;
      enablePostTypesOnBreadcrumbs?: boolean;
      breadcrumbsPrefix?: string | null;
      breadcrumbsFontSize?: string | null;
      breadcrumbsSeparator?: string | null;
      breadcrumbsFontColor?: string | null;
      breadcrumbsFontColorHover?: string | null;
    };
    CartOptions: {
      enableGuestCart?: boolean;
      productPlaceholderImage?: string | null;
      redirectToCartPageAfterAddingProducts?: boolean;
    };
    CodeFieldsOptions: Record<string, never>;
    ColorOptions: {
      /**
       * Format: int32
       * @enum {integer}
       */
      primarySkin?: 0 | 1;
      primaryColor?: string | null;
      secondaryColor?: string | null;
      colorScheme?: components["schemas"]["ColorScheme"];
    };
    ColorScheme: {
      color0?: string | null;
      color1?: string | null;
      color2?: string | null;
      color3?: string | null;
      color4?: string | null;
      color5?: string | null;
      color6?: string | null;
      color7?: string | null;
      color8?: string | null;
      color9?: string | null;
    };
    ContactOptions: {
      email1?: string | null;
      email2?: string | null;
      phoneNumber1?: string | null;
      phoneNumber2?: string | null;
      addressLine1?: string | null;
      addressLine2?: string | null;
      cityID?: string | null;
      countryStateID?: string | null;
      countryID?: string | null;
      postalCode?: string | null;
    };
    ContactPoint: {
      contactPointType?: string | null;
      telephone?: string | null;
      contactType?: string | null;
      contactOption?: string | null;
      areaServed?: string[] | null;
      type?: string | null;
    };
    CouponsOptions: {
      enableCoupons?: boolean;
      calculateCouponsSecuentially?: boolean;
    };
    Creator: {
      name?: string | null;
      organization?: string | null;
      twitterHandler?: string | null;
      gitHubUsername?: string | null;
      facebookUsername?: string | null;
    };
    CustomFont: {
      name?: string | null;
      wofF2?: string | null;
      woff?: string | null;
      ttf?: string | null;
      eot?: string | null;
      svg?: string | null;
    };
    DashboardOptions: {
      color?: string | null;
      title?: string | null;
      icon?: string | null;
      iconColor?: string | null;
      favicon?: string | null;
    };
    DownloadablesOptions: {
      maskFileNames?: boolean;
      grantAccessAfterPayment?: boolean;
      downloadsRequireLogin?: boolean;
    };
    EPaycoIntegrationOptions: {
      enable?: boolean;
      customerID?: string | null;
      customerKey?: string | null;
      apiKey?: string | null;
      apiSecret?: string | null;
    };
    EmailOptions: {
      fromName?: string | null;
      fromEmailAddress?: string | null;
      headerImage?: string | null;
      footerText?: string | null;
      baseColor?: string | null;
      backgroundColor?: string | null;
      bodyBackgroundColor?: string | null;
      bodyTextColor?: string | null;
      newOrderEmailID?: string | null;
      cancelledOrderEmailID?: string | null;
      failedOrderEmailID?: string | null;
      onHoldOrderEmailID?: string | null;
      processingOrderEmailID?: string | null;
      completedOrderEmailID?: string | null;
      refundedOrderEmailID?: string | null;
      orderDetailsEmailID?: string | null;
      customerInvoiceEmailID?: string | null;
      customerNoteEmailID?: string | null;
      passwordResetEmailID?: string | null;
      newRenewalOrderEmailID?: string | null;
      newSubscriptionEmailID?: string | null;
      subscriptionWelcomeEmailID?: string | null;
      suspendedSubscriptionEmailID?: string | null;
      overdueSubscriptionEmailID?: string | null;
      expiredSubscriptionEmailID?: string | null;
      switchedSubscriptionEmailID?: string | null;
      newAccountEmailID?: string | null;
    };
    EmailsOptions: {
      alertTemplate?: string | null;
      actionTemplate?: string | null;
      receiptTemplate?: string | null;
      welcomeTemplate?: string | null;
    };
    EmptyEnvelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
    };
    ErrorEnvelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
    };
    FacebookIntegrationOptions: {
      enable?: boolean;
      pixelId?: string | null;
      appId?: string | null;
      appSecret?: string | null;
      instagramAppId?: string | null;
      instagramAppSecret?: string | null;
      marketingApiToken?: string | null;
      marketingApiTokenSandbox?: string | null;
    };
    Favicons: {
      favicon?: string | null;
      favicon16?: string | null;
      favicon32?: string | null;
      favicon96?: string | null;
      favicon128?: string | null;
      favicon196?: string | null;
    };
    FeaturesOptions: Record<string, never>;
    FenixAllianceIntegrationsOptions: {
      enable?: boolean;
      icx?: components["schemas"]["InfinityComexIntegrationOptions"];
      abs?: components["schemas"]["AllianceBusinessSuiteIntegrationOptions"];
    };
    FooterOptions: {
      /** Format: int32 */
      numberOfColumns?: number;
      enableWidgets?: boolean;
      enableCopyrightBar?: boolean;
      centerWidgetsContent?: boolean;
      centerCopyrightContent?: boolean;
      enableVerticalWidgetDividerLine?: boolean;
      /** Format: int32 */
      verticalWidgetDividerLineSize?: number;
      copyrightText?: string | null;
      copyrightBackgroundColor?: string | null;
      /** Format: int32 */
      borderSize?: number;
      borderColor?: string | null;
      widgetDividerColor?: string | null;
      /**
       * Format: int32
       * @enum {integer}
       */
      widgetDivider?: 0 | 1 | 2 | 3 | 4 | 5;
      copyrightPadding?: components["schemas"]["Padding"];
      widgetsAreaPadding?: components["schemas"]["Padding"];
      footerAreaPadding?: components["schemas"]["Padding"];
      footerBackground?: components["schemas"]["Background"];
      copyrightBackground?: components["schemas"]["Background"];
      headingsTypography?: components["schemas"]["Typography"];
      widgetsTypography?: components["schemas"]["Typography"];
      copyrightTypography?: components["schemas"]["Typography"];
    };
    FormsOptions: Record<string, never>;
    ForumOptions: {
      /** Format: int32 */
      forumsPerPage?: number;
    };
    FreeGeoIPIntegrationOptions: {
      enable?: boolean;
      apiKey?: string | null;
    };
    GoogleAnalytics: {
      enable?: boolean;
      trackingCode?: string | null;
    };
    GoogleIntegrationOptions: {
      enable?: boolean;
      googleMaps?: components["schemas"]["GoogleMapsIntegrationOptions"];
      googleMerchantCenter?: components["schemas"]["GoogleMerchantCenterIntegrationOptions"];
      googleTagManager?: components["schemas"]["GoogleTagManagerIntegrationOptions"];
      googleRecaptcha?: components["schemas"]["GoogleRecaptchaIntegrationOptions"];
      googleAnalytics?: components["schemas"]["GoogleAnalytics"];
      googleMyBusiness?: components["schemas"]["GoogleMyBusinessIntegrationOptions"];
    };
    GoogleMapsIntegrationOptions: {
      enable?: boolean;
      apiKey?: string | null;
    };
    GoogleMerchantCenterIntegrationOptions: {
      enable?: boolean;
      merchantId?: string | null;
      merchantUserEmail?: string | null;
      jsonCredentials?: string | null;
    };
    GoogleMyBusinessIntegrationOptions: {
      enable?: boolean;
      clientId?: string | null;
      projectId?: string | null;
      authString?: string | null;
      tokenString?: string | null;
      clientSecret?: string | null;
      authProviderX509CertUrl?: string | null;
      redirectStrings?: string[] | null;
    };
    GoogleRecaptchaIntegrationOptions: {
      enable?: boolean;
      site?: string | null;
      siteKey?: string | null;
      secretKey?: string | null;
      version?: string | null;
    };
    GoogleTagManagerIntegrationOptions: {
      enable?: boolean;
      id?: string | null;
    };
    GridOptions: Record<string, never>;
    HeaderOptions: {
      headerPadding?: components["schemas"]["Padding"];
      headerBackgroundImageURL?: string | null;
      headerBackgroundColor?: string | null;
      headerBorderColor?: string | null;
      enableStickyHeader?: boolean;
      enableHeaderShadow?: boolean;
      enableFullWidthHeader?: boolean;
      /**
       * Format: int32
       * @enum {integer}
       */
      headerLayout?: 0 | 1 | 2 | 3 | 4 | 5;
      /**
       * Format: int32
       * @enum {integer}
       */
      headerPosition?: 0 | 1 | 2;
      /**
       * Format: int32
       * @enum {integer}
       */
      topHeaderContentType2?: 0 | 1 | 2 | 3 | 4;
      /**
       * Format: int32
       * @enum {integer}
       */
      topHeaderContentType1?: 0 | 1 | 2 | 3 | 4;
      topHeaderBackgroundColor?: string | null;
      topHeaderContent1?: string | null;
      topHeaderContent2?: string | null;
    };
    IdentityAndPrivacyOptions: {
      allowGuestOrders?: boolean;
      allowGuestCartRecognition?: boolean;
      allowRemoveDownloadAccessOnRequest?: boolean;
      allowRemovePersonalDataFromOrdersOnRequest?: boolean;
      allowRemovePersonalDataFromSubscriptionsOnRequest?: boolean;
      storeCheckoutPrivacyPolicyNotice?: string | null;
      storeRegistrationPrivacyPolicyNotice?: string | null;
      /**
       * Format: int32
       * @enum {integer}
       */
      defaultCustomerLocation?: 0 | 1 | 2 | 3;
      inactiveCartsRetentionPolicy?: components["schemas"]["StoreDataRetentionPolicy"];
      pendingOrdersRetentionPolicy?: components["schemas"]["StoreDataRetentionPolicy"];
      failedOrdersRetentionPolicy?: components["schemas"]["StoreDataRetentionPolicy"];
      cancelledOrdersRetentionPolicy?: components["schemas"]["StoreDataRetentionPolicy"];
      completedOrdersRetentionPolicy?: components["schemas"]["StoreDataRetentionPolicy"];
    };
    InfinityComexIntegrationOptions: {
      enable?: boolean;
      appId?: string | null;
      tenantId?: string | null;
      publicKey?: string | null;
      privateKey?: string | null;
    };
    Int32Envelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
      /** Format: int32 */
      result?: number;
    };
    IntegrationOptions: {
      maxMindLicenseKey?: string | null;
      maxMindDbPath?: string | null;
    };
    IntegrationsOptions: {
      enable?: boolean;
      ePayco?: components["schemas"]["EPaycoIntegrationOptions"];
      google?: components["schemas"]["GoogleIntegrationOptions"];
      facebook?: components["schemas"]["FacebookIntegrationOptions"];
      sendgrid?: components["schemas"]["SendgridIntegrationsOptions"];
      freeGeoIP?: components["schemas"]["FreeGeoIPIntegrationOptions"];
      microsoft?: components["schemas"]["MicrosoftIntegrationsOptions"];
      fenixAlliance?: components["schemas"]["FenixAllianceIntegrationsOptions"];
      openExchangeRates?: components["schemas"]["OpenExchangeRatesIntegrationsOptions"];
    };
    InventoryOptions: {
      enableStockManagement?: boolean;
      hideOutOfStockProducts?: boolean;
      enableLowStockNotifications?: boolean;
      enableOutOfStockNotifications?: boolean;
      stockNotificationRecipients?: string | null;
      /** Format: int32 */
      holdStock?: number;
      /** Format: int32 */
      lowStockThreshold?: number;
      /** Format: int32 */
      outOfStockThreshold?: number;
      /**
       * Format: int32
       * @enum {integer}
       */
      stockDisplayFormat?: 0 | 1 | 2;
    };
    LayoutOptions: {
      singleSidebarWidth?: string | null;
      singleSidebarGutter?: string | null;
      dialSidebarWidth1?: string | null;
      dialSidebarWidth2?: string | null;
      dialSidebarGutter?: string | null;
      fullWidthContentPadding?: string | null;
      pageContentPaddingBottom?: string | null;
      pageContentPaddingTop?: string | null;
      siteWidth?: string | null;
      /**
       * Format: int32
       * @enum {integer}
       */
      layout?: 0 | 1;
    };
    LightboxOptions: Record<string, never>;
    Logo: {
      margin?: components["schemas"]["Margin"];
      /**
       * Format: int32
       * @enum {integer}
       */
      alignment?: 0 | 1 | 2;
      /** Format: int32 */
      width?: number | null;
      /** Format: int32 */
      height?: number | null;
      /** Format: int32 */
      maxWidth?: number | null;
      /** Format: int32 */
      maxHeight?: number | null;
      customLinkURL?: string | null;
      backgroundColor?: string | null;
      defaltLogoURL?: string | null;
      defaltRetinaLogoURL?: string | null;
      defaltStickyLogoURL?: string | null;
      defaltStickyRetinaLogoURL?: string | null;
      defaltMobileLogoURL?: string | null;
      defaltMobileRetinaLogoURL?: string | null;
      footer?: string | null;
      header?: string | null;
    };
    MSAppTile: {
      color?: string | null;
      logo?: string | null;
      logoSquare?: string | null;
      logo144?: string | null;
      logo150?: string | null;
      logo310?: string | null;
      logo310W?: string | null;
      logo70?: string | null;
    };
    MansoryOptions: Record<string, never>;
    Margin: {
      top?: string | null;
      bottom?: string | null;
      right?: string | null;
      left?: string | null;
    };
    MeasurementOptions: {
      /**
       * Format: int32
       * @enum {integer}
       */
      defaultWeightUnit?: 0 | 1 | 2 | 3;
      /**
       * Format: int32
       * @enum {integer}
       */
      defaultDimensionUInit?: 0 | 1 | 2 | 3 | 4;
    };
    MenuOptions: {
      sideNavigationFontSize?: string | null;
      mainMenuDropdownFontColor?: string | null;
      mainMenuFontHoverActiveColor?: string | null;
      mainMenuDropdownSeparatorColor?: string | null;
      mainMenuDropdownBackgroundHoverColor?: string | null;
      mainMenuDropdownBackgroundColor?: string | null;
      menuHighlightLabelRadius?: string | null;
      enableMainMenuCartIcon?: boolean;
      enableMainMenuDropShadow?: boolean;
      enableMainMenuSearchIcon?: boolean;
      enableMainMenuDropdownDivider?: boolean;
      enableMainMenuNotificationsIcon?: boolean;
      enableMainMenuIconCircleBorders?: boolean;
      /** Format: int32 */
      mainMenuDropdownWidth?: number;
      /** Format: int32 */
      mainMenuDropdownFontSize?: number;
      /** Format: int32 */
      mainMenuDropdownItemPadding?: number;
      /** Format: int32 */
      mainMenuDropdownTopBorderSize?: number;
      /** Format: int32 */
      mainMenuHeight?: number;
      /** Format: int32 */
      mainMenuItemPadding?: number;
      /** Format: int32 */
      mainMenuHighlightBarSize?: number;
      /** Format: int32 */
      mainMenuItemPaddingOnMobile?: number;
      /** Format: int32 */
      mainMenuHighlightBackgroundColor?: number;
      mainMenuTypography?: components["schemas"]["Typography"];
      /**
       * Format: int32
       * @enum {integer}
       */
      menuHighlightStyle?: 0 | 1 | 2 | 3 | 4;
      /**
       * Format: int32
       * @enum {integer}
       */
      mainMenuSearchLayout?: 0 | 1;
      /**
       * Format: int32
       * @enum {integer}
       */
      menuDropdownAnimation?: 0 | 1;
      /**
       * Format: int32
       * @enum {integer}
       */
      menuDropdownIndicator?: 0 | 1 | 2;
    };
    MicrosoftAzureIntegrationOptions: {
      enable?: boolean;
      azureAppInsight?: components["schemas"]["AzureAppInsightIntegrationOptions"];
      azureStorage?: components["schemas"]["AzureStorageIntegrationOptions"];
    };
    MicrosoftIntegrationsOptions: {
      enable?: boolean;
      azure?: components["schemas"]["MicrosoftAzureIntegrationOptions"];
    };
    MiscellaneousOptions: Record<string, never>;
    OpenExchangeRatesIntegrationsOptions: {
      enable?: boolean;
      appID?: string | null;
    };
    Operation: {
      /**
       * Format: int32
       * @enum {integer}
       */
      operationType?: 0 | 1 | 2 | 3 | 4 | 5 | 6;
      path?: string | null;
      op?: string | null;
      from?: string | null;
      value?: unknown;
    };
    Organization: {
      legalName?: string | null;
      businessName?: string | null;
      slogan?: string | null;
      homepage?: string | null;
      facebookPageUsername?: string | null;
      instagramUsername?: string | null;
      linkedInUsername?: string | null;
      twitterHandler?: string | null;
      gitHubUsername?: string | null;
      contactPoints?: components["schemas"]["ContactPoint"][] | null;
    };
    Padding: {
      top?: string | null;
      bottom?: string | null;
      right?: string | null;
      left?: string | null;
    };
    PaginationOptions: Record<string, never>;
    PaymentMethod: {
      enable?: boolean;
      priority?: boolean;
      name?: string | null;
      description?: string | null;
      instructions?: string | null;
      supportedFeatures?: string[] | null;
    };
    PaymentOptions: {
      paymentMethods?: components["schemas"]["PaymentMethod"][] | null;
    };
    PerformanceOptions: Record<string, never>;
    PortalId: Record<string, never>;
    PortalOptions: {
      title?: string | null;
      description?: string | null;
      /**
       * Format: int32
       * @enum {integer}
       */
      portalUiEngine?: 0 | 1 | 2;
      seo?: components["schemas"]["SeoOptions"];
      store?: components["schemas"]["StoreOptions"];
      theming?: components["schemas"]["ThemingOptions"];
      branding?: components["schemas"]["BrandingOptions"];
      social?: components["schemas"]["SocialMediaOptions"];
      privacy?: components["schemas"]["PrivacyOptions"];
      blog?: components["schemas"]["BlogOptions"];
      forums?: components["schemas"]["ForumOptions"];
      footer?: components["schemas"]["FooterOptions"];
      background?: components["schemas"]["BackgroundOptions"];
      breadcrumbs?: components["schemas"]["BreadcrumbsOptions"];
      contact?: components["schemas"]["ContactOptions"];
      color?: components["schemas"]["ColorOptions"];
      dashboard?: components["schemas"]["DashboardOptions"];
      header?: components["schemas"]["HeaderOptions"];
      titleBar?: components["schemas"]["TitleBarOptions"];
      typography?: components["schemas"]["TypographyOptions"];
      socialMedia?: components["schemas"]["SocialMediaOptions"];
      slidingBar?: components["schemas"]["SlidingBarOptions"];
      slideshow?: components["schemas"]["SlideshowOptions"];
      slider?: components["schemas"]["SliderOptions"];
      sidebar?: components["schemas"]["SidebarOptions"];
      search?: components["schemas"]["SearchOptions"];
      responsive?: components["schemas"]["ResponsiveOptions"];
      portfolio?: components["schemas"]["PortfolioOptions"];
      performance?: components["schemas"]["PerformanceOptions"];
      pagination?: components["schemas"]["PaginationOptions"];
      miscellaneous?: components["schemas"]["MiscellaneousOptions"];
      menu?: components["schemas"]["MenuOptions"];
      grid?: components["schemas"]["GridOptions"];
      mansory?: components["schemas"]["MansoryOptions"];
      lightbox?: components["schemas"]["LightboxOptions"];
      layout?: components["schemas"]["LayoutOptions"];
      codeFields?: components["schemas"]["CodeFieldsOptions"];
      features?: components["schemas"]["FeaturesOptions"];
      forms?: components["schemas"]["FormsOptions"];
      integrations?: components["schemas"]["IntegrationsOptions"];
      emails?: components["schemas"]["EmailsOptions"];
    };
    PortalOptionsEnvelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
      result?: components["schemas"]["PortalOptions"];
    };
    PortalSettings: {
      enable?: boolean;
      portalID?: string | null;
      scopes?: string | null;
      tenantID?: string | null;
      homePageID?: string | null;
      blogPageID?: string | null;
      storePageID?: string | null;
      baseEndpoint?: string | null;
      storeRoutePrefix?: string | null;
      publicKey?: string | null;
      privateKey?: string | null;
      authToken?: string | null;
      authTokenType?: string | null;
      /** Format: int64 */
      authTokenExpiration?: number;
      options?: components["schemas"]["PortalOptions"];
    };
    PortalSettingsEnvelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
      result?: components["schemas"]["PortalSettings"];
    };
    PortfolioOptions: Record<string, never>;
    PriceCalculationOptions: {
      pricingListID?: string | null;
    };
    PrivacyOptions: {
      cookiesNoticeMessage?: string | null;
    };
    ProductOptions: Record<string, never>;
    RecommendationOptions: {
      /** Format: double */
      viewWeight?: number;
      /** Format: double */
      addToCartWeight?: number;
      /** Format: double */
      removedFromCartWeight?: number;
      /** Format: double */
      addedToWishlistWeight?: number;
      /** Format: double */
      alreadyPurchasedWeight?: number;
      /** Format: double */
      removedToWishlistWeight?: number;
      /** Format: double */
      addedToCompareTableWeight?: number;
      /** Format: double */
      removedToCompareTableWeight?: number;
      enableCrossSelling?: boolean;
      enableBundledProducts?: boolean;
      enableRecentlyViewedProducts?: boolean;
    };
    ResponsiveOptions: {
      enableResponsive?: boolean;
      enableMobileZoom?: boolean;
      gridResponsiveBreakpoint?: boolean;
      headerResponsiveBreakpoint?: boolean;
      contentResponsiveBreakpoint?: boolean;
      sidebarResponsiveBreakpoint?: boolean;
      /** Format: int32 */
      elementResponsiveBreakpointSm?: number;
      /** Format: int32 */
      elementResponsiveBreakpointMd?: number;
      /** Format: int32 */
      elementResponsiveBreakpointLg?: number;
      /** Format: float */
      responsiveMinFontSizeFactor?: number;
      /** Format: float */
      typographyResponsiveSensitivity?: number;
    };
    ReviewsOptions: {
      enableReviews?: boolean;
      enableStarRatings?: boolean;
      forceStarRatings?: boolean;
      displayVerifiedOwnerBadge?: boolean;
      forceVerifiedOwnerVerification?: boolean;
    };
    SearchOptions: Record<string, never>;
    SendgridIntegrationsOptions: {
      enable?: boolean;
      apiKey?: string | null;
    };
    SeoOptions: {
      keywords?: string | null;
      description?: string | null;
      logo?: string | null;
      socialImage?: string | null;
      titleSuffix?: string | null;
      bingVerificationCode?: string | null;
      googleVerificationCode?: string | null;
      pinterestVerificationCode?: string | null;
      creator?: components["schemas"]["Creator"];
      organization?: components["schemas"]["Organization"];
      sameAs?: string[] | null;
    };
    ServicesOptions: {
      dripDownloadableContent?: boolean;
      retryFailedPayments?: boolean;
      allow0InitialCheckout?: boolean;
      allowMixedCheckout?: boolean;
      synchroniseRenewals?: boolean;
      addToCartButtonText?: string | null;
      placeOrderButtonText?: string | null;
      newSubscriberRole?: string | null;
      inactiveSubscriberRole?: string | null;
      /** Format: int32 */
      enableAutomaticPayments?: number;
      /** Format: int32 */
      enableManualRenewals?: number;
      /** Format: int32 */
      displayAutoRenewalToggle?: number;
      /** Format: int32 */
      acceptEarlyRenewals?: number;
      /** Format: int32 */
      customerSuspensions?: number;
      /** Format: int32 */
      enableSubscriptionSwitchingBetweenGroups?: number;
      /** Format: int32 */
      enableSubscriptionSwitchingBetweenVariations?: number;
      /**
       * Format: int32
       * @enum {integer}
       */
      prorateFirstRenewal?: 0 | 1 | 2 | 3 | 4 | 5 | 6;
    };
    SidebarOptions: Record<string, never>;
    SliderOptions: Record<string, never>;
    SlideshowOptions: Record<string, never>;
    SlidingBarOptions: {
      /**
       * Format: int32
       * @enum {integer}
       */
      position?: 0 | 1 | 2 | 3;
      contentPadding?: components["schemas"]["Padding"];
      /**
       * Format: int32
       * @enum {integer}
       */
      contentAlignment?: 0 | 1 | 2;
      /** Format: int32 */
      columnsCount?: number;
      enableSticky?: boolean;
      openOnPageLoad?: boolean;
      enableOnMobile?: boolean;
      enableOnDesktop?: boolean;
    };
    SocialMediaOptions: {
      facebookPageUrl?: string | null;
      twitterUsername?: string | null;
      instagramUrl?: string | null;
      linkedInURL?: string | null;
      mySpaceURL?: string | null;
      pinterestURL?: string | null;
      youTubeURL?: string | null;
      githubURL?: string | null;
      redditURL?: string | null;
      whatsAppNumber?: string | null;
      wikipediaUrl?: string | null;
    };
    StoreDataRetentionPolicy: {
      /** Format: int32 */
      dataRetentionTimeSpanAmmount?: number;
      /**
       * Format: int32
       * @enum {integer}
       */
      retentionTimeSpan?: 0 | 1 | 2 | 3;
    };
    StoreOptions: {
      enable?: boolean;
      name?: string | null;
      logo?: string | null;
      footerLogo?: string | null;
      tagline?: string | null;
      description?: string | null;
      addressLine1?: string | null;
      addressLine2?: string | null;
      cityID?: string | null;
      countryStateID?: string | null;
      countryID?: string | null;
      currencyID?: string | null;
      postalCode?: string | null;
      /** Format: int32 */
      numberOfDecimals?: number;
      decimalSeparator?: string | null;
      sellToAllCountries?: boolean;
      cartOptions?: components["schemas"]["CartOptions"];
      emailOptions?: components["schemas"]["EmailOptions"];
      couponsOptions?: components["schemas"]["CouponsOptions"];
      paymentOptions?: components["schemas"]["PaymentOptions"];
      productOptions?: components["schemas"]["ProductOptions"];
      reviewsOptions?: components["schemas"]["ReviewsOptions"];
      advancedOptions?: components["schemas"]["AdvancedOptions"];
      servicesOptions?: components["schemas"]["ServicesOptions"];
      inventoryOptions?: components["schemas"]["InventoryOptions"];
      integrationOptions?: components["schemas"]["IntegrationOptions"];
      measurementOptions?: components["schemas"]["MeasurementOptions"];
      downloadablesOptions?: components["schemas"]["DownloadablesOptions"];
      subscriptionsOptions?: components["schemas"]["SubscriptionsOptions"];
      taxCalculationOptions?: components["schemas"]["TaxCalculationOptions"];
      recommendationOptions?: components["schemas"]["RecommendationOptions"];
      priceCalculationOptions?: components["schemas"]["PriceCalculationOptions"];
      identityAndPrivacyOptions?: components["schemas"]["IdentityAndPrivacyOptions"];
      includedSellingLocations?: string[] | null;
      excludedSellingLocations?: string[] | null;
      includedShippingLocations?: string[] | null;
      excludedShippingLocations?: string[] | null;
      /**
       * Format: int32
       * @enum {integer}
       */
      currencyPosition?: 0 | 1 | 2 | 3;
    };
    StudioOptions: {
      logo?: string | null;
      logoDark?: string | null;
      icon?: string | null;
      iconDark?: string | null;
      favicon?: string | null;
      logoMobile?: string | null;
      logoMobileDark?: string | null;
    };
    SubscriptionsOptions: {
      dripDownloadableContent?: boolean;
      retryFailedPayments?: boolean;
      allow0InitialCheckout?: boolean;
      allowMixedCheckout?: boolean;
      synchroniseRenewals?: boolean;
      addToCartButtonText?: string | null;
      placeOrderButtonText?: string | null;
      newSubscriberRole?: string | null;
      inactiveSubscriberRole?: string | null;
      /** Format: int32 */
      enableAutomaticPayments?: number;
      /** Format: int32 */
      enableManualRenewals?: number;
      /** Format: int32 */
      displayAutoRenewalToggle?: number;
      /** Format: int32 */
      acceptEarlyRenewals?: number;
      /** Format: int32 */
      customerSuspensions?: number;
      /** Format: int32 */
      enableSubscriptionSwitchingBetweenGroups?: number;
      /** Format: int32 */
      enableSubscriptionSwitchingBetweenVariations?: number;
      /**
       * Format: int32
       * @enum {integer}
       */
      prorateFirstRenewal?: 0 | 1 | 2 | 3 | 4 | 5 | 6;
    };
    TaxCalculationOptions: {
      enableTaxes?: boolean;
      roundTaxesAtSubtotalLevel?: boolean;
      displayPriceSuffix?: string | null;
      displayPricePrefix?: string | null;
      standardRates?: string[] | null;
      zeroRateRates?: string[] | null;
      reducedRateRates?: string[] | null;
      additionalTaxClasses?: ({
        [key: string]: string[] | null;
      }) | null;
    };
    ThemingOptions: {
      darkStyling?: boolean;
      themeName?: string | null;
      defaultLayout?: string | null;
      themeAssembly?: string | null;
    };
    TitleBarOptions: {
      enableFadingAnimations?: boolean;
      enablePageTitleBarHeadings?: boolean;
      enableFullWidthPageTitleBar?: boolean;
      enableBackgroundImageParallax?: boolean;
      enableFullWidthBackgroundImage?: boolean;
      backgroundImageURL?: string | null;
      retinaBackgroundImageURL?: string | null;
      backgroundColor?: string | null;
      bordersColor?: string | null;
      headingFontColor?: string | null;
      headingFontSize?: string | null;
      headingLineHeight?: string | null;
      subheadingFontColor?: string | null;
      subheadingFontSize?: string | null;
      /**
       * Format: int32
       * @enum {integer}
       */
      pageTitleBar?: 0 | 1 | 2;
      /**
       * Format: int32
       * @enum {integer}
       */
      pageTitleBarContent?: 0 | 1 | 2;
      /**
       * Format: int32
       * @enum {integer}
       */
      pageTitleBarTextAlignment?: 0 | 1 | 2;
    };
    Typography: {
      fontSize?: string | null;
      linkColor?: string | null;
      fontColor?: string | null;
      fontFamily?: string | null;
      letterSpacing?: string | null;
      linkColorHover?: string | null;
      backupFontFamily?: string | null;
      fontWeightAndStyle?: string | null;
    };
    TypographyOptions: {
      bodyTypography?: components["schemas"]["Typography"];
      headersTypography?: components["schemas"]["Typography"];
      customFonts?: components["schemas"]["CustomFont"][] | null;
    };
    WebContentCreateDto: {
      /** Format: uuid */
      id?: string;
      /** Format: date-time */
      timestamp?: string;
      tenantId?: string | null;
      enrolmentId?: string | null;
      title?: string | null;
      authorId?: string | null;
      description?: string | null;
      htmlContent?: string | null;
      featuredImageUrl?: string | null;
    };
    WebContentDto: {
      id?: string | null;
      /** Format: date-time */
      timestamp?: string | null;
      /** Format: int32 */
      order?: number;
      slug?: string | null;
      name?: string | null;
      title?: string | null;
      excerpt?: string | null;
      password?: string | null;
      description?: string | null;
      highlightImage?: string | null;
      canonicalUrl?: string | null;
      seoTitle?: string | null;
      seoKeyWords?: string | null;
      seoKeyPhrases?: string | null;
      metaDescription?: string | null;
      twitterImage?: string | null;
      twitterTitle?: string | null;
      twitterDescription?: string | null;
      facebookImage?: string | null;
      facebookTitle?: string | null;
      facebookDescription?: string | null;
      featuredImageUrl?: string | null;
      content?: string | null;
      code?: string | null;
      namespace?: string | null;
      typeName?: string | null;
      generatedCode?: string | null;
      compilationPath?: string | null;
      htmlContent?: string | null;
      cSharpContent?: string | null;
      razorContent?: string | null;
      cssContent?: string | null;
      jsContent?: string | null;
      cssFiles?: string | null;
      jsFiles?: string | null;
      razorGeneratedCode?: string | null;
      cSharpGeneratedCode?: string | null;
      template?: boolean;
      default?: boolean;
      enable?: boolean;
      enableComments?: boolean;
      displaySocialBox?: boolean;
      published?: boolean;
      inTrashCan?: boolean;
      systemLocked?: boolean;
      allowPingBacks?: boolean;
      allowTrackbacks?: boolean;
      cornerstoneContent?: boolean;
      isEssentialContent?: boolean;
      allowSearchEngineIndexing?: boolean;
      tenantId?: string | null;
      webPortalId?: string | null;
      websiteThemeId?: string | null;
      enrollmentId?: string | null;
      socialProfileId?: string | null;
      parentWebContentId?: string | null;
      parentWebContentVersionId?: string | null;
    };
    WebContentDtoEnvelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
      result?: components["schemas"]["WebContentDto"];
    };
    WebContentDtoListEnvelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
      result?: components["schemas"]["WebContentDto"][] | null;
    };
    WebContentUpdateDto: {
      /** Format: int32 */
      order?: number;
      slug?: string | null;
      name?: string | null;
      title?: string | null;
      excerpt?: string | null;
      password?: string | null;
      description?: string | null;
      highlightImage?: string | null;
      canonicalUrl?: string | null;
      seoTitle?: string | null;
      seoKeyWords?: string | null;
      seoKeyPhrases?: string | null;
      metaDescription?: string | null;
      twitterImage?: string | null;
      twitterTitle?: string | null;
      twitterDescription?: string | null;
      facebookImage?: string | null;
      facebookTitle?: string | null;
      facebookDescription?: string | null;
      featuredImageURL?: string | null;
      content?: string | null;
      code?: string | null;
      namespace?: string | null;
      typeName?: string | null;
      generatedCode?: string | null;
      compilationPath?: string | null;
      htmlContent?: string | null;
      cSharpContent?: string | null;
      razorContent?: string | null;
      cssContent?: string | null;
      jsContent?: string | null;
      cssFiles?: string | null;
      jsFiles?: string | null;
      razorGeneratedCode?: string | null;
      cSharpGeneratedCode?: string | null;
      /** Format: int32 */
      precompiledLogicSize?: number;
      /** Format: int64 */
      precompiledLogicSizeLong?: number;
      /** Format: int32 */
      precompiledViewSize?: number;
      /** Format: int64 */
      precompiledViewSizeLong?: number;
      /** Format: int32 */
      precompiledLogicViewSize?: number;
      template?: boolean;
      default?: boolean;
      enable?: boolean;
      enableComments?: boolean;
      displaySocialBox?: boolean;
      published?: boolean;
      inTrashCan?: boolean;
      systemLocked?: boolean;
      allowPingbacks?: boolean;
      allowTrackbacks?: boolean;
      cornerstoneContent?: boolean;
      isEssentialContent?: boolean;
      allowSearchEngineIndexing?: boolean;
    };
    WebPageCategoryCreateDto: {
      /** Format: uuid */
      id?: string;
      /** Format: date-time */
      timestamp?: string;
      slug?: string | null;
      title?: string | null;
      description?: string | null;
      seoTitle?: string | null;
      metaDescription?: string | null;
      cornerstoneContent?: boolean;
      allowSerachEngines?: boolean;
      seoKeyPhrases?: string | null;
      canonicalUrl?: string | null;
      imageURL?: string | null;
      image?: string | null;
      webPortalID?: string | null;
      businessProfileRecordID?: string | null;
    };
    WebPageCategoryDto: {
      id?: string | null;
      /** Format: date-time */
      timestamp?: string | null;
      slug?: string | null;
      title?: string | null;
      description?: string | null;
      seoTitle?: string | null;
      metaDescription?: string | null;
      cornerstoneContent?: boolean;
      allowSerachEngines?: boolean;
      seoKeyPhrases?: string | null;
      canonicalUrl?: string | null;
      imageURL?: string | null;
      image?: string | null;
      webPortalID?: string | null;
      businessID?: string | null;
      businessProfileRecordID?: string | null;
    };
    WebPageCategoryDtoEnvelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
      result?: components["schemas"]["WebPageCategoryDto"];
    };
    WebPageCategoryDtoListEnvelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
      result?: components["schemas"]["WebPageCategoryDto"][] | null;
    };
    WebPageCategoryUpdateDto: {
      slug?: string | null;
      title?: string | null;
      description?: string | null;
      seoTitle?: string | null;
      metaDescription?: string | null;
      cornerstoneContent?: boolean;
      allowSerachEngines?: boolean;
      seoKeyPhrases?: string | null;
      canonicalUrl?: string | null;
      imageURL?: string | null;
      image?: string | null;
    };
    WebPageCreateDto: {
      /** Format: uuid */
      id?: string;
      /** Format: date-time */
      timestamp?: string;
      tenantId?: string | null;
      enrolmentId?: string | null;
      title?: string | null;
      authorId?: string | null;
      description?: string | null;
      htmlContent?: string | null;
      featuredImageUrl?: string | null;
      webTemplateID?: string | null;
    };
    WebPageDto: {
      id?: string | null;
      /** Format: date-time */
      timestamp?: string | null;
      /** Format: int32 */
      order?: number;
      slug?: string | null;
      name?: string | null;
      title?: string | null;
      excerpt?: string | null;
      password?: string | null;
      description?: string | null;
      highlightImage?: string | null;
      canonicalUrl?: string | null;
      seoTitle?: string | null;
      seoKeyWords?: string | null;
      seoKeyPhrases?: string | null;
      metaDescription?: string | null;
      twitterImage?: string | null;
      twitterTitle?: string | null;
      twitterDescription?: string | null;
      facebookImage?: string | null;
      facebookTitle?: string | null;
      facebookDescription?: string | null;
      featuredImageUrl?: string | null;
      content?: string | null;
      code?: string | null;
      namespace?: string | null;
      typeName?: string | null;
      generatedCode?: string | null;
      compilationPath?: string | null;
      htmlContent?: string | null;
      cSharpContent?: string | null;
      razorContent?: string | null;
      cssContent?: string | null;
      jsContent?: string | null;
      cssFiles?: string | null;
      jsFiles?: string | null;
      razorGeneratedCode?: string | null;
      cSharpGeneratedCode?: string | null;
      template?: boolean;
      default?: boolean;
      enable?: boolean;
      enableComments?: boolean;
      displaySocialBox?: boolean;
      published?: boolean;
      inTrashCan?: boolean;
      systemLocked?: boolean;
      allowPingBacks?: boolean;
      allowTrackbacks?: boolean;
      cornerstoneContent?: boolean;
      isEssentialContent?: boolean;
      allowSearchEngineIndexing?: boolean;
      tenantId?: string | null;
      webPortalId?: string | null;
      websiteThemeId?: string | null;
      enrollmentId?: string | null;
      socialProfileId?: string | null;
      parentWebContentId?: string | null;
      parentWebContentVersionId?: string | null;
      webTemplateID?: string | null;
      isHomePage?: boolean;
      isStorePage?: boolean;
      isCartPage?: boolean;
      isBlogPage?: boolean;
      isAccountPage?: boolean;
      isCheckoutPage?: boolean;
      isWishListsPage?: boolean;
      isContactPage?: boolean;
      isPrivacyPolicyPage?: boolean;
      isTermsOfServicePage?: boolean;
    };
    WebPageDtoEnvelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
      result?: components["schemas"]["WebPageDto"];
    };
    WebPageDtoListEnvelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
      result?: components["schemas"]["WebPageDto"][] | null;
    };
    WebPageTagCreateDto: {
      /** Format: uuid */
      id?: string;
      /** Format: date-time */
      timestamp?: string;
      slug?: string | null;
      title?: string | null;
      description?: string | null;
      seoTitle?: string | null;
      metaDescription?: string | null;
      cornerstoneContent?: boolean;
      allowSerachEngines?: boolean;
      seoKeyPhrases?: string | null;
      canonicalUrl?: string | null;
      imageURL?: string | null;
      image?: string | null;
      webPortalID?: string | null;
      businessProfileRecordID?: string | null;
    };
    WebPageTagDto: {
      id?: string | null;
      /** Format: date-time */
      timestamp?: string | null;
      slug?: string | null;
      title?: string | null;
      description?: string | null;
      seoTitle?: string | null;
      metaDescription?: string | null;
      cornerstoneContent?: boolean;
      allowSerachEngines?: boolean;
      seoKeyPhrases?: string | null;
      canonicalUrl?: string | null;
      imageURL?: string | null;
      image?: string | null;
      webPortalID?: string | null;
      businessID?: string | null;
      businessProfileRecordID?: string | null;
    };
    WebPageTagDtoEnvelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
      result?: components["schemas"]["WebPageTagDto"];
    };
    WebPageTagDtoListEnvelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
      result?: components["schemas"]["WebPageTagDto"][] | null;
    };
    WebPageTagUpdateDto: {
      slug?: string | null;
      title?: string | null;
      description?: string | null;
      seoTitle?: string | null;
      metaDescription?: string | null;
      cornerstoneContent?: boolean;
      allowSerachEngines?: boolean;
      seoKeyPhrases?: string | null;
      canonicalUrl?: string | null;
      imageURL?: string | null;
      image?: string | null;
    };
    WebPageUpdateDto: {
      /** Format: int32 */
      order?: number;
      slug?: string | null;
      name?: string | null;
      title?: string | null;
      excerpt?: string | null;
      password?: string | null;
      description?: string | null;
      highlightImage?: string | null;
      canonicalUrl?: string | null;
      seoTitle?: string | null;
      seoKeyWords?: string | null;
      seoKeyPhrases?: string | null;
      metaDescription?: string | null;
      twitterImage?: string | null;
      twitterTitle?: string | null;
      twitterDescription?: string | null;
      facebookImage?: string | null;
      facebookTitle?: string | null;
      facebookDescription?: string | null;
      featuredImageURL?: string | null;
      content?: string | null;
      code?: string | null;
      namespace?: string | null;
      typeName?: string | null;
      generatedCode?: string | null;
      compilationPath?: string | null;
      htmlContent?: string | null;
      cSharpContent?: string | null;
      razorContent?: string | null;
      cssContent?: string | null;
      jsContent?: string | null;
      cssFiles?: string | null;
      jsFiles?: string | null;
      razorGeneratedCode?: string | null;
      cSharpGeneratedCode?: string | null;
      /** Format: int32 */
      precompiledLogicSize?: number;
      /** Format: int64 */
      precompiledLogicSizeLong?: number;
      /** Format: int32 */
      precompiledViewSize?: number;
      /** Format: int64 */
      precompiledViewSizeLong?: number;
      /** Format: int32 */
      precompiledLogicViewSize?: number;
      template?: boolean;
      default?: boolean;
      enable?: boolean;
      enableComments?: boolean;
      displaySocialBox?: boolean;
      published?: boolean;
      inTrashCan?: boolean;
      systemLocked?: boolean;
      allowPingbacks?: boolean;
      allowTrackbacks?: boolean;
      cornerstoneContent?: boolean;
      isEssentialContent?: boolean;
      allowSearchEngineIndexing?: boolean;
      isHomePage?: boolean;
      isStorePage?: boolean;
      isCartPage?: boolean;
      isBlogPage?: boolean;
      isAccountPage?: boolean;
      isCheckoutPage?: boolean;
      isWishListsPage?: boolean;
      isContactPage?: boolean;
      isPrivacyPolicyPage?: boolean;
      isTermsOfServicePage?: boolean;
    };
    WebPortalCreateDto: {
      /** Format: uuid */
      id?: string;
      /** Format: date-time */
      timestamp?: string;
      root?: boolean;
      title?: string | null;
      domain?: string | null;
      disabled?: boolean;
      businessID?: string | null;
      description?: string | null;
      websiteThemeID?: string | null;
      businessDomainID?: string | null;
      businessProfileRecordID?: string | null;
      businessPortalApplicationID?: string | null;
    };
    WebPortalDto: {
      id?: string | null;
      /** Format: date-time */
      timestamp?: string | null;
      root?: boolean;
      title?: string | null;
      domain?: string | null;
      disabled?: boolean;
      tenantId?: string | null;
      description?: string | null;
      websiteThemeID?: string | null;
      businessDomainID?: string | null;
      businessProfileRecordID?: string | null;
      businessPortalApplicationID?: string | null;
    };
    WebPortalDtoEnvelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
      result?: components["schemas"]["WebPortalDto"];
    };
    WebPortalUpdateDto: {
      root?: boolean;
      title?: string | null;
      domain?: string | null;
      disabled?: boolean;
      description?: string | null;
      websiteThemeID?: string | null;
      businessDomainID?: string | null;
      businessProfileRecordID?: string | null;
      businessPortalApplicationID?: string | null;
    };
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}

export type $defs = Record<string, never>;

export type external = Record<string, never>;

export interface operations {

  /**
   * Get the root portal
   * @description Get the root portal of the this server instance
   */
  GetRootWebPortalAsync: {
    parameters: {
      query?: {
        "api-version"?: string;
      };
      header?: {
        "x-api-version"?: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["WebPortalDtoEnvelope"];
          "application/xml": components["schemas"]["WebPortalDtoEnvelope"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json": components["schemas"]["ErrorEnvelope"];
          "application/xml": components["schemas"]["ErrorEnvelope"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json": components["schemas"]["ErrorEnvelope"];
          "application/xml": components["schemas"]["ErrorEnvelope"];
        };
      };
    };
  };
  /**
   * Get the current portal
   * @description Get the current portal of the this server instance
   */
  GetCurrentWebPortalAsync: {
    parameters: {
      query?: {
        "api-version"?: string;
      };
      header?: {
        "x-api-version"?: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["WebPortalDtoEnvelope"];
          "application/xml": components["schemas"]["WebPortalDtoEnvelope"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json": components["schemas"]["ErrorEnvelope"];
          "application/xml": components["schemas"]["ErrorEnvelope"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json": components["schemas"]["ErrorEnvelope"];
          "application/xml": components["schemas"]["ErrorEnvelope"];
        };
      };
    };
  };
  /**
   * Initialize the current portal
   * @description Initialize the current portal for the current user.
   */
  InitializeCurrentWebPortalAsync: {
    parameters: {
      query?: {
        "api-version"?: string;
      };
      header?: {
        "x-api-version"?: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["WebPortalDtoEnvelope"];
          "application/xml": components["schemas"]["WebPortalDtoEnvelope"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json": components["schemas"]["ErrorEnvelope"];
          "application/xml": components["schemas"]["ErrorEnvelope"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json": components["schemas"]["ErrorEnvelope"];
          "application/xml": components["schemas"]["ErrorEnvelope"];
        };
      };
    };
  };
  /**
   * Get the current portal's options
   * @description Get the current portal's options for the current user.
   */
  GetCurrentWebPortalOptionsAsync: {
    parameters: {
      query?: {
        "api-version"?: string;
      };
      header?: {
        "x-api-version"?: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["PortalOptionsEnvelope"];
          "application/xml": components["schemas"]["PortalOptionsEnvelope"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json": components["schemas"]["ErrorEnvelope"];
          "application/xml": components["schemas"]["ErrorEnvelope"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json": components["schemas"]["ErrorEnvelope"];
          "application/xml": components["schemas"]["ErrorEnvelope"];
        };
      };
    };
  };
  /**
   * Search for a portal by its domain
   * @description Search for a portal by its domain
   */
  SearchWebPortalAsync: {
    parameters: {
      query: {
        domain: string;
        "api-version"?: string;
      };
      header?: {
        "x-api-version"?: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["WebPortalDtoEnvelope"];
          "application/xml": components["schemas"]["WebPortalDtoEnvelope"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json": components["schemas"]["ErrorEnvelope"];
          "application/xml": components["schemas"]["ErrorEnvelope"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json": components["schemas"]["ErrorEnvelope"];
          "application/xml": components["schemas"]["ErrorEnvelope"];
        };
      };
    };
  };
  /**
   * Get a web portal by its ID
   * @description Get a web portal by its ID
   */
  GetWebPortalByIdAsync: {
    parameters: {
      query?: {
        "api-version"?: string;
      };
      header?: {
        "x-api-version"?: string;
      };
      path: {
        portalId: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["WebPortalDtoEnvelope"];
          "application/xml": components["schemas"]["WebPortalDtoEnvelope"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json": components["schemas"]["ErrorEnvelope"];
          "application/xml": components["schemas"]["ErrorEnvelope"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json": components["schemas"]["ErrorEnvelope"];
          "application/xml": components["schemas"]["ErrorEnvelope"];
        };
      };
    };
  };
  /**
   * Update an existing web portal
   * @description Update an existing web portal
   */
  UpdateWebPortalAsync: {
    parameters: {
      query: {
        tenantId: string;
        "api-version"?: string;
      };
      header?: {
        "x-api-version"?: string;
      };
      path: {
        portalId: string;
      };
    };
    requestBody?: {
      content: {
        "application/json": components["schemas"]["WebPortalUpdateDto"];
        "application/xml": components["schemas"]["WebPortalUpdateDto"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["EmptyEnvelope"];
          "application/xml": components["schemas"]["EmptyEnvelope"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json": components["schemas"]["ErrorEnvelope"];
          "application/xml": components["schemas"]["ErrorEnvelope"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json": components["schemas"]["ErrorEnvelope"];
          "application/xml": components["schemas"]["ErrorEnvelope"];
        };
      };
    };
  };
  /**
   * Delete a web portal
   * @description Delete a web portal
   */
  DeleteWebPortalAsync: {
    parameters: {
      query: {
        tenantId: string;
        "api-version"?: string;
      };
      header?: {
        "x-api-version"?: string;
      };
      path: {
        portalId: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["PortalId"];
        "application/xml": components["schemas"]["PortalId"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["EmptyEnvelope"];
          "application/xml": components["schemas"]["EmptyEnvelope"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json": components["schemas"]["ErrorEnvelope"];
          "application/xml": components["schemas"]["ErrorEnvelope"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json": components["schemas"]["ErrorEnvelope"];
          "application/xml": components["schemas"]["ErrorEnvelope"];
        };
      };
    };
  };
  /**
   * Partially update a web portal
   * @description Partially update a web portal
   */
  PatchWebPortalAsync: {
    parameters: {
      query: {
        tenantId: string;
        "api-version"?: string;
      };
      header?: {
        "x-api-version"?: string;
      };
      path: {
        portalId: components["schemas"]["PortalId"];
      };
    };
    requestBody?: {
      content: {
        "application/json": components["schemas"]["Operation"][];
        "application/xml": components["schemas"]["Operation"][];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["EmptyEnvelope"];
          "application/xml": components["schemas"]["EmptyEnvelope"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json": components["schemas"]["ErrorEnvelope"];
          "application/xml": components["schemas"]["ErrorEnvelope"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json": components["schemas"]["ErrorEnvelope"];
          "application/xml": components["schemas"]["ErrorEnvelope"];
        };
      };
    };
  };
  /**
   * Get a web portal's settings by its ID
   * @description Get a web portal's settings by its ID
   */
  GetWebPortalSettingsAsync: {
    parameters: {
      query?: {
        "api-version"?: string;
      };
      header?: {
        "x-api-version"?: string;
      };
      path: {
        portalId: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["PortalSettingsEnvelope"];
          "application/xml": components["schemas"]["PortalSettingsEnvelope"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json": components["schemas"]["ErrorEnvelope"];
          "application/xml": components["schemas"]["ErrorEnvelope"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json": components["schemas"]["ErrorEnvelope"];
          "application/xml": components["schemas"]["ErrorEnvelope"];
        };
      };
    };
  };
  /**
   * Get a web portal's options by its ID
   * @description Get a web portal's options by its ID
   */
  GetWebPortalOptionsAsync: {
    parameters: {
      query?: {
        "api-version"?: string;
      };
      header?: {
        "x-api-version"?: string;
      };
      path: {
        portalId: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["PortalOptionsEnvelope"];
          "application/xml": components["schemas"]["PortalOptionsEnvelope"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json": components["schemas"]["ErrorEnvelope"];
          "application/xml": components["schemas"]["ErrorEnvelope"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json": components["schemas"]["ErrorEnvelope"];
          "application/xml": components["schemas"]["ErrorEnvelope"];
        };
      };
    };
  };
  /**
   * Create a new web portal
   * @description Create a new web portal
   */
  CreateWebPortalAsync: {
    parameters: {
      query: {
        tenantId: string;
        "api-version"?: string;
      };
      header?: {
        "x-api-version"?: string;
      };
    };
    requestBody?: {
      content: {
        "application/json": components["schemas"]["WebPortalCreateDto"];
        "application/xml": components["schemas"]["WebPortalCreateDto"];
      };
    };
    responses: {
      /** @description Created */
      201: {
        content: {
          "application/json": components["schemas"]["EmptyEnvelope"];
          "application/xml": components["schemas"]["EmptyEnvelope"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json": components["schemas"]["ErrorEnvelope"];
          "application/xml": components["schemas"]["ErrorEnvelope"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json": components["schemas"]["ErrorEnvelope"];
          "application/xml": components["schemas"]["ErrorEnvelope"];
        };
      };
    };
  };
}
