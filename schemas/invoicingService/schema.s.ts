/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */


export interface paths {
  "/api/v2/InvoicingService/Invoices": {
    get: {
      parameters: {
        query: {
          tenantId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["InvoiceDtoListEnvelope"];
            "application/xml": components["schemas"]["InvoiceDtoListEnvelope"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    post: {
      parameters: {
        query: {
          tenantId: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["InvoiceCreateDto"];
          "application/xml": components["schemas"]["InvoiceCreateDto"];
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["EmptyEnvelope"];
            "application/xml": components["schemas"]["EmptyEnvelope"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/InvoicingService/Invoices/Count": {
    get: {
      parameters: {
        query: {
          tenantId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["Int32Envelope"];
            "application/xml": components["schemas"]["Int32Envelope"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/InvoicingService/Invoices/Extended": {
    get: {
      parameters: {
        query: {
          tenantId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["ExtendedInvoiceDtoListEnvelope"];
            "application/xml": components["schemas"]["ExtendedInvoiceDtoListEnvelope"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/InvoicingService/Invoices/Extended/Count": {
    get: {
      parameters: {
        query: {
          tenantId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["Int32Envelope"];
            "application/xml": components["schemas"]["Int32Envelope"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/InvoicingService/Invoices/{invoiceId}/Extended": {
    get: {
      parameters: {
        query: {
          tenantId: string;
        };
        path: {
          invoiceId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["InvoiceDtoEnvelope"];
            "application/xml": components["schemas"]["InvoiceDtoEnvelope"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/InvoicingService/Invoices/{invoiceId}": {
    get: operations["GetInvoiceAsync"];
    put: {
      parameters: {
        query: {
          tenantId: string;
        };
        path: {
          invoiceId: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["InvoiceUpdateDto"];
          "application/xml": components["schemas"]["InvoiceUpdateDto"];
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["EmptyEnvelope"];
            "application/xml": components["schemas"]["EmptyEnvelope"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    delete: {
      parameters: {
        query: {
          tenantId: string;
        };
        path: {
          invoiceId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["EmptyEnvelope"];
            "application/xml": components["schemas"]["EmptyEnvelope"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/InvoicingService/Invoices/{invoiceId}/Calculate": {
    put: {
      parameters: {
        query: {
          tenantId: string;
        };
        path: {
          invoiceId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["EmptyEnvelope"];
            "application/xml": components["schemas"]["EmptyEnvelope"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/InvoicingService/Invoices/{invoiceId}/Lines": {
    get: {
      parameters: {
        query: {
          tenantId: string;
          itemId?: string;
        };
        path: {
          invoiceId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["InvoiceLineDtoListEnvelope"];
            "application/xml": components["schemas"]["InvoiceLineDtoListEnvelope"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    post: {
      parameters: {
        query: {
          tenantId: string;
        };
        path: {
          invoiceId: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["InvoiceLineCreateDto"];
          "application/xml": components["schemas"]["InvoiceLineCreateDto"];
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["EmptyEnvelope"];
            "application/xml": components["schemas"]["EmptyEnvelope"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/InvoicingService/Invoices/{invoiceId}/Lines/Count": {
    get: {
      parameters: {
        query: {
          tenantId: string;
        };
        path: {
          invoiceId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["Int32Envelope"];
            "application/xml": components["schemas"]["Int32Envelope"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/InvoicingService/Invoices/{invoiceId}/Lines/{invoiceLineId}": {
    get: {
      parameters: {
        query: {
          tenantId: string;
        };
        path: {
          invoiceId: string;
          invoiceLineId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["InvoiceLineDtoEnvelope"];
            "application/xml": components["schemas"]["InvoiceLineDtoEnvelope"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    put: {
      parameters: {
        query: {
          tenantId: string;
        };
        path: {
          invoiceId: string;
          invoiceLineId: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["InvoiceLineUpdateDto"];
          "application/xml": components["schemas"]["InvoiceLineUpdateDto"];
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["EmptyEnvelope"];
            "application/xml": components["schemas"]["EmptyEnvelope"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    delete: {
      parameters: {
        query: {
          tenantId: string;
        };
        path: {
          invoiceId: string;
          invoiceLineId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["EmptyEnvelope"];
            "application/xml": components["schemas"]["EmptyEnvelope"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/InvoicingService/Invoices/{invoiceId}/Lines/{invoiceLineId}/Calculate": {
    put: {
      parameters: {
        query: {
          tenantId: string;
        };
        path: {
          invoiceId: string;
          invoiceLineId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["EmptyEnvelope"];
            "application/xml": components["schemas"]["EmptyEnvelope"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/InvoicingService/Invoices/{invoiceId}/Lines/{invoiceLineId}/Taxes": {
    get: {
      parameters: {
        query: {
          tenantId: string;
        };
        path: {
          invoiceId: string;
          invoiceLineId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["InvoiceLineAppliedTaxDtoListEnvelope"];
            "application/xml": components["schemas"]["InvoiceLineAppliedTaxDtoListEnvelope"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    post: {
      parameters: {
        query: {
          tenantId: string;
        };
        path: {
          invoiceId: string;
          invoiceLineId: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["InvoiceLineAppliedTaxCreateDto"];
          "application/xml": components["schemas"]["InvoiceLineAppliedTaxCreateDto"];
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["EmptyEnvelope"];
            "application/xml": components["schemas"]["EmptyEnvelope"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/InvoicingService/Invoices/{invoiceId}/Lines/{invoiceLineId}/Taxes/Count": {
    get: {
      parameters: {
        query: {
          tenantId: string;
        };
        path: {
          invoiceId: string;
          invoiceLineId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["Int32Envelope"];
            "application/xml": components["schemas"]["Int32Envelope"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/InvoicingService/Invoices/{invoiceId}/Lines/{invoiceLineId}/Taxes/{invoiceLineTaxId}": {
    put: {
      parameters: {
        query: {
          tenantId: string;
        };
        path: {
          invoiceId: string;
          invoiceLineId: string;
          invoiceLineTaxId: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["InvoiceLineAppliedTaxUpdateDto"];
          "application/xml": components["schemas"]["InvoiceLineAppliedTaxUpdateDto"];
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["EmptyEnvelope"];
            "application/xml": components["schemas"]["EmptyEnvelope"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    delete: {
      parameters: {
        query: {
          tenantId: string;
        };
        path: {
          invoiceId: string;
          invoiceLineId: string;
          invoiceLineTaxId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["EmptyEnvelope"];
            "application/xml": components["schemas"]["EmptyEnvelope"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/InvoicingService/Invoices/{invoiceId}/Adjustments": {
    get: {
      parameters: {
        query: {
          tenantId: string;
        };
        path: {
          invoiceId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["InvoiceAdjustmentDtoListEnvelope"];
            "application/xml": components["schemas"]["InvoiceAdjustmentDtoListEnvelope"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    post: {
      parameters: {
        query: {
          tenantId: string;
        };
        path: {
          invoiceId: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["InvoiceAdjustmentCreateDto"];
          "application/xml": components["schemas"]["InvoiceAdjustmentCreateDto"];
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["EmptyEnvelope"];
            "application/xml": components["schemas"]["EmptyEnvelope"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/InvoicingService/Invoices/{invoiceId}/Adjustments/Count": {
    get: {
      parameters: {
        query: {
          tenantId: string;
        };
        path: {
          invoiceId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["Int32Envelope"];
            "application/xml": components["schemas"]["Int32Envelope"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/InvoicingService/Invoices/{invoiceId}/Adjustments/{invoiceAdjustmentId}": {
    get: {
      parameters: {
        query: {
          tenantId: string;
        };
        path: {
          invoiceId: string;
          invoiceAdjustmentId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["InvoiceAdjustmentDtoEnvelope"];
            "application/xml": components["schemas"]["InvoiceAdjustmentDtoEnvelope"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    put: {
      parameters: {
        query: {
          tenantId: string;
        };
        path: {
          invoiceId: string;
          invoiceAdjustmentId: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["InvoiceAdjustmentUpdateDto"];
          "application/xml": components["schemas"]["InvoiceAdjustmentUpdateDto"];
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["EmptyEnvelope"];
            "application/xml": components["schemas"]["EmptyEnvelope"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    delete: {
      parameters: {
        query: {
          tenantId: string;
        };
        path: {
          invoiceId: string;
          invoiceAdjustmentId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["EmptyEnvelope"];
            "application/xml": components["schemas"]["EmptyEnvelope"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/InvoicingService/Invoices/{invoiceId}/References": {
    get: {
      parameters: {
        query: {
          tenantId: string;
        };
        path: {
          invoiceId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["InvoiceReferenceDtoListEnvelope"];
            "application/xml": components["schemas"]["InvoiceReferenceDtoListEnvelope"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    post: {
      parameters: {
        query: {
          tenantId: string;
        };
        path: {
          invoiceId: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["InvoiceReferenceCreateDto"];
          "application/xml": components["schemas"]["InvoiceReferenceCreateDto"];
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["EmptyEnvelope"];
            "application/xml": components["schemas"]["EmptyEnvelope"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/InvoicingService/Invoices/{invoiceId}/References/Count": {
    get: {
      parameters: {
        query: {
          tenantId: string;
        };
        path: {
          invoiceId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["Int32Envelope"];
            "application/xml": components["schemas"]["Int32Envelope"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/InvoicingService/Invoices/{invoiceId}/References/{invoiceReferenceId}": {
    get: {
      parameters: {
        query: {
          tenantId: string;
        };
        path: {
          invoiceId: string;
          invoiceReferenceId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["InvoiceReferenceDtoEnvelope"];
            "application/xml": components["schemas"]["InvoiceReferenceDtoEnvelope"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    put: {
      parameters: {
        query: {
          tenantId: string;
        };
        path: {
          invoiceId: string;
          invoiceReferenceId: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["InvoiceReferenceUpdateDto"];
          "application/xml": components["schemas"]["InvoiceReferenceUpdateDto"];
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["EmptyEnvelope"];
            "application/xml": components["schemas"]["EmptyEnvelope"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    delete: {
      parameters: {
        query: {
          tenantId: string;
        };
        path: {
          invoiceId: string;
          invoiceReferenceId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["EmptyEnvelope"];
            "application/xml": components["schemas"]["EmptyEnvelope"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/InvoicingService/Invoices/{invoiceId}/Payments": {
    get: {
      parameters: {
        path: {
          invoiceId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["InvoiceDtoListEnvelope"];
            "application/xml": components["schemas"]["InvoiceDtoListEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/InvoicingService/Invoices/{invoiceId}/Payments/Count": {
    get: {
      parameters: {
        path: {
          invoiceId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["Int32Envelope"];
            "application/xml": components["schemas"]["Int32Envelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/InvoicingService/Invoices/TotalsAggregate": {
    post: {
      parameters: {
        query?: {
          currencyId?: string;
        };
      };
      requestBody: {
        content: {
          "application/json": string[];
          "application/xml": string[];
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["MoneyEnvelope"];
            "application/xml": components["schemas"]["MoneyEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/InvoicingService/Invoices/TaxesAggregate": {
    post: {
      parameters: {
        query?: {
          currencyId?: string;
        };
      };
      requestBody: {
        content: {
          "application/json": string[];
          "application/xml": string[];
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["MoneyEnvelope"];
            "application/xml": components["schemas"]["MoneyEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/InvoicingService/Invoices/DiscountsAggregate": {
    post: {
      parameters: {
        query?: {
          currencyId?: string;
        };
      };
      requestBody: {
        content: {
          "application/json": string[];
          "application/xml": string[];
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["MoneyEnvelope"];
            "application/xml": components["schemas"]["MoneyEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/InvoicingService/Invoices/TaxBasesAggregate": {
    post: {
      parameters: {
        query?: {
          currencyId?: string;
        };
      };
      requestBody: {
        content: {
          "application/json": string[];
          "application/xml": string[];
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["MoneyEnvelope"];
            "application/xml": components["schemas"]["MoneyEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/InvoicingService/Invoices/GlobalSurchargesAggregate": {
    post: {
      parameters: {
        query?: {
          currencyId?: string;
        };
      };
      requestBody: {
        content: {
          "application/json": string[];
          "application/xml": string[];
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["MoneyEnvelope"];
            "application/xml": components["schemas"]["MoneyEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: {
    Currency: {
      code?: string | null;
      country?: string | null;
    };
    EmptyEnvelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
    };
    ErrorEnvelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
    };
    ExtendedInvoiceDto: {
      id?: string | null;
      /** Format: date-time */
      timestamp?: string | null;
      closed?: boolean;
      type?: string | null;
      title?: string | null;
      userId?: string | null;
      tenantId?: string | null;
      currencyId?: string | null;
      description?: string | null;
      priceListId?: string | null;
      enrollmentId?: string | null;
      individualId?: string | null;
      organizationId?: string | null;
      receiverTenantId?: string | null;
      firstName?: string | null;
      lastName?: string | null;
      companyName?: string | null;
      billingEmail?: string | null;
      addressLine1?: string | null;
      addressLine2?: string | null;
      postalCode?: string | null;
      countryId?: string | null;
      stateId?: string | null;
      cityId?: string | null;
      customerNotes?: string | null;
      /** Format: double */
      forexRate?: number;
      /** Format: double */
      total?: number;
      /** Format: double */
      totalTaxes?: number;
      /** Format: double */
      totalTaxBase?: number;
      /** Format: double */
      totalDiscounts?: number;
      /** Format: double */
      totalSurcharges?: number;
      /** Format: double */
      totalGlobalDiscounts?: number;
      /** Format: double */
      totalGlobalSurcharges?: number;
      /** Format: double */
      totalTaxesInUsd?: number;
      /** Format: double */
      totalAmountInUsd?: number;
      /** Format: double */
      totalProfitInUsd?: number;
      /** Format: double */
      totalTaxBaseInUsd?: number;
      /** Format: double */
      totalDiscountsInUsd?: number;
      /** Format: double */
      totalSurchargesInUsd?: number;
      /** Format: double */
      totalDetailAmountInUsd?: number;
      /** Format: double */
      totalGlobalDiscountsInUsd?: number;
      /** Format: double */
      totalGlobalSurchargesInUsd?: number;
      /** Format: double */
      totalWithholdingTaxesInUsd?: number;
      /** Format: double */
      totalShippingCostInUsd?: number;
      /** Format: double */
      totalShippingTaxesInUsd?: number;
      currency?: components["schemas"]["Currency"];
      totalInUsd?: components["schemas"]["Money"];
      totalTaxAmountInUsd?: components["schemas"]["Money"];
      totalTaxBaseAmountInUsd?: components["schemas"]["Money"];
      totalDiscountsAmountInUsd?: components["schemas"]["Money"];
      totalSurchargesAmountInUsd?: components["schemas"]["Money"];
      totalGlobalDiscountsAmountInUsd?: components["schemas"]["Money"];
      totalGlobalSurchargesAmountInUsd?: components["schemas"]["Money"];
      totalAmount?: components["schemas"]["Money"];
      totalTaxAmount?: components["schemas"]["Money"];
      totalTaxBaseAmount?: components["schemas"]["Money"];
      totalDiscountsAmount?: components["schemas"]["Money"];
      totalSurchargesAmount?: components["schemas"]["Money"];
      totalGlobalDiscountsAmount?: components["schemas"]["Money"];
      totalGlobalSurchargesAmount?: components["schemas"]["Money"];
      paid?: boolean;
      /** Format: int64 */
      number?: number;
      notes?: string | null;
      orderId?: string | null;
      enumeration?: string | null;
      paymentModeId?: string | null;
      enumerationRangeId?: string | null;
      emisorBillingProfileId?: string | null;
      receiverBillingProfileId?: string | null;
      emisorWalletAccountId?: string | null;
      receiverWalletAccountId?: string | null;
      /** Format: date-time */
      paymentDue?: string | null;
      /**
       * Format: int32
       * @enum {integer}
       */
      invoiceType?: 0 | 1;
      /**
       * Format: int32
       * @enum {integer}
       */
      documentType?: 0 | 1 | 2;
      /**
       * Format: int32
       * @enum {integer}
       */
      invoiceStatus?: 0 | 1 | 2 | 3 | 4;
      tenant?: components["schemas"]["TenantDto"];
      user?: components["schemas"]["SimpleUserDto"];
      receiverTenant?: components["schemas"]["TenantDto"];
      individual?: components["schemas"]["SimpleContactDto"];
      organization?: components["schemas"]["SimpleContactDto"];
      enrollment?: components["schemas"]["SimpleTenantEnrolmentDto"];
    };
    ExtendedInvoiceDtoListEnvelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
      result?: components["schemas"]["ExtendedInvoiceDto"][] | null;
    };
    Int32Envelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
      /** Format: int32 */
      result?: number;
    };
    InvoiceAdjustmentCreateDto: {
      /** Format: uuid */
      id?: string;
      /** Format: date-time */
      timestamp?: string;
      tenantId?: string | null;
      invoiceId?: string | null;
      currencyId?: string | null;
      enrollmentId?: string | null;
      description?: string | null;
      /** Format: double */
      surchargePercent?: number;
      /** Format: double */
      surchargeAmount?: number;
      /** Format: double */
      discountPercent?: number;
      /** Format: double */
      discountAmount?: number;
      /** Format: double */
      totalSurcharge?: number;
      /** Format: double */
      totalDiscount?: number;
      /**
       * Format: int32
       * @enum {integer}
       */
      type?: 0 | 1;
    };
    InvoiceAdjustmentDto: {
      id?: string | null;
      /** Format: date-time */
      timestamp?: string | null;
      tenantId?: string | null;
      invoiceId?: string | null;
      currencyId?: string | null;
      enrollmentId?: string | null;
      description?: string | null;
      /** Format: double */
      surchargePercent?: number;
      /** Format: double */
      surchargeAmount?: number;
      /** Format: double */
      discountPercent?: number;
      /** Format: double */
      discountAmount?: number;
      /** Format: double */
      totalSurcharge?: number;
      /** Format: double */
      totalDiscount?: number;
      /**
       * Format: int32
       * @enum {integer}
       */
      type?: 0 | 1;
    };
    InvoiceAdjustmentDtoEnvelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
      result?: components["schemas"]["InvoiceAdjustmentDto"];
    };
    InvoiceAdjustmentDtoListEnvelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
      result?: components["schemas"]["InvoiceAdjustmentDto"][] | null;
    };
    InvoiceAdjustmentUpdateDto: {
      currencyId?: string | null;
      description?: string | null;
      /** Format: double */
      surchargePercent?: number;
      /** Format: double */
      surchargeAmount?: number;
      /** Format: double */
      discountPercent?: number;
      /** Format: double */
      discountAmount?: number;
      /** Format: double */
      totalSurcharge?: number;
      /** Format: double */
      totalDiscount?: number;
      /**
       * Format: int32
       * @enum {integer}
       */
      type?: 0 | 1;
    };
    InvoiceCreateDto: {
      /** Format: uuid */
      id?: string;
      /** Format: date-time */
      timestamp?: string;
      closed?: boolean;
      title?: string | null;
      userId?: string | null;
      tenantId?: string | null;
      priceListId?: string | null;
      description?: string | null;
      enrollmentId?: string | null;
      individualId?: string | null;
      paymentTermId?: string | null;
      organizationId?: string | null;
      currencyId?: string | null;
      /** Format: double */
      forexRate?: number;
      firstName?: string | null;
      lastName?: string | null;
      companyName?: string | null;
      billingEmail?: string | null;
      addressLine1?: string | null;
      addressLine2?: string | null;
      postalCode?: string | null;
      countryId?: string | null;
      stateId?: string | null;
      cityId?: string | null;
      paid?: boolean;
      /** Format: int32 */
      number?: number;
      notes?: string | null;
      customerNotes?: string | null;
      orderId?: string | null;
      enumeration?: string | null;
      paymentModeId?: string | null;
      receiverTenantId?: string | null;
      enumerationRangeId?: string | null;
      emisorBillingProfileId?: string | null;
      receiverBillingProfileId?: string | null;
      emisorWalletAccountId?: string | null;
      receiverWalletAccountId?: string | null;
      /** Format: date-time */
      paymentDue?: string | null;
      /**
       * Format: int32
       * @enum {integer}
       */
      invoiceType?: 0 | 1;
      /**
       * Format: int32
       * @enum {integer}
       */
      documentType?: 0 | 1 | 2;
      /**
       * Format: int32
       * @enum {integer}
       */
      invoiceStatus?: 0 | 1 | 2 | 3 | 4;
      /** Format: date-time */
      validFrom?: string | null;
      /** Format: date-time */
      validTo?: string | null;
      invoiceReferences?: components["schemas"]["InvoiceReferenceDto"][] | null;
      invoiceItemRecords?: components["schemas"]["InvoiceItemRecordDto"][] | null;
      invoiceAdjustments?: components["schemas"]["InvoiceAdjustmentDto"][] | null;
    };
    InvoiceDto: {
      id?: string | null;
      /** Format: date-time */
      timestamp?: string | null;
      closed?: boolean;
      type?: string | null;
      title?: string | null;
      userId?: string | null;
      tenantId?: string | null;
      currencyId?: string | null;
      description?: string | null;
      priceListId?: string | null;
      enrollmentId?: string | null;
      individualId?: string | null;
      organizationId?: string | null;
      receiverTenantId?: string | null;
      firstName?: string | null;
      lastName?: string | null;
      companyName?: string | null;
      billingEmail?: string | null;
      addressLine1?: string | null;
      addressLine2?: string | null;
      postalCode?: string | null;
      countryId?: string | null;
      stateId?: string | null;
      cityId?: string | null;
      customerNotes?: string | null;
      /** Format: double */
      forexRate?: number;
      /** Format: double */
      total?: number;
      /** Format: double */
      totalTaxes?: number;
      /** Format: double */
      totalTaxBase?: number;
      /** Format: double */
      totalDiscounts?: number;
      /** Format: double */
      totalSurcharges?: number;
      /** Format: double */
      totalGlobalDiscounts?: number;
      /** Format: double */
      totalGlobalSurcharges?: number;
      /** Format: double */
      totalTaxesInUsd?: number;
      /** Format: double */
      totalAmountInUsd?: number;
      /** Format: double */
      totalProfitInUsd?: number;
      /** Format: double */
      totalTaxBaseInUsd?: number;
      /** Format: double */
      totalDiscountsInUsd?: number;
      /** Format: double */
      totalSurchargesInUsd?: number;
      /** Format: double */
      totalDetailAmountInUsd?: number;
      /** Format: double */
      totalGlobalDiscountsInUsd?: number;
      /** Format: double */
      totalGlobalSurchargesInUsd?: number;
      /** Format: double */
      totalWithholdingTaxesInUsd?: number;
      /** Format: double */
      totalShippingCostInUsd?: number;
      /** Format: double */
      totalShippingTaxesInUsd?: number;
      currency?: components["schemas"]["Currency"];
      totalInUsd?: components["schemas"]["Money"];
      totalTaxAmountInUsd?: components["schemas"]["Money"];
      totalTaxBaseAmountInUsd?: components["schemas"]["Money"];
      totalDiscountsAmountInUsd?: components["schemas"]["Money"];
      totalSurchargesAmountInUsd?: components["schemas"]["Money"];
      totalGlobalDiscountsAmountInUsd?: components["schemas"]["Money"];
      totalGlobalSurchargesAmountInUsd?: components["schemas"]["Money"];
      totalAmount?: components["schemas"]["Money"];
      totalTaxAmount?: components["schemas"]["Money"];
      totalTaxBaseAmount?: components["schemas"]["Money"];
      totalDiscountsAmount?: components["schemas"]["Money"];
      totalSurchargesAmount?: components["schemas"]["Money"];
      totalGlobalDiscountsAmount?: components["schemas"]["Money"];
      totalGlobalSurchargesAmount?: components["schemas"]["Money"];
      paid?: boolean;
      /** Format: int64 */
      number?: number;
      notes?: string | null;
      orderId?: string | null;
      enumeration?: string | null;
      paymentModeId?: string | null;
      enumerationRangeId?: string | null;
      emisorBillingProfileId?: string | null;
      receiverBillingProfileId?: string | null;
      emisorWalletAccountId?: string | null;
      receiverWalletAccountId?: string | null;
      /** Format: date-time */
      paymentDue?: string | null;
      /**
       * Format: int32
       * @enum {integer}
       */
      invoiceType?: 0 | 1;
      /**
       * Format: int32
       * @enum {integer}
       */
      documentType?: 0 | 1 | 2;
      /**
       * Format: int32
       * @enum {integer}
       */
      invoiceStatus?: 0 | 1 | 2 | 3 | 4;
    };
    InvoiceDtoEnvelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
      result?: components["schemas"]["InvoiceDto"];
    };
    InvoiceDtoListEnvelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
      result?: components["schemas"]["InvoiceDto"][] | null;
    };
    InvoiceItemRecordDto: {
      id?: string | null;
      /** Format: date-time */
      timestamp?: string | null;
      closed?: boolean;
      itemId?: string | null;
      itemTitle?: string | null;
      itemShortDescription?: string | null;
      itemPrimaryImageUrl?: string | null;
      shippingPolicyId?: string | null;
      tenantId?: string | null;
      enrollmentId?: string | null;
      currencyId?: string | null;
      description?: string | null;
      /** Format: double */
      quantity?: number;
      free?: boolean;
      freeReason?: string | null;
      freeReasonCode?: string | null;
      data?: string | null;
      dataLabel?: string | null;
      data1?: string | null;
      data1Label?: string | null;
      data2?: string | null;
      data2Label?: string | null;
      data3?: string | null;
      data3Label?: string | null;
      data4?: string | null;
      data4Label?: string | null;
      data5?: string | null;
      data5Label?: string | null;
      data6?: string | null;
      data6Label?: string | null;
      data7?: string | null;
      data7Label?: string | null;
      data8?: string | null;
      data8Label?: string | null;
      data9?: string | null;
      data9Label?: string | null;
      itemPriceId?: string | null;
      priceListItemId?: string | null;
      unitId?: string | null;
      unitGroupId?: string | null;
      /**
       * Format: int32
       * @enum {integer}
       */
      taxCalculationMethod?: 0 | 1;
      /**
       * Format: int32
       * @enum {integer}
       */
      costCalculationMethod?: 0 | 1;
      forexRatesSnapshot?: string | null;
      /** Format: double */
      forexRate?: number;
      /** Format: double */
      totalBaseAmountInUsd?: number;
      /** Format: double */
      totalProfitInUsd?: number;
      /** Format: double */
      totalDetailAmountInUsd?: number;
      /** Format: double */
      totalTaxBaseInUsd?: number;
      /** Format: double */
      totalDiscountsInUsd?: number;
      /** Format: double */
      totalTaxesInUsd?: number;
      /** Format: double */
      totalWithholdingTaxesInUsd?: number;
      /** Format: double */
      totalShippingCostInUsd?: number;
      /** Format: double */
      totalShippingTaxesInUsd?: number;
      /** Format: double */
      totalWarrantyCostInUsd?: number;
      /** Format: double */
      totalReturnCostInUsd?: number;
      /** Format: double */
      totalRefundCostInUsd?: number;
      /** Format: double */
      totalSurchargesInUsd?: number;
      /** Format: double */
      totalAmountInUsd?: number;
      /** Format: double */
      totalGlobalDiscountsInUsd?: number;
      /** Format: double */
      totalGlobalSurchargesInUsd?: number;
      /** Format: double */
      customGlobalSurchargesAmount?: number;
      /** Format: double */
      customGlobalDiscountsAmount?: number;
      /** Format: double */
      customBaseAmount?: number;
      /** Format: double */
      customDetailAmount?: number;
      /** Format: double */
      customDiscountsAmount?: number;
      /** Format: double */
      customTaxBase?: number;
      /** Format: double */
      customSurchargesAmount?: number;
      /** Format: double */
      customProfitAmount?: number;
      /** Format: double */
      customShippingCostAmount?: number;
      /** Format: double */
      customShippingTaxAmount?: number;
      /** Format: double */
      customTaxAmount?: number;
      /** Format: double */
      customWithholdingTaxAmount?: number;
      /** Format: double */
      customTotalAmount?: number;
      returnPolicyId?: string | null;
      refundPolicyId?: string | null;
      warrantyPolicyId?: string | null;
      shipmentPolicyId?: string | null;
      shippingLocationId?: string | null;
      locationId?: string | null;
      quoteItemRecordId?: string | null;
      businessProfileRecordId?: string | null;
      parentBillingItemRecordId?: string | null;
      invoiceId?: string | null;
    };
    InvoiceLineAppliedTaxCreateDto: {
      /** Format: uuid */
      id?: string;
      /** Format: date-time */
      timestamp?: string;
      tenantId?: string | null;
      invoiceId?: string | null;
      taxPolicyId?: string | null;
      enrollmentId?: string | null;
    };
    InvoiceLineAppliedTaxDto: {
      id?: string | null;
      /** Format: date-time */
      timestamp?: string | null;
      tenantId?: string | null;
      invoiceId?: string | null;
      enrollmentId?: string | null;
      invoiceLineId?: string | null;
      taxPolicyId?: string | null;
      itemPriceId?: string | null;
      itemId?: string | null;
      /** Format: double */
      taxAmountInUsd?: number;
      /** Format: double */
      taxBaseAmountInUsd?: number;
      taxPolicyName?: string | null;
      taxPolicyDescription?: string | null;
    };
    InvoiceLineAppliedTaxDtoListEnvelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
      result?: components["schemas"]["InvoiceLineAppliedTaxDto"][] | null;
    };
    InvoiceLineAppliedTaxUpdateDto: {
      taxPolicyId?: string | null;
    };
    InvoiceLineCreateDto: {
      /** Format: uuid */
      id?: string;
      /** Format: date-time */
      timestamp?: string;
      invoiceId?: string | null;
      currencyId?: string | null;
      itemId?: string | null;
      /** Format: int32 */
      quantity?: number;
    };
    InvoiceLineDto: {
      id?: string | null;
      /** Format: date-time */
      timestamp?: string | null;
      closed?: boolean;
      itemId?: string | null;
      itemTitle?: string | null;
      itemShortDescription?: string | null;
      itemPrimaryImageUrl?: string | null;
      shippingPolicyId?: string | null;
      tenantId?: string | null;
      enrollmentId?: string | null;
      currencyId?: string | null;
      description?: string | null;
      /** Format: double */
      quantity?: number;
      free?: boolean;
      freeReason?: string | null;
      freeReasonCode?: string | null;
      data?: string | null;
      dataLabel?: string | null;
      data1?: string | null;
      data1Label?: string | null;
      data2?: string | null;
      data2Label?: string | null;
      data3?: string | null;
      data3Label?: string | null;
      data4?: string | null;
      data4Label?: string | null;
      data5?: string | null;
      data5Label?: string | null;
      data6?: string | null;
      data6Label?: string | null;
      data7?: string | null;
      data7Label?: string | null;
      data8?: string | null;
      data8Label?: string | null;
      data9?: string | null;
      data9Label?: string | null;
      itemPriceId?: string | null;
      priceListItemId?: string | null;
      unitId?: string | null;
      unitGroupId?: string | null;
      /**
       * Format: int32
       * @enum {integer}
       */
      taxCalculationMethod?: 0 | 1;
      /**
       * Format: int32
       * @enum {integer}
       */
      costCalculationMethod?: 0 | 1;
      forexRatesSnapshot?: string | null;
      /** Format: double */
      forexRate?: number;
      /** Format: double */
      totalBaseAmountInUsd?: number;
      /** Format: double */
      totalProfitInUsd?: number;
      /** Format: double */
      totalDetailAmountInUsd?: number;
      /** Format: double */
      totalTaxBaseInUsd?: number;
      /** Format: double */
      totalDiscountsInUsd?: number;
      /** Format: double */
      totalTaxesInUsd?: number;
      /** Format: double */
      totalWithholdingTaxesInUsd?: number;
      /** Format: double */
      totalShippingCostInUsd?: number;
      /** Format: double */
      totalShippingTaxesInUsd?: number;
      /** Format: double */
      totalWarrantyCostInUsd?: number;
      /** Format: double */
      totalReturnCostInUsd?: number;
      /** Format: double */
      totalRefundCostInUsd?: number;
      /** Format: double */
      totalSurchargesInUsd?: number;
      /** Format: double */
      totalAmountInUsd?: number;
      /** Format: double */
      totalGlobalDiscountsInUsd?: number;
      /** Format: double */
      totalGlobalSurchargesInUsd?: number;
      /** Format: double */
      customGlobalSurchargesAmount?: number;
      /** Format: double */
      customGlobalDiscountsAmount?: number;
      /** Format: double */
      customBaseAmount?: number;
      /** Format: double */
      customDetailAmount?: number;
      /** Format: double */
      customDiscountsAmount?: number;
      /** Format: double */
      customTaxBase?: number;
      /** Format: double */
      customSurchargesAmount?: number;
      /** Format: double */
      customProfitAmount?: number;
      /** Format: double */
      customShippingCostAmount?: number;
      /** Format: double */
      customShippingTaxAmount?: number;
      /** Format: double */
      customTaxAmount?: number;
      /** Format: double */
      customWithholdingTaxAmount?: number;
      /** Format: double */
      customTotalAmount?: number;
      returnPolicyId?: string | null;
      refundPolicyId?: string | null;
      warrantyPolicyId?: string | null;
      shipmentPolicyId?: string | null;
      shippingLocationId?: string | null;
      locationId?: string | null;
      quoteItemRecordId?: string | null;
      businessProfileRecordId?: string | null;
      parentBillingItemRecordId?: string | null;
      invoiceId?: string | null;
    };
    InvoiceLineDtoEnvelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
      result?: components["schemas"]["InvoiceLineDto"];
    };
    InvoiceLineDtoListEnvelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
      result?: components["schemas"]["InvoiceLineDto"][] | null;
    };
    InvoiceLineUpdateDto: {
      /** Format: double */
      price?: number;
      unitId?: string | null;
      /** Format: double */
      percent?: number;
      unitGroupId?: string | null;
      currencyId?: string | null;
      discountListId?: string | null;
      roundingPolicyId?: string | null;
      /** Format: int32 */
      quantity?: number;
      itemId?: string | null;
      itemPriceId?: string | null;
      invoiceLineId?: string | null;
      /** Format: double */
      taxAmountInUsd?: number;
      /** Format: double */
      taxBaseAmountInUsd?: number;
    };
    InvoiceReferenceCreateDto: {
      /** Format: uuid */
      id?: string;
      /** Format: date-time */
      timestamp?: string;
      tenantId?: string | null;
      enrollmentId?: string | null;
      referralInvoiceId?: string | null;
      referencedInvoiceId?: string | null;
    };
    InvoiceReferenceDto: {
      id?: string | null;
      /** Format: date-time */
      timestamp?: string | null;
      tenantId?: string | null;
      enrollmentId?: string | null;
      referralInvoiceId?: string | null;
      referencedInvoiceId?: string | null;
    };
    InvoiceReferenceDtoEnvelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
      result?: components["schemas"]["InvoiceReferenceDto"];
    };
    InvoiceReferenceDtoListEnvelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
      result?: components["schemas"]["InvoiceReferenceDto"][] | null;
    };
    InvoiceReferenceUpdateDto: {
      referencedInvoiceId?: string | null;
    };
    InvoiceUpdateDto: {
      closed?: boolean;
      title?: string | null;
      userId?: string | null;
      tenantId?: string | null;
      /** Format: double */
      forexRate?: number;
      currencyId?: string | null;
      priceListId?: string | null;
      description?: string | null;
      enrollmentId?: string | null;
      individualId?: string | null;
      paymentTermId?: string | null;
      organizationId?: string | null;
      receiverTenantId?: string | null;
      firstName?: string | null;
      lastName?: string | null;
      companyName?: string | null;
      billingEmail?: string | null;
      addressLine1?: string | null;
      addressLine2?: string | null;
      postalCode?: string | null;
      countryId?: string | null;
      stateId?: string | null;
      cityId?: string | null;
      billingLocationId?: string | null;
      shippingLocationId?: string | null;
      shippingMethodId?: string | null;
    };
    Money: {
      /** Format: double */
      amount?: number;
      currency?: components["schemas"]["Currency"];
    };
    MoneyEnvelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
      result?: components["schemas"]["Money"];
    };
    SimpleContactDto: {
      id?: string | null;
      /** Format: date-time */
      timestamp?: string | null;
      qualifiedName?: string | null;
      tenantId?: string | null;
      /**
       * Format: int32
       * @enum {integer}
       */
      type?: 0 | 1;
      publicName?: string | null;
      firstName?: string | null;
      lastName?: string | null;
      jobTitle?: string | null;
      coverUrl?: string | null;
      avatarUrl?: string | null;
      countryId?: string | null;
      timezoneId?: string | null;
      languageId?: string | null;
      socialProfileId?: string | null;
      webUrl?: string | null;
      gitHubUrl?: string | null;
      twitchUrl?: string | null;
      redditUrl?: string | null;
      tikTokUrl?: string | null;
      websiteUrl?: string | null;
      twitterUrl?: string | null;
      facebookUrl?: string | null;
      youTubeUrl?: string | null;
      linkedInUrl?: string | null;
      instagramUrl?: string | null;
      githubUsername?: string | null;
    };
    SimpleTenantEnrolmentDto: {
      id?: string | null;
      /** Format: date-time */
      timestamp?: string | null;
      tenantId?: string | null;
      userId?: string | null;
    };
    SimpleUserDto: {
      id?: string | null;
      /** Format: date-time */
      timestamp?: string | null;
      fullName?: string | null;
      qualifiedName?: string | null;
      publicName?: string | null;
      lastName?: string | null;
      firstName?: string | null;
      coverUrl?: string | null;
      avatarUrl?: string | null;
      gitHubUrl?: string | null;
      countryId?: string | null;
      timezoneId?: string | null;
      websiteUrl?: string | null;
      twitterUrl?: string | null;
      youTubeUrl?: string | null;
      linkedInUrl?: string | null;
      facebookUrl?: string | null;
      instagramUrl?: string | null;
      socialProfileId?: string | null;
    };
    TenantDto: {
      id?: string | null;
      /** Format: date-time */
      timestamp?: string | null;
      qualifiedName?: string | null;
      taxId?: string | null;
      about?: string | null;
      walletId?: string | null;
      socialFeedId?: string | null;
      businessIndustryId?: string | null;
      businessSegmentId?: string | null;
      socialProfileId?: string | null;
      languageId?: string | null;
      name?: string | null;
      duns?: string | null;
      slogan?: string | null;
      legalName?: string | null;
      coverUrl?: string | null;
      avatarUrl?: string | null;
      cartId?: string | null;
      currencyId?: string | null;
      timezoneId?: string | null;
      countryId?: string | null;
      stateId?: string | null;
      cityId?: string | null;
      email?: string | null;
      phone?: string | null;
      webUrl?: string | null;
      facebookUrl?: string | null;
      twitterUrl?: string | null;
      gitHubUrl?: string | null;
      linkedInUrl?: string | null;
      instagramUrl?: string | null;
      youTubeUrl?: string | null;
      whatsAppNumber?: string | null;
      supportPhoneNumber?: string | null;
      verified?: boolean;
      businessName?: string | null;
      businessLegalName?: string | null;
      twitterUsername?: string | null;
    };
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}

export type $defs = Record<string, never>;

export type external = Record<string, never>;

export interface operations {

  GetInvoiceAsync: {
    parameters: {
      query: {
        tenantId: string;
      };
      path: {
        invoiceId: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["InvoiceDtoEnvelope"];
          "application/xml": components["schemas"]["InvoiceDtoEnvelope"];
        };
      };
      /** @description Not Found */
      404: {
        content: {
          "application/json": components["schemas"]["ErrorEnvelope"];
          "application/xml": components["schemas"]["ErrorEnvelope"];
        };
      };
    };
  };
}
