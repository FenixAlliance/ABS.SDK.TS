/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */


export interface paths {
  "/api/v2/SupportService/SupportEntitlements": {
    get: {
      parameters: {
        query?: {
          tenantId?: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["SupportEntitlementDtoListEnvelope"];
            "application/xml": components["schemas"]["SupportEntitlementDtoListEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    post: {
      parameters: {
        query?: {
          tenantId?: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["SupportEntitlementCreateDto"];
          "application/xml": components["schemas"]["SupportEntitlementCreateDto"];
        };
      };
      responses: {
        /** @description Created */
        201: {
          content: {
            "application/json": components["schemas"]["EmptyEnvelope"];
            "application/xml": components["schemas"]["EmptyEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/SupportService/SupportEntitlements/Count": {
    get: {
      parameters: {
        query?: {
          tenantId?: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["Int32Envelope"];
            "application/xml": components["schemas"]["Int32Envelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/SupportService/SupportEntitlements/{supportEntitlementId}": {
    get: {
      parameters: {
        query?: {
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          supportEntitlementId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["SupportEntitlementDtoEnvelope"];
            "application/xml": components["schemas"]["SupportEntitlementDtoEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    put: {
      parameters: {
        query?: {
          tenantId?: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          supportEntitlementId: string;
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["SupportEntitlementUpdateDto"];
          "application/xml": components["schemas"]["SupportEntitlementUpdateDto"];
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["EmptyEnvelope"];
            "application/xml": components["schemas"]["EmptyEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    delete: {
      parameters: {
        query?: {
          tenantId?: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          supportEntitlementId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["EmptyEnvelope"];
            "application/xml": components["schemas"]["EmptyEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/SupportService/SupportRequestAttachments": {
    get: {
      parameters: {
        query?: {
          tenantId?: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["SupportRequestAttachmentDtoListEnvelope"];
            "application/xml": components["schemas"]["SupportRequestAttachmentDtoListEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    post: {
      parameters: {
        query?: {
          tenantId?: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["SupportRequestAttachmentCreateDto"];
          "application/xml": components["schemas"]["SupportRequestAttachmentCreateDto"];
        };
      };
      responses: {
        /** @description Created */
        201: {
          content: {
            "application/json": components["schemas"]["EmptyEnvelope"];
            "application/xml": components["schemas"]["EmptyEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/SupportService/SupportRequestAttachments/Count": {
    get: {
      parameters: {
        query?: {
          tenantId?: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["Int32Envelope"];
            "application/xml": components["schemas"]["Int32Envelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/SupportService/SupportRequestAttachments/{supportRequestAttachmentId}": {
    get: {
      parameters: {
        query?: {
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          supportRequestAttachmentId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["SupportRequestAttachmentDtoEnvelope"];
            "application/xml": components["schemas"]["SupportRequestAttachmentDtoEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    put: {
      parameters: {
        query?: {
          tenantId?: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          supportRequestAttachmentId: string;
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["SupportRequestAttachmentUpdateDto"];
          "application/xml": components["schemas"]["SupportRequestAttachmentUpdateDto"];
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["EmptyEnvelope"];
            "application/xml": components["schemas"]["EmptyEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    delete: {
      parameters: {
        query?: {
          tenantId?: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          supportRequestAttachmentId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["EmptyEnvelope"];
            "application/xml": components["schemas"]["EmptyEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/SupportService/SupportRequests": {
    get: {
      parameters: {
        query?: {
          tenantId?: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["SupportRequestDtoListEnvelope"];
            "application/xml": components["schemas"]["SupportRequestDtoListEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    post: {
      parameters: {
        query?: {
          tenantId?: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["SupportRequestCreateDto"];
          "application/xml": components["schemas"]["SupportRequestCreateDto"];
        };
      };
      responses: {
        /** @description Created */
        201: {
          content: {
            "application/json": components["schemas"]["EmptyEnvelope"];
            "application/xml": components["schemas"]["EmptyEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/SupportService/SupportRequests/Count": {
    get: {
      parameters: {
        query?: {
          tenantId?: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["Int32Envelope"];
            "application/xml": components["schemas"]["Int32Envelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/SupportService/SupportRequests/{supportRequestId}": {
    get: {
      parameters: {
        query?: {
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          supportRequestId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["SupportRequestDtoEnvelope"];
            "application/xml": components["schemas"]["SupportRequestDtoEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    put: {
      parameters: {
        query?: {
          tenantId?: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          supportRequestId: string;
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["SupportRequestUpdateDto"];
          "application/xml": components["schemas"]["SupportRequestUpdateDto"];
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["EmptyEnvelope"];
            "application/xml": components["schemas"]["EmptyEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    delete: {
      parameters: {
        query?: {
          tenantId?: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          supportRequestId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["EmptyEnvelope"];
            "application/xml": components["schemas"]["EmptyEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/SupportService/SupportRequests/{supportRequestId}/Tickets": {
    get: {
      parameters: {
        query?: {
          tenantId?: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          supportRequestId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["SupportTicketDtoListEnvelope"];
            "application/xml": components["schemas"]["SupportTicketDtoListEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/SupportService/SupportRequests/{supportRequestId}/Attachments": {
    get: {
      parameters: {
        query?: {
          tenantId?: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          supportRequestId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["SupportRequestAttachmentDtoListEnvelope"];
            "application/xml": components["schemas"]["SupportRequestAttachmentDtoListEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    post: {
      parameters: {
        query?: {
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          supportRequestId: string;
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["SupportRequestAttachmentCreateDto"];
          "application/xml": components["schemas"]["SupportRequestAttachmentCreateDto"];
        };
      };
      responses: {
        /** @description Created */
        201: {
          content: {
            "application/json": components["schemas"]["EmptyEnvelope"];
            "application/xml": components["schemas"]["EmptyEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/SupportService/SupportRequests/{supportRequestId}/Attachments/Count": {
    get: {
      parameters: {
        query?: {
          tenantId?: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          supportRequestId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["Int32Envelope"];
            "application/xml": components["schemas"]["Int32Envelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/SupportService/SupportRequests/{supportRequestId}/Attachments/{attachmentId}": {
    get: {
      parameters: {
        query?: {
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          supportRequestId: string;
          attachmentId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["SupportRequestAttachmentDtoEnvelope"];
            "application/xml": components["schemas"]["SupportRequestAttachmentDtoEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/SupportService/SupportTicketPriorities": {
    get: {
      parameters: {
        query?: {
          tenantId?: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["SupportTicketPriorityDtoListEnvelope"];
            "application/xml": components["schemas"]["SupportTicketPriorityDtoListEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    post: {
      parameters: {
        query?: {
          tenantId?: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["SupportTicketPriorityCreateDto"];
          "application/xml": components["schemas"]["SupportTicketPriorityCreateDto"];
        };
      };
      responses: {
        /** @description Created */
        201: {
          content: {
            "application/json": components["schemas"]["EmptyEnvelope"];
            "application/xml": components["schemas"]["EmptyEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/SupportService/SupportTicketPriorities/Count": {
    get: {
      parameters: {
        query?: {
          tenantId?: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["Int32Envelope"];
            "application/xml": components["schemas"]["Int32Envelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/SupportService/SupportTicketPriorities/{supportTicketPriorityId}": {
    get: {
      parameters: {
        query?: {
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          supportTicketPriorityId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["SupportTicketPriorityDtoEnvelope"];
            "application/xml": components["schemas"]["SupportTicketPriorityDtoEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    put: {
      parameters: {
        query?: {
          tenantId?: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          supportTicketPriorityId: string;
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["SupportTicketPriorityUpdateDto"];
          "application/xml": components["schemas"]["SupportTicketPriorityUpdateDto"];
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["EmptyEnvelope"];
            "application/xml": components["schemas"]["EmptyEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    delete: {
      parameters: {
        query?: {
          tenantId?: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          supportTicketPriorityId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["EmptyEnvelope"];
            "application/xml": components["schemas"]["EmptyEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/SupportService/SupportTickets": {
    get: {
      parameters: {
        query?: {
          tenantId?: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["SupportTicketDtoListEnvelope"];
            "application/xml": components["schemas"]["SupportTicketDtoListEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    post: {
      parameters: {
        query?: {
          tenantId?: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["SupportTicketCreateDto"];
          "application/xml": components["schemas"]["SupportTicketCreateDto"];
        };
      };
      responses: {
        /** @description Created */
        201: {
          content: {
            "application/json": components["schemas"]["EmptyEnvelope"];
            "application/xml": components["schemas"]["EmptyEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/SupportService/SupportTickets/Count": {
    get: {
      parameters: {
        query?: {
          tenantId?: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["Int32Envelope"];
            "application/xml": components["schemas"]["Int32Envelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/SupportService/SupportTickets/{supportTicketId}": {
    get: {
      parameters: {
        query?: {
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          supportTicketId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["SupportTicketDtoEnvelope"];
            "application/xml": components["schemas"]["SupportTicketDtoEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    put: {
      parameters: {
        query?: {
          tenantId?: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          supportTicketId: string;
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["SupportTicketUpdateDto"];
          "application/xml": components["schemas"]["SupportTicketUpdateDto"];
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["EmptyEnvelope"];
            "application/xml": components["schemas"]["EmptyEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    delete: {
      parameters: {
        query?: {
          tenantId?: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          supportTicketId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["EmptyEnvelope"];
            "application/xml": components["schemas"]["EmptyEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/SupportService/SupportTickets/{supportTicketId}/Conversations": {
    get: {
      parameters: {
        query?: {
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          supportTicketId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["SupportTicketConversationDtoListEnvelope"];
            "application/xml": components["schemas"]["SupportTicketConversationDtoListEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    post: {
      parameters: {
        query?: {
          tenantId?: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          supportTicketId: string;
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["SupportTicketConversationCreateDto"];
          "application/xml": components["schemas"]["SupportTicketConversationCreateDto"];
        };
      };
      responses: {
        /** @description Created */
        201: {
          content: {
            "application/json": components["schemas"]["EmptyEnvelope"];
            "application/xml": components["schemas"]["EmptyEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/SupportService/SupportTickets/{supportTicketId}/Conversations/{supportTicketConversationId}": {
    get: {
      parameters: {
        query?: {
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          supportTicketId: string;
          supportTicketConversationId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["SupportTicketConversationDtoEnvelope"];
            "application/xml": components["schemas"]["SupportTicketConversationDtoEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    delete: {
      parameters: {
        query?: {
          tenantId?: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          supportTicketId: string;
          supportTicketConversationId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["EmptyEnvelope"];
            "application/xml": components["schemas"]["EmptyEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/SupportService/SupportTickets/{supportTicketId}/Conversations/{supportTicketConversationId}/Messages": {
    get: {
      parameters: {
        query?: {
          pageNumber?: number;
          pageSize?: number;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          supportTicketConversationId: string;
          supportTicketId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["PrivateMessageDtoListEnvelope"];
            "application/xml": components["schemas"]["PrivateMessageDtoListEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/SupportService/SupportTicketTypes": {
    get: {
      parameters: {
        query?: {
          tenantId?: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["SupportTicketTypeDtoListEnvelope"];
            "application/xml": components["schemas"]["SupportTicketTypeDtoListEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    post: {
      parameters: {
        query?: {
          tenantId?: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["SupportTicketTypeCreateDto"];
          "application/xml": components["schemas"]["SupportTicketTypeCreateDto"];
        };
      };
      responses: {
        /** @description Created */
        201: {
          content: {
            "application/json": components["schemas"]["EmptyEnvelope"];
            "application/xml": components["schemas"]["EmptyEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/SupportService/SupportTicketTypes/Count": {
    get: {
      parameters: {
        query?: {
          tenantId?: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["Int32Envelope"];
            "application/xml": components["schemas"]["Int32Envelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
  "/api/v2/SupportService/SupportTicketTypes/{supportTicketTypeId}": {
    get: {
      parameters: {
        query?: {
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          supportTicketTypeId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["SupportTicketTypeDtoEnvelope"];
            "application/xml": components["schemas"]["SupportTicketTypeDtoEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    put: {
      parameters: {
        query?: {
          tenantId?: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          supportTicketTypeId: string;
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["SupportTicketTypeUpdateDto"];
          "application/xml": components["schemas"]["SupportTicketTypeUpdateDto"];
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["EmptyEnvelope"];
            "application/xml": components["schemas"]["EmptyEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
    delete: {
      parameters: {
        query?: {
          tenantId?: string;
          "api-version"?: string;
        };
        header?: {
          "x-api-version"?: string;
        };
        path: {
          supportTicketTypeId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["EmptyEnvelope"];
            "application/xml": components["schemas"]["EmptyEnvelope"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorEnvelope"];
            "application/xml": components["schemas"]["ErrorEnvelope"];
          };
        };
      };
    };
  };
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: {
    EmptyEnvelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
    };
    ErrorEnvelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
    };
    Int32Envelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
      /** Format: int32 */
      result?: number;
    };
    PrivateMessageDto: {
      id?: string | null;
      /** Format: date-time */
      timestamp?: string | null;
      read?: boolean;
      title?: string | null;
      message?: string | null;
      conversationId?: string | null;
      senderSocialProfileId?: string | null;
      receiverSocialProfileID?: string | null;
      /** Format: date-time */
      sentTimestamp?: string;
      /** Format: date-time */
      readTimestamp?: string;
      /** Format: date-time */
      receivedTimestamp?: string;
    };
    PrivateMessageDtoListEnvelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
      result?: components["schemas"]["PrivateMessageDto"][] | null;
    };
    SupportEntitlementCreateDto: {
      /** Format: uuid */
      id?: string;
      /** Format: date-time */
      timestamp?: string;
      title?: string | null;
      description?: string | null;
      /** Format: date-time */
      startDateTime?: string;
      /** Format: date-time */
      endDateTime?: string;
      /** Format: date-time */
      nextInvoiceDateTime?: string;
      code?: string | null;
      signature?: string | null;
      /** Format: int32 */
      quantity?: number;
      /** Format: int32 */
      repetitions?: number;
      /** Format: int32 */
      chargeAttempts?: number;
      /** Format: int32 */
      freeTrialInDays?: number;
      /** Format: int32 */
      gracePeriodInDays?: number;
      /** Format: int32 */
      customRenewalPeriod?: number;
      enableAutomaticRenew?: boolean;
      enableProRateBilling?: boolean;
      enableUsageThreshold?: boolean;
      enableAutomaticDisable?: boolean;
      enableAutomaticPayments?: boolean;
      /** Format: int32 */
      usageThreshold?: number;
      data?: string | null;
      dataLabel?: string | null;
      data1?: string | null;
      data1Label?: string | null;
      data2?: string | null;
      data2Label?: string | null;
      data3?: string | null;
      data3Label?: string | null;
      data4?: string | null;
      data4Label?: string | null;
      data5?: string | null;
      data5Label?: string | null;
      data6?: string | null;
      data6Label?: string | null;
      data7?: string | null;
      data7Label?: string | null;
      data8?: string | null;
      data8Label?: string | null;
      data9?: string | null;
      data9Label?: string | null;
      accountHolderID?: string | null;
      individualID?: string | null;
      organizationID?: string | null;
      receiverBusinessID?: string | null;
      businessID?: string | null;
      businessProfileRecordID?: string | null;
      paymentTokenID?: string | null;
      walletAccountID?: string | null;
      securityCertificateID?: string | null;
    };
    SupportEntitlementDto: {
      id?: string | null;
      /** Format: date-time */
      timestamp?: string | null;
      title?: string | null;
      description?: string | null;
      /** Format: date-time */
      startDateTime?: string;
      /** Format: date-time */
      endDateTime?: string;
      /** Format: date-time */
      nextInvoiceDateTime?: string;
      code?: string | null;
      signature?: string | null;
      /** Format: int32 */
      quantity?: number;
      /** Format: int32 */
      repetitions?: number;
      /** Format: int32 */
      chargeAttempts?: number;
      /** Format: int32 */
      freeTrialInDays?: number;
      /** Format: int32 */
      gracePeriodInDays?: number;
      /** Format: int32 */
      customRenewalPeriod?: number;
      enableAutomaticRenew?: boolean;
      enableProRateBilling?: boolean;
      enableUsageThreshold?: boolean;
      enableAutomaticDisable?: boolean;
      enableAutomaticPayments?: boolean;
      /** Format: int32 */
      usageThreshold?: number;
      data?: string | null;
      dataLabel?: string | null;
      data1?: string | null;
      data1Label?: string | null;
      data2?: string | null;
      data2Label?: string | null;
      data3?: string | null;
      data3Label?: string | null;
      data4?: string | null;
      data4Label?: string | null;
      data5?: string | null;
      data5Label?: string | null;
      data6?: string | null;
      data6Label?: string | null;
      data7?: string | null;
      data7Label?: string | null;
      data8?: string | null;
      data8Label?: string | null;
      data9?: string | null;
      data9Label?: string | null;
      accountHolderID?: string | null;
      individualID?: string | null;
      organizationID?: string | null;
      receiverBusinessID?: string | null;
      businessID?: string | null;
      businessProfileRecordID?: string | null;
      paymentTokenID?: string | null;
      walletAccountID?: string | null;
      securityCertificateID?: string | null;
    };
    SupportEntitlementDtoEnvelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
      result?: components["schemas"]["SupportEntitlementDto"];
    };
    SupportEntitlementDtoListEnvelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
      result?: components["schemas"]["SupportEntitlementDto"][] | null;
    };
    SupportEntitlementUpdateDto: {
      title?: string | null;
      description?: string | null;
      /** Format: date-time */
      endDateTime?: string;
      /** Format: date-time */
      nextInvoiceDateTime?: string;
      code?: string | null;
      signature?: string | null;
      /** Format: int32 */
      quantity?: number;
      /** Format: int32 */
      repetitions?: number;
      /** Format: int32 */
      chargeAttempts?: number;
      /** Format: int32 */
      freeTrialInDays?: number;
      /** Format: int32 */
      gracePeriodInDays?: number;
      /** Format: int32 */
      customRenewalPeriod?: number;
      enableAutomaticRenew?: boolean;
      enableProRateBilling?: boolean;
      enableUsageThreshold?: boolean;
      enableAutomaticDisable?: boolean;
      enableAutomaticPayments?: boolean;
      /** Format: int32 */
      usageThreshold?: number;
      data?: string | null;
      dataLabel?: string | null;
      data1?: string | null;
      data1Label?: string | null;
      data2?: string | null;
      data2Label?: string | null;
      data3?: string | null;
      data3Label?: string | null;
      data4?: string | null;
      data4Label?: string | null;
      data5?: string | null;
      data5Label?: string | null;
      data6?: string | null;
      data6Label?: string | null;
      data7?: string | null;
      data7Label?: string | null;
      data8?: string | null;
      data8Label?: string | null;
      data9?: string | null;
      data9Label?: string | null;
      accountHolderID?: string | null;
      individualID?: string | null;
      organizationID?: string | null;
      receiverBusinessID?: string | null;
      businessID?: string | null;
      businessProfileRecordID?: string | null;
      paymentTokenID?: string | null;
      walletAccountID?: string | null;
      securityCertificateID?: string | null;
    };
    SupportRequestAttachmentCreateDto: {
      /** Format: uuid */
      id?: string;
      /** Format: date-time */
      timestamp?: string;
      notes?: string | null;
      title?: string | null;
      author?: string | null;
      isFolder?: boolean;
      fileName?: string | null;
      abstract?: string | null;
      keyWords?: string | null;
      validResponse?: boolean;
      parentFileUploadId?: string | null;
      filePath?: string | null;
      /** Format: binary */
      file?: string | null;
      businessID?: string | null;
      businessProfileRecordID?: string | null;
      metadata?: string | null;
      supportRequestID?: string | null;
    };
    SupportRequestAttachmentDto: {
      id?: string | null;
      /** Format: date-time */
      timestamp?: string | null;
      notes?: string | null;
      title?: string | null;
      author?: string | null;
      isFolder?: boolean;
      hash?: string | null;
      fileUrl?: string | null;
      filePath?: string | null;
      fileName?: string | null;
      abstract?: string | null;
      keyWords?: string | null;
      metadata?: string | null;
      /** Format: int64 */
      fileLength?: number;
      contentType?: string | null;
      parentFileId?: string | null;
      validResponse?: boolean;
      userId?: string | null;
      tenantId?: string | null;
      enrollmentId?: string | null;
      socialProfileId?: string | null;
      folderPath?: string | null;
      supportRequestID?: string | null;
    };
    SupportRequestAttachmentDtoEnvelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
      result?: components["schemas"]["SupportRequestAttachmentDto"];
    };
    SupportRequestAttachmentDtoListEnvelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
      result?: components["schemas"]["SupportRequestAttachmentDto"][] | null;
    };
    SupportRequestAttachmentUpdateDto: {
      notes?: string | null;
      metadata?: string | null;
      title?: string | null;
      author?: string | null;
      isFolder?: boolean;
      fileName?: string | null;
      abstract?: string | null;
      keyWords?: string | null;
      validResponse?: boolean;
      parentFileUploadID?: string | null;
      filePath?: string | null;
      /** Format: binary */
      file?: string | null;
      contentType?: string | null;
      /** Format: int64 */
      fileLength?: number;
    };
    SupportRequestCreateDto: {
      /** Format: uuid */
      id?: string;
      /** Format: date-time */
      timestamp?: string;
      title: string;
      description?: string | null;
      approved?: boolean;
      /** Format: date-time */
      approvedTimestamp?: string;
      businessID?: string | null;
      businessProfileRecordID?: string | null;
      supportEntitlementID?: string | null;
      contactID?: string | null;
      accountHolderID?: string | null;
    };
    SupportRequestDto: {
      id?: string | null;
      /** Format: date-time */
      timestamp?: string | null;
      title?: string | null;
      description?: string | null;
      approved?: boolean;
      /** Format: date-time */
      approvedTimestamp?: string;
      businessID?: string | null;
      businessProfileRecordID?: string | null;
      supportEntitlementID?: string | null;
      contactID?: string | null;
      accountHolderID?: string | null;
    };
    SupportRequestDtoEnvelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
      result?: components["schemas"]["SupportRequestDto"];
    };
    SupportRequestDtoListEnvelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
      result?: components["schemas"]["SupportRequestDto"][] | null;
    };
    SupportRequestUpdateDto: {
      title?: string | null;
      description?: string | null;
      approved?: boolean;
      /** Format: date-time */
      approvedTimestamp?: string;
      supportEntitlementID?: string | null;
    };
    SupportTicketConversationCreateDto: {
      /** Format: uuid */
      id?: string;
      /** Format: date-time */
      timestamp?: string;
      topic?: string | null;
      closed?: boolean;
      /** Format: date-time */
      closedTimestamp?: string;
      socialProfileID?: string | null;
    };
    SupportTicketConversationDto: {
      id?: string | null;
      /** Format: date-time */
      timestamp?: string | null;
      supportTicketID?: string | null;
      topic?: string | null;
      closed?: boolean;
      /** Format: date-time */
      closedTimestamp?: string;
      socialProfileID?: string | null;
    };
    SupportTicketConversationDtoEnvelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
      result?: components["schemas"]["SupportTicketConversationDto"];
    };
    SupportTicketConversationDtoListEnvelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
      result?: components["schemas"]["SupportTicketConversationDto"][] | null;
    };
    SupportTicketCreateDto: {
      /** Format: uuid */
      id?: string;
      /** Format: date-time */
      timestamp?: string;
      description?: string | null;
      accountHolderID?: string | null;
      contactID?: string | null;
      businessID?: string | null;
      businessProfileRecordID?: string | null;
      supportTicketTypeID?: string | null;
      supportEntitlementID?: string | null;
      supportPriorityID?: string | null;
    };
    SupportTicketDto: {
      id?: string | null;
      /** Format: date-time */
      timestamp?: string | null;
      description?: string | null;
      accountHolderID?: string | null;
      contactID?: string | null;
      businessID?: string | null;
      businessProfileRecordID?: string | null;
      supportTicketTypeID?: string | null;
      supportEntitlementID?: string | null;
      supportPriorityID?: string | null;
    };
    SupportTicketDtoEnvelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
      result?: components["schemas"]["SupportTicketDto"];
    };
    SupportTicketDtoListEnvelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
      result?: components["schemas"]["SupportTicketDto"][] | null;
    };
    SupportTicketPriorityCreateDto: {
      title?: string | null;
      description?: string | null;
      businessID?: string | null;
      supportEntitlementID?: string | null;
    };
    SupportTicketPriorityDto: {
      id?: string | null;
      /** Format: date-time */
      timestamp?: string | null;
      title?: string | null;
      description?: string | null;
      businessID?: string | null;
      supportEntitlementID?: string | null;
    };
    SupportTicketPriorityDtoEnvelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
      result?: components["schemas"]["SupportTicketPriorityDto"];
    };
    SupportTicketPriorityDtoListEnvelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
      result?: components["schemas"]["SupportTicketPriorityDto"][] | null;
    };
    SupportTicketPriorityUpdateDto: {
      title?: string | null;
      description?: string | null;
    };
    SupportTicketTypeCreateDto: {
      /** Format: uuid */
      id?: string;
      /** Format: date-time */
      timestamp?: string;
      title?: string | null;
      description?: string | null;
      businessID?: string | null;
    };
    SupportTicketTypeDto: {
      id?: string | null;
      /** Format: date-time */
      timestamp?: string | null;
      title?: string | null;
      description?: string | null;
      businessID?: string | null;
    };
    SupportTicketTypeDtoEnvelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
      result?: components["schemas"]["SupportTicketTypeDto"];
    };
    SupportTicketTypeDtoListEnvelope: {
      isSuccess?: boolean;
      errorMessage?: string | null;
      correlationId?: string | null;
      /** Format: date-time */
      timestamp?: string;
      activityId?: string | null;
      result?: components["schemas"]["SupportTicketTypeDto"][] | null;
    };
    SupportTicketTypeUpdateDto: {
      id?: string | null;
      /** Format: date-time */
      timestamp?: string | null;
      title?: string | null;
      description?: string | null;
    };
    SupportTicketUpdateDto: {
      description?: string | null;
      accountHolderID?: string | null;
      contactID?: string | null;
      businessProfileRecordID?: string | null;
      supportTicketTypeID?: string | null;
      supportEntitlementID?: string | null;
      supportPriorityID?: string | null;
    };
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}

export type $defs = Record<string, never>;

export type external = Record<string, never>;

export type operations = Record<string, never>;
